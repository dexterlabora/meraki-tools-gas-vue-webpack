/**
 * MerakiDashboardAPINFOFeb21Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Body27
 */
class Body27 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.v2cEnabled = this.constructor.getValue(obj.v2cEnabled);
        this.v3Enabled = this.constructor.getValue(obj.v3Enabled);
        this.v3AuthMode = this.constructor.getValue(obj.v3AuthMode);
        this.v3AuthPass = this.constructor.getValue(obj.v3AuthPass);
        this.v3PrivMode = this.constructor.getValue(obj.v3PrivMode);
        this.v3PrivPass = this.constructor.getValue(obj.v3PrivPass);
        this.peerIps = this.constructor.getValue(obj.peerIps);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'v2cEnabled', realName: 'v2cEnabled' },
            { name: 'v3Enabled', realName: 'v3Enabled' },
            { name: 'v3AuthMode', realName: 'v3AuthMode' },
            { name: 'v3AuthPass', realName: 'v3AuthPass' },
            { name: 'v3PrivMode', realName: 'v3PrivMode' },
            { name: 'v3PrivPass', realName: 'v3PrivPass' },
            { name: 'peerIps', realName: 'peerIps' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Body27;
