const requests = [{
        "tags": [
            "devices",
            "configure"
        ],
        "method": "get",
        "description": "Return a single device",
        "url": "/devices/{serial}",
        "params": []
    },
    {
        "tags": [
            "devices",
            "configure"
        ],
        "method": "put",
        "description": "Update the attributes of a device",
        "url": "/devices/{serial}",
        "params": [{
            "name": "updateDevice",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of a device"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags of a device"
                    },
                    "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "The latitude of a device"
                    },
                    "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "The longitude of a device"
                    },
                    "address": {
                        "type": "string",
                        "description": "The address of a device"
                    },
                    "notes": {
                        "type": "string",
                        "description": "The notes for the device. String. Limited to 255 characters."
                    },
                    "moveMapMarker": {
                        "type": "boolean",
                        "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified."
                    },
                    "switchProfileId": {
                        "type": "string",
                        "description": "The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template."
                    },
                    "floorPlanId": {
                        "type": "string",
                        "description": "The floor plan to associate to this device. null disassociates the device from the floorplan."
                    }
                },
                "example": {
                    "name": "My AP",
                    "lat": 37.4180951010362,
                    "lng": -122.098531723022,
                    "serial": "Q234-ABCD-5678",
                    "mac": "00:11:22:33:44:55",
                    "tags": [
                        "recently-added"
                    ]
                }
            },
            "key": "updateDevice",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "delegatedPrefixes"
        ],
        "method": "get",
        "description": "Return current delegated IPv6 prefixes on an appliance.",
        "url": "/devices/{serial}/appliance/delegatedPrefixes",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "dhcp",
            "subnets"
        ],
        "method": "get",
        "description": "Return the DHCP subnet information for an appliance",
        "url": "/devices/{serial}/appliance/dhcp/subnets",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "performance"
        ],
        "method": "get",
        "description": "Return the performance score for a single MX. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
        "url": "/devices/{serial}/appliance/performance",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "vlanPrefixAssignments"
        ],
        "method": "get",
        "description": "Return prefixes assigned to all IPv6 enabled VLANs on an appliance.",
        "url": "/devices/{serial}/appliance/vlanPrefixAssignments",
        "params": []
    },
    {
        "tags": [
            "devices",
            "liveTools"
        ],
        "method": "post",
        "description": "Blink the LEDs on a device",
        "url": "/devices/{serial}/blinkLeds",
        "params": [{
            "name": "blinkDeviceLeds",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "integer",
                        "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds"
                    },
                    "period": {
                        "type": "integer",
                        "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds"
                    },
                    "duty": {
                        "type": "integer",
                        "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50."
                    }
                },
                "example": {
                    "duration": 20,
                    "period": 160,
                    "duty": 50
                }
            },
            "key": "blinkDeviceLeds",
            "source": "body"
        }]
    },
    {
        "tags": [
            "camera",
            "monitor",
            "analytics",
            "live"
        ],
        "method": "get",
        "description": "Returns live state from camera of analytics zones",
        "url": "/devices/{serial}/camera/analytics/live",
        "params": []
    },
    {
        "tags": [
            "camera",
            "monitor",
            "analytics",
            "overview"
        ],
        "method": "get",
        "description": "Returns an overview of aggregate analytics data for a timespan",
        "url": "/devices/{serial}/camera/analytics/overview",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "person",
                    "vehicle"
                ],
                "name": "objectType",
                "in": "query",
                "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
                "key": "objectType",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "camera",
            "monitor",
            "analytics",
            "recent"
        ],
        "method": "get",
        "description": "Returns most recent record for analytics zones",
        "url": "/devices/{serial}/camera/analytics/recent",
        "params": [{
            "type": "string",
            "enum": [
                "person",
                "vehicle"
            ],
            "name": "objectType",
            "in": "query",
            "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
            "key": "objectType",
            "source": "query"
        }]
    },
    {
        "tags": [
            "camera",
            "monitor",
            "analytics",
            "zones"
        ],
        "method": "get",
        "description": "Returns all configured analytic zones for this camera",
        "url": "/devices/{serial}/camera/analytics/zones",
        "params": []
    },
    {
        "tags": [
            "camera",
            "monitor",
            "analytics",
            "zones",
            "history"
        ],
        "method": "get",
        "description": "Return historical records for analytic zones",
        "url": "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "person",
                    "vehicle"
                ],
                "name": "objectType",
                "in": "query",
                "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
                "key": "objectType",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "camera",
            "monitor"
        ],
        "method": "post",
        "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "url": "/devices/{serial}/camera/generateSnapshot",
        "params": [{
            "name": "generateDeviceCameraSnapshot",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time."
                    },
                    "fullframe": {
                        "type": "boolean",
                        "description": "[optional] If set to \"true\" the snapshot will be taken at full sensor resolution. This will error if used with timestamp."
                    }
                },
                "example": {}
            },
            "key": "generateDeviceCameraSnapshot",
            "source": "body"
        }]
    },
    {
        "tags": [
            "camera",
            "configure",
            "qualityAndRetention"
        ],
        "method": "get",
        "description": "Returns quality and retention settings for the given camera",
        "url": "/devices/{serial}/camera/qualityAndRetention",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "qualityAndRetention"
        ],
        "method": "put",
        "description": "Update quality and retention settings for the given camera",
        "url": "/devices/{serial}/camera/qualityAndRetention",
        "params": [{
            "name": "updateDeviceCameraQualityAndRetention",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "profileId": {
                        "type": "string",
                        "description": "The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera."
                    },
                    "motionBasedRetentionEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera"
                    },
                    "audioRecordingEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera"
                    },
                    "restrictedBandwidthModeEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera"
                    },
                    "quality": {
                        "type": "string",
                        "enum": [
                            "Standard",
                            "High",
                            "Enhanced"
                        ],
                        "description": "Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model."
                    },
                    "resolution": {
                        "type": "string",
                        "enum": [
                            "1280x720",
                            "1920x1080",
                            "1080x1080",
                            "2058x2058"
                        ],
                        "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are supported by every camera model."
                    },
                    "motionDetectorVersion": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ],
                        "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                    }
                },
                "example": {
                    "motionBasedRetentionEnabled": false,
                    "audioRecordingEnabled": false,
                    "restrictedBandwidthModeEnabled": false,
                    "profileId": null,
                    "quality": "Standard",
                    "motionDetectorVersion": 2,
                    "resolution": 720
                }
            },
            "key": "updateDeviceCameraQualityAndRetention",
            "source": "body"
        }]
    },
    {
        "tags": [
            "camera",
            "configure",
            "sense"
        ],
        "method": "get",
        "description": "Returns sense settings for a given camera",
        "url": "/devices/{serial}/camera/sense",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "sense"
        ],
        "method": "put",
        "description": "Update sense settings for the given camera",
        "url": "/devices/{serial}/camera/sense",
        "params": [{
            "name": "updateDeviceCameraSense",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "senseEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating if sense(license) is enabled(true) or disabled(false) on the camera"
                    },
                    "mqttBrokerId": {
                        "type": "string",
                        "description": "The ID of the MQTT broker to be enabled on the camera. A value of null will disable MQTT on the camera"
                    },
                    "detectionModelId": {
                        "type": "string",
                        "description": "The ID of the object detection model"
                    }
                },
                "example": {
                    "senseEnabled": true,
                    "mqttBrokerId": "1234"
                }
            },
            "key": "updateDeviceCameraSense",
            "source": "body"
        }]
    },
    {
        "tags": [
            "camera",
            "configure",
            "sense",
            "objectDetectionModels"
        ],
        "method": "get",
        "description": "Returns the MV Sense object detection model list for the given camera",
        "url": "/devices/{serial}/camera/sense/objectDetectionModels",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "video",
            "settings"
        ],
        "method": "get",
        "description": "Returns video settings for the given camera",
        "url": "/devices/{serial}/camera/video/settings",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "video",
            "settings"
        ],
        "method": "put",
        "description": "Update video settings for the given camera",
        "url": "/devices/{serial}/camera/video/settings",
        "params": [{
            "name": "updateDeviceCameraVideoSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "externalRtspEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating if external rtsp stream is exposed"
                    }
                },
                "example": {
                    "externalRtspEnabled": true
                }
            },
            "key": "updateDeviceCameraVideoSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "camera",
            "configure",
            "videoLink"
        ],
        "method": "get",
        "description": "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.",
        "url": "/devices/{serial}/camera/videoLink",
        "params": [{
            "type": "string",
            "format": "date-time",
            "name": "timestamp",
            "in": "query",
            "description": "[optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time.",
            "key": "timestamp",
            "source": "query"
        }]
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "lan"
        ],
        "method": "get",
        "description": "Show the LAN Settings of a MG",
        "url": "/devices/{serial}/cellularGateway/lan",
        "params": []
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "lan"
        ],
        "method": "put",
        "description": "Update the LAN Settings for a single MG.",
        "url": "/devices/{serial}/cellularGateway/lan",
        "params": [{
            "name": "updateDeviceCellularGatewayLan",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "reservedIpRanges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "type": "string",
                                    "description": "Starting IP included in the reserved range of IPs"
                                },
                                "end": {
                                    "type": "string",
                                    "description": "Ending IP included in the reserved range of IPs"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment explaining the reserved IP range"
                                }
                            },
                            "required": [
                                "start",
                                "end",
                                "comment"
                            ]
                        },
                        "description": "list of all reserved IP ranges for a single MG"
                    },
                    "fixedIpAssignments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "A descriptive name of the assignment"
                                },
                                "ip": {
                                    "type": "string",
                                    "description": "The IP address you want to assign to a specific server or device"
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address"
                                }
                            },
                            "required": [
                                "ip",
                                "mac"
                            ]
                        },
                        "description": "list of all fixed IP assignments for a single MG"
                    }
                },
                "example": {
                    "deviceName": "name of the MG",
                    "deviceLanIp": "192.168.0.33",
                    "deviceSubnet": "192.168.0.32/27",
                    "fixedIpAssignments": [{
                            "mac": "0b:00:00:00:00:ac",
                            "name": "server 1",
                            "ip": "192.168.0.10"
                        },
                        {
                            "mac": "0b:00:00:00:00:ab",
                            "name": "server 2",
                            "ip": "192.168.0.20"
                        }
                    ],
                    "reservedIpRanges": [{
                        "start": "192.168.1.0",
                        "end": "192.168.1.1",
                        "comment": "A reserved IP range"
                    }]
                }
            },
            "key": "updateDeviceCellularGatewayLan",
            "source": "body"
        }]
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "portForwardingRules"
        ],
        "method": "get",
        "description": "Returns the port forwarding rules for a single MG.",
        "url": "/devices/{serial}/cellularGateway/portForwardingRules",
        "params": []
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "portForwardingRules"
        ],
        "method": "put",
        "description": "Updates the port forwarding rules for a single MG.",
        "url": "/devices/{serial}/cellularGateway/portForwardingRules",
        "params": [{
            "name": "updateDeviceCellularGatewayPortForwardingRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "A descriptive name for the rule"
                                },
                                "lanIp": {
                                    "type": "string",
                                    "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN"
                                },
                                "publicPort": {
                                    "type": "string",
                                    "description": "A port or port ranges that will be forwarded to the host on the LAN"
                                },
                                "localPort": {
                                    "type": "string",
                                    "description": "A port or port ranges that will receive the forwarded traffic from the WAN"
                                },
                                "allowedIps": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges."
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "TCP or UDP"
                                },
                                "access": {
                                    "type": "string",
                                    "description": "`any` or `restricted`. Specify the right to make inbound connections on the specified ports or port ranges. If `restricted`, a list of allowed IPs is mandatory."
                                }
                            },
                            "required": [
                                "lanIp",
                                "publicPort",
                                "localPort",
                                "protocol",
                                "access"
                            ]
                        },
                        "description": "An array of port forwarding params"
                    }
                },
                "example": {
                    "rules": [{
                            "lanIp": "172.31.128.5",
                            "name": "test",
                            "access": "any",
                            "publicPort": "11-12",
                            "localPort": "4",
                            "uplink": "both",
                            "protocol": "tcp"
                        },
                        {
                            "lanIp": "172.31.128.5",
                            "name": "test 2",
                            "access": "restricted",
                            "allowedIps": [
                                "10.10.10.10",
                                "10.10.10.11"
                            ],
                            "publicPort": "99",
                            "localPort": "5",
                            "uplink": "both",
                            "protocol": "tcp"
                        }
                    ]
                }
            },
            "key": "updateDeviceCellularGatewayPortForwardingRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "devices",
            "monitor",
            "clients"
        ],
        "method": "get",
        "description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
        "url": "/devices/{serial}/clients",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "devices",
            "monitor",
            "lldpCdp"
        ],
        "method": "get",
        "description": "List LLDP and CDP information for a device",
        "url": "/devices/{serial}/lldpCdp",
        "params": []
    },
    {
        "tags": [
            "devices",
            "monitor",
            "lossAndLatencyHistory"
        ],
        "method": "get",
        "description": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
        "url": "/devices/{serial}/lossAndLatencyHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "wan1",
                    "wan2",
                    "cellular"
                ],
                "name": "uplink",
                "in": "query",
                "description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1.",
                "key": "uplink",
                "source": "query"
            },
            {
                "type": "string",
                "name": "ip",
                "in": "query",
                "required": true,
                "description": "The destination IP used to obtain the requested stats. This is required.",
                "key": "ip",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "devices",
            "configure",
            "managementInterface"
        ],
        "method": "get",
        "description": "Return the management interface settings for a device",
        "url": "/devices/{serial}/managementInterface",
        "params": []
    },
    {
        "tags": [
            "devices",
            "configure",
            "managementInterface"
        ],
        "method": "put",
        "description": "Update the management interface settings for a device",
        "url": "/devices/{serial}/managementInterface",
        "params": [{
            "name": "updateDeviceManagementInterface",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "wan1": {
                        "type": "object",
                        "properties": {
                            "wanEnabled": {
                                "type": "string",
                                "enum": [
                                    "enabled",
                                    "disabled",
                                    "not configured"
                                ],
                                "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'."
                            },
                            "usingStaticIp": {
                                "type": "boolean",
                                "description": "Configue the interface to have static IP settings or use DHCP."
                            },
                            "staticIp": {
                                "type": "string",
                                "description": "The IP the device should use on the WAN."
                            },
                            "staticGatewayIp": {
                                "type": "string",
                                "description": "The IP of the gateway on the WAN."
                            },
                            "staticSubnetMask": {
                                "type": "string",
                                "description": "The subnet mask for the WAN."
                            },
                            "staticDns": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Up to two DNS IPs."
                            },
                            "vlan": {
                                "type": "integer",
                                "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                            }
                        },
                        "description": "WAN 1 settings"
                    },
                    "wan2": {
                        "type": "object",
                        "properties": {
                            "wanEnabled": {
                                "type": "string",
                                "enum": [
                                    "enabled",
                                    "disabled",
                                    "not configured"
                                ],
                                "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'."
                            },
                            "usingStaticIp": {
                                "type": "boolean",
                                "description": "Configue the interface to have static IP settings or use DHCP."
                            },
                            "staticIp": {
                                "type": "string",
                                "description": "The IP the device should use on the WAN."
                            },
                            "staticGatewayIp": {
                                "type": "string",
                                "description": "The IP of the gateway on the WAN."
                            },
                            "staticSubnetMask": {
                                "type": "string",
                                "description": "The subnet mask for the WAN."
                            },
                            "staticDns": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Up to two DNS IPs."
                            },
                            "vlan": {
                                "type": "integer",
                                "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                            }
                        },
                        "description": "WAN 2 settings (only for MX devices)"
                    }
                },
                "example": {
                    "wan1": {
                        "wanEnabled": "not configured",
                        "usingStaticIp": true,
                        "staticIp": "1.2.3.4",
                        "staticSubnetMask": "255.255.255.0",
                        "staticGatewayIp": "1.2.3.1",
                        "staticDns": [
                            "1.2.3.2",
                            "1.2.3.3"
                        ],
                        "vlan": 7
                    },
                    "wan2": {
                        "wanEnabled": "enabled",
                        "usingStaticIp": false,
                        "vlan": 2
                    }
                }
            },
            "key": "updateDeviceManagementInterface",
            "source": "body"
        }]
    },
    {
        "tags": [
            "devices",
            "liveTools"
        ],
        "method": "post",
        "description": "Reboot a device",
        "url": "/devices/{serial}/reboot",
        "params": []
    },
    {
        "tags": [
            "devices",
            "monitor",
            "sensors",
            "health",
            "historicalByGateway"
        ],
        "method": "get",
        "description": "Sensor health time series statistics reported per gateway.",
        "url": "/devices/{serial}/sensors/health/historicalByGateway",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 730 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 730 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 730 days. The default is 2 hours.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 120, 3600, 14400, 86400. The default is 120.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "rssi"
                ],
                "name": "metric",
                "in": "query",
                "required": true,
                "description": "Type of health metric we want data for.",
                "key": "metric",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "avg",
                    "max",
                    "min"
                ],
                "name": "agg",
                "in": "query",
                "description": "The aggregation algorithm to apply to the data. Supported values are \"avg\", \"max\", \"min\"",
                "key": "agg",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "gatewaySerials",
                "in": "query",
                "description": "List of gateway serials we want to see sensor health from.",
                "key": "gatewaySerials",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "devices",
            "monitor",
            "sensors",
            "health",
            "latestByGateway"
        ],
        "method": "get",
        "description": "Latest sensor health data grouped by gateway.",
        "url": "/devices/{serial}/sensors/health/latestByGateway",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 730 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 730 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 730 days. The default is 2 hours.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "rssi",
                        "uptime"
                    ]
                },
                "name": "metrics",
                "in": "query",
                "description": "Types of metrics we want the data for.",
                "key": "metrics",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "gatewaySerials",
                "in": "query",
                "description": "List of gateway serials we want to see sensor health from.",
                "key": "gatewaySerials",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "switch",
            "configure",
            "ports"
        ],
        "method": "get",
        "description": "List the switch ports for a switch",
        "url": "/devices/{serial}/switch/ports",
        "params": []
    },
    {
        "tags": [
            "switch",
            "liveTools",
            "ports"
        ],
        "method": "post",
        "description": "Cycle a set of switch ports",
        "url": "/devices/{serial}/switch/ports/cycle",
        "params": [{
            "name": "cycleDeviceSwitchPorts",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]"
                    }
                },
                "example": {
                    "ports": [
                        "1",
                        "2-5",
                        "1_MA-MOD-8X10G_1",
                        "1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8"
                    ]
                },
                "required": [
                    "ports"
                ]
            },
            "required": true,
            "key": "cycleDeviceSwitchPorts",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "monitor",
            "ports",
            "statuses"
        ],
        "method": "get",
        "description": "Return the status for all the ports of a switch",
        "url": "/devices/{serial}/switch/ports/statuses",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "switch",
            "monitor",
            "ports",
            "statuses",
            "packets"
        ],
        "method": "get",
        "description": "Return the packet counters for all the ports of a switch",
        "url": "/devices/{serial}/switch/ports/statuses/packets",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "switch",
            "configure",
            "ports"
        ],
        "method": "get",
        "description": "Return a switch port",
        "url": "/devices/{serial}/switch/ports/{portId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "ports"
        ],
        "method": "put",
        "description": "Update a switch port",
        "url": "/devices/{serial}/switch/ports/{portId}",
        "params": [{
            "name": "updateDeviceSwitchPort",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the switch port"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags of the switch port"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The status of the switch port"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "trunk",
                            "access"
                        ],
                        "description": "The type of the switch port ('trunk' or 'access')"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "The VLAN of the switch port. A null value will clear the value set for trunk ports."
                    },
                    "voiceVlan": {
                        "type": "integer",
                        "description": "The voice VLAN of the switch port. Only applicable to access ports."
                    },
                    "allowedVlans": {
                        "type": "string",
                        "description": "The VLANs allowed on the switch port. Only applicable to trunk ports."
                    },
                    "poeEnabled": {
                        "type": "boolean",
                        "description": "The PoE status of the switch port"
                    },
                    "isolationEnabled": {
                        "type": "boolean",
                        "description": "The isolation status of the switch port"
                    },
                    "rstpEnabled": {
                        "type": "boolean",
                        "description": "The rapid spanning tree protocol status"
                    },
                    "stpGuard": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "root guard",
                            "bpdu guard",
                            "loop guard"
                        ],
                        "description": "The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard')"
                    },
                    "linkNegotiation": {
                        "type": "string",
                        "description": "The link speed for the switch port"
                    },
                    "portScheduleId": {
                        "type": "string",
                        "description": "The ID of the port schedule. A value of null will clear the port schedule."
                    },
                    "udld": {
                        "type": "string",
                        "enum": [
                            "Alert only",
                            "Enforce"
                        ],
                        "description": "The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only."
                    },
                    "accessPolicyType": {
                        "type": "string",
                        "enum": [
                            "Open",
                            "Custom access policy",
                            "MAC allow list",
                            "Sticky MAC allow list"
                        ],
                        "description": "The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'"
                    },
                    "accessPolicyNumber": {
                        "type": "integer",
                        "description": "The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'"
                    },
                    "macAllowList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'"
                    },
                    "stickyMacAllowList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                    },
                    "stickyMacAllowListLimit": {
                        "type": "integer",
                        "description": "The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                    },
                    "stormControlEnabled": {
                        "type": "boolean",
                        "description": "The storm control status of the switch port"
                    },
                    "adaptivePolicyGroupId": {
                        "type": "string",
                        "description": "The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile."
                    },
                    "peerSgtCapable": {
                        "type": "boolean",
                        "description": "If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile."
                    },
                    "flexibleStackingEnabled": {
                        "type": "boolean",
                        "description": "For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled."
                    }
                },
                "example": {
                    "name": "My switch port",
                    "tags": [
                        "tag1",
                        "tag2"
                    ],
                    "enabled": true,
                    "poeEnabled": true,
                    "type": "access",
                    "vlan": 10,
                    "voiceVlan": 20,
                    "isolationEnabled": false,
                    "rstpEnabled": true,
                    "stpGuard": "disabled",
                    "linkNegotiation": "Auto negotiate",
                    "portScheduleId": "1234",
                    "udld": "Alert only",
                    "accessPolicyType": "Sticky MAC allow list",
                    "stickyMacAllowList": [
                        "34:56:fe:ce:8e:b0",
                        "34:56:fe:ce:8e:b1"
                    ],
                    "stickyMacAllowListLimit": 5,
                    "stormControlEnabled": true
                }
            },
            "key": "updateDeviceSwitchPort",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "interfaces"
        ],
        "method": "get",
        "description": "List layer 3 interfaces for a switch",
        "url": "/devices/{serial}/switch/routing/interfaces",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "interfaces"
        ],
        "method": "post",
        "description": "Create a layer 3 interface for a switch",
        "url": "/devices/{serial}/switch/routing/interfaces",
        "params": [{
            "name": "createDeviceSwitchRoutingInterface",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A friendly name or description for the interface or VLAN."
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                    },
                    "interfaceIp": {
                        "type": "string",
                        "description": "The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                    },
                    "multicastRouting": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "enabled",
                            "IGMP snooping querier"
                        ],
                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'."
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                    },
                    "defaultGateway": {
                        "type": "string",
                        "description": "The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface."
                    },
                    "ospfSettings": {
                        "type": "object",
                        "properties": {
                            "area": {
                                "type": "string",
                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area. Defaults to 'disabled'."
                            },
                            "cost": {
                                "type": "integer",
                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                            },
                            "isPassiveEnabled": {
                                "type": "boolean",
                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                            }
                        },
                        "description": "The OSPF routing settings of the interface."
                    }
                },
                "example": {
                    "name": "L3 interface",
                    "subnet": "192.168.1.0/24",
                    "interfaceIp": "192.168.1.2",
                    "multicastRouting": "disabled",
                    "vlanId": 100,
                    "defaultGateway": "192.168.1.1",
                    "ospfSettings": {
                        "area": "0",
                        "cost": 1,
                        "isPassiveEnabled": true
                    }
                },
                "required": [
                    "name",
                    "interfaceIp",
                    "vlanId"
                ]
            },
            "required": true,
            "key": "createDeviceSwitchRoutingInterface",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "interfaces"
        ],
        "method": "get",
        "description": "Return a layer 3 interface for a switch",
        "url": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "interfaces"
        ],
        "method": "put",
        "description": "Update a layer 3 interface for a switch",
        "url": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
        "params": [{
            "name": "updateDeviceSwitchRoutingInterface",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A friendly name or description for the interface or VLAN."
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                    },
                    "interfaceIp": {
                        "type": "string",
                        "description": "The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                    },
                    "multicastRouting": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "enabled",
                            "IGMP snooping querier"
                        ],
                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'."
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                    },
                    "ospfSettings": {
                        "type": "object",
                        "properties": {
                            "area": {
                                "type": "string",
                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area."
                            },
                            "cost": {
                                "type": "integer",
                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                            },
                            "isPassiveEnabled": {
                                "type": "boolean",
                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                            }
                        },
                        "description": "The OSPF routing settings of the interface."
                    }
                },
                "example": {
                    "name": "L3 interface",
                    "subnet": "192.168.1.0/24",
                    "interfaceIp": "192.168.1.2",
                    "multicastRouting": "disabled",
                    "vlanId": 100,
                    "ospfSettings": {
                        "area": "0",
                        "cost": 1,
                        "isPassiveEnabled": true
                    }
                }
            },
            "key": "updateDeviceSwitchRoutingInterface",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "interfaces"
        ],
        "method": "delete",
        "description": "Delete a layer 3 interface from the switch",
        "url": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "interfaces",
            "dhcp"
        ],
        "method": "get",
        "description": "Return a layer 3 interface DHCP configuration for a switch",
        "url": "/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "interfaces",
            "dhcp"
        ],
        "method": "put",
        "description": "Update a layer 3 interface DHCP configuration for a switch",
        "url": "/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp",
        "params": [{
            "name": "updateDeviceSwitchRoutingInterfaceDhcp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "dhcpMode": {
                        "type": "string",
                        "enum": [
                            "dhcpDisabled",
                            "dhcpRelay",
                            "dhcpServer"
                        ],
                        "description": "The DHCP mode options for the switch interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')"
                    },
                    "dhcpRelayServerIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The DHCP relay server IPs to which DHCP packets would get relayed for the switch interface"
                    },
                    "dhcpLeaseTime": {
                        "type": "string",
                        "enum": [
                            "30 minutes",
                            "1 hour",
                            "4 hours",
                            "12 hours",
                            "1 day",
                            "1 week"
                        ],
                        "description": "The DHCP lease time config for the dhcp server running on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')"
                    },
                    "dnsNameserversOption": {
                        "type": "string",
                        "enum": [
                            "googlePublicDns",
                            "openDns",
                            "custom"
                        ],
                        "description": "The DHCP name server option for the dhcp server running on the switch interface ('googlePublicDns', 'openDns' or 'custom')"
                    },
                    "dnsCustomNameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The DHCP name server IPs when DHCP name server option is 'custom'"
                    },
                    "bootOptionsEnabled": {
                        "type": "boolean",
                        "description": "Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch interface"
                    },
                    "bootNextServer": {
                        "type": "string",
                        "description": "The PXE boot server IP for the DHCP server running on the switch interface"
                    },
                    "bootFileName": {
                        "type": "string",
                        "description": "The PXE boot server filename for the DHCP server running on the switch interface"
                    },
                    "dhcpOptions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "The code for DHCP option which should be from 2 to 254"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "text",
                                        "ip",
                                        "integer",
                                        "hex"
                                    ],
                                    "description": "The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the DHCP option"
                                }
                            },
                            "required": [
                                "code",
                                "type",
                                "value"
                            ]
                        },
                        "description": "Array of DHCP options consisting of code, type and value for the DHCP server running on the switch interface"
                    },
                    "reservedIpRanges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "type": "string",
                                    "description": "The starting IP address of the reserved IP range"
                                },
                                "end": {
                                    "type": "string",
                                    "description": "The ending IP address of the reserved IP range"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "The comment for the reserved IP range"
                                }
                            },
                            "required": [
                                "start",
                                "end"
                            ]
                        },
                        "description": "Array of DHCP reserved IP assignments for the DHCP server running on the switch interface"
                    },
                    "fixedIpAssignments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the client which has fixed IP address"
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "The MAC address of the client which has fixed IP address"
                                },
                                "ip": {
                                    "type": "string",
                                    "description": "The IP address of the client which has fixed IP address assigned to it"
                                }
                            },
                            "required": [
                                "name",
                                "mac",
                                "ip"
                            ]
                        },
                        "description": "Array of DHCP fixed IP assignments for the DHCP server running on the switch interface"
                    }
                },
                "example": {
                    "dhcpMode": "dhcpServer",
                    "dhcpLeaseTime": "1 day",
                    "dnsNameserversOption": "custom",
                    "dnsCustomNameservers": [
                        "8.8.8.8, 8.8.4.4"
                    ],
                    "bootOptionsEnabled": true,
                    "bootNextServer": "1.2.3.4",
                    "bootFileName": "home_boot_file",
                    "dhcpOptions": [{
                        "code": "5",
                        "type": "text",
                        "value": "five"
                    }],
                    "reservedIpRanges": [{
                        "start": "192.168.1.1",
                        "end": "192.168.1.10",
                        "comment": "A reserved IP range"
                    }],
                    "fixedIpAssignments": [{
                        "mac": "22:33:44:55:66:77",
                        "name": "Cisco Meraki valued client",
                        "ip": "192.168.1.12"
                    }]
                }
            },
            "key": "updateDeviceSwitchRoutingInterfaceDhcp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "staticRoutes"
        ],
        "method": "get",
        "description": "List layer 3 static routes for a switch",
        "url": "/devices/{serial}/switch/routing/staticRoutes",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "staticRoutes"
        ],
        "method": "post",
        "description": "Create a layer 3 static route for a switch",
        "url": "/devices/{serial}/switch/routing/staticRoutes",
        "params": [{
            "name": "createDeviceSwitchRoutingStaticRoute",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name or description for layer 3 static route"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                    },
                    "nextHopIp": {
                        "type": "string",
                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                    },
                    "advertiseViaOspfEnabled": {
                        "type": "boolean",
                        "description": "Option to advertise static route via OSPF"
                    },
                    "preferOverOspfRoutesEnabled": {
                        "type": "boolean",
                        "description": "Option to prefer static route over OSPF routes"
                    }
                },
                "example": {
                    "name": "My route",
                    "subnet": "192.168.1.0/24",
                    "nextHopIp": "1.2.3.4",
                    "advertiseViaOspfEnabled": false,
                    "preferOverOspfRoutesEnabled": false
                },
                "required": [
                    "subnet",
                    "nextHopIp"
                ]
            },
            "required": true,
            "key": "createDeviceSwitchRoutingStaticRoute",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "staticRoutes"
        ],
        "method": "get",
        "description": "Return a layer 3 static route for a switch",
        "url": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "staticRoutes"
        ],
        "method": "put",
        "description": "Update a layer 3 static route for a switch",
        "url": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
        "params": [{
            "name": "updateDeviceSwitchRoutingStaticRoute",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name or description for layer 3 static route"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                    },
                    "nextHopIp": {
                        "type": "string",
                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                    },
                    "advertiseViaOspfEnabled": {
                        "type": "boolean",
                        "description": "Option to advertise static route via OSPF"
                    },
                    "preferOverOspfRoutesEnabled": {
                        "type": "boolean",
                        "description": "Option to prefer static route over OSPF routes"
                    }
                },
                "example": {
                    "name": "My route",
                    "subnet": "192.168.1.0/24",
                    "nextHopIp": "1.2.3.4",
                    "advertiseViaOspfEnabled": false,
                    "preferOverOspfRoutesEnabled": false
                }
            },
            "key": "updateDeviceSwitchRoutingStaticRoute",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "staticRoutes"
        ],
        "method": "delete",
        "description": "Delete a layer 3 static route for a switch",
        "url": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "warmSpare"
        ],
        "method": "get",
        "description": "Return warm spare configuration for a switch",
        "url": "/devices/{serial}/switch/warmSpare",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "warmSpare"
        ],
        "method": "put",
        "description": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.",
        "url": "/devices/{serial}/switch/warmSpare",
        "params": [{
            "name": "updateDeviceSwitchWarmSpare",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable or disable warm spare for a switch"
                    },
                    "spareSerial": {
                        "type": "string",
                        "description": "Serial number of the warm spare switch"
                    }
                },
                "example": {
                    "enabled": true,
                    "spareSerial": "Q234-ABCD-0002"
                },
                "required": [
                    "enabled"
                ]
            },
            "required": true,
            "key": "updateDeviceSwitchWarmSpare",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "bluetooth",
            "settings"
        ],
        "method": "get",
        "description": "Return the bluetooth settings for a wireless device",
        "url": "/devices/{serial}/wireless/bluetooth/settings",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "bluetooth",
            "settings"
        ],
        "method": "put",
        "description": "Update the bluetooth settings for a wireless device",
        "url": "/devices/{serial}/wireless/bluetooth/settings",
        "params": [{
            "name": "updateDeviceWirelessBluetoothSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "description": "Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."
                    },
                    "major": {
                        "type": "integer",
                        "description": "Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."
                    },
                    "minor": {
                        "type": "integer",
                        "description": "Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."
                    }
                },
                "example": {
                    "uuid": "00000000-0000-0000-000-000000000000",
                    "major": 13,
                    "minor": 125
                }
            },
            "key": "updateDeviceWirelessBluetoothSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "connectionStats"
        ],
        "method": "get",
        "description": "Aggregated connectivity info for a given AP on this network",
        "url": "/devices/{serial}/wireless/connectionStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "electronicShelfLabel"
        ],
        "method": "get",
        "description": "Return the ESL settings of a device",
        "url": "/devices/{serial}/wireless/electronicShelfLabel",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "electronicShelfLabel"
        ],
        "method": "put",
        "description": "Update the ESL settings of a device",
        "url": "/devices/{serial}/wireless/electronicShelfLabel",
        "params": [{
            "name": "updateDeviceWirelessElectronicShelfLabel",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "channel": {
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                        ],
                        "description": "Desired ESL channel for the device"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Turn ESL features on and off for this device"
                    }
                },
                "example": {
                    "channel": 1,
                    "enabled": true
                }
            },
            "key": "updateDeviceWirelessElectronicShelfLabel",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "latencyStats"
        ],
        "method": "get",
        "description": "Aggregated latency info for a given AP on this network",
        "url": "/devices/{serial}/wireless/latencyStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "name": "fields",
                "in": "query",
                "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                "key": "fields",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "radio",
            "settings"
        ],
        "method": "get",
        "description": "Return the radio settings of a device",
        "url": "/devices/{serial}/wireless/radio/settings",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "radio",
            "settings"
        ],
        "method": "put",
        "description": "Update the radio settings of a device",
        "url": "/devices/{serial}/wireless/radio/settings",
        "params": [{
            "name": "updateDeviceWirelessRadioSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rfProfileId": {
                        "type": "integer",
                        "description": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power)."
                    },
                    "twoFourGhzSettings": {
                        "type": "object",
                        "properties": {
                            "channel": {
                                "type": "integer",
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14
                                ],
                                "description": "Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel."
                            },
                            "targetPower": {
                                "type": "integer",
                                "description": "Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range."
                            }
                        },
                        "description": "Manual radio settings for 2.4 GHz."
                    },
                    "fiveGhzSettings": {
                        "type": "object",
                        "properties": {
                            "channel": {
                                "type": "integer",
                                "enum": [
                                    36,
                                    40,
                                    44,
                                    48,
                                    52,
                                    56,
                                    60,
                                    64,
                                    100,
                                    104,
                                    108,
                                    112,
                                    116,
                                    120,
                                    124,
                                    128,
                                    132,
                                    136,
                                    140,
                                    144,
                                    149,
                                    153,
                                    157,
                                    161,
                                    165,
                                    169,
                                    173,
                                    177
                                ],
                                "description": "Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel."
                            },
                            "channelWidth": {
                                "type": "integer",
                                "enum": [
                                    0,
                                    20,
                                    40,
                                    80,
                                    160
                                ],
                                "description": "Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width."
                            },
                            "targetPower": {
                                "type": "integer",
                                "description": "Set a manual target power for 5 GHz. Can be between '8' or '30' or null for using auto power range."
                            }
                        },
                        "description": "Manual radio settings for 5 GHz."
                    }
                },
                "example": {
                    "rfProfileId": "1234",
                    "twoFourGhzSettings": {
                        "channel": 11,
                        "targetPower": 21
                    },
                    "fiveGhzSettings": {
                        "channel": 149,
                        "channelWidth": 20,
                        "targetPower": 15
                    }
                }
            },
            "key": "updateDeviceWirelessRadioSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "status"
        ],
        "method": "get",
        "description": "Return the SSID statuses of an access point",
        "url": "/devices/{serial}/wireless/status",
        "params": []
    },
    {
        "tags": [
            "networks",
            "monitor",
            "clients",
            "applicationUsages"
        ],
        "method": "get",
        "description": "Return the application usage data for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkID}/clients/applicationUsages",
        "params": [{
                "type": "string",
                "name": "clients",
                "in": "query",
                "required": true,
                "description": "A list of client keys, MACs or IPs separated by comma.",
                "key": "clients",
                "source": "query"
            },
            {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                "name": "ssidNumber",
                "in": "query",
                "description": "An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned.",
                "key": "ssidNumber",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "clients",
            "usageHistories"
        ],
        "method": "get",
        "description": "Return the usage histories for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkID}/clients/usageHistories",
        "params": [{
                "type": "string",
                "name": "clients",
                "in": "query",
                "required": true,
                "description": "A list of client keys, MACs or IPs separated by comma.",
                "key": "clients",
                "source": "query"
            },
            {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                "name": "ssidNumber",
                "in": "query",
                "description": "An SSID number to include. If not specified, events for all SSIDs will be returned.",
                "key": "ssidNumber",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure"
        ],
        "method": "get",
        "description": "Return a network",
        "url": "/networks/{networkId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure"
        ],
        "method": "put",
        "description": "Update a network",
        "url": "/networks/{networkId}",
        "params": [{
            "name": "updateNetwork",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network"
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to be applied to the network"
                    },
                    "enrollmentString": {
                        "type": "string",
                        "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break."
                    },
                    "notes": {
                        "type": "string",
                        "description": "Add any notes or additional information about this network here."
                    }
                },
                "example": {
                    "name": "Long Island Office",
                    "timeZone": "America/Los_Angeles",
                    "tags": [
                        "tag1",
                        "tag2"
                    ]
                }
            },
            "key": "updateNetwork",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure"
        ],
        "method": "delete",
        "description": "Delete a network",
        "url": "/networks/{networkId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "alerts",
            "settings"
        ],
        "method": "get",
        "description": "Return the alert configuration for this network",
        "url": "/networks/{networkId}/alerts/settings",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "alerts",
            "settings"
        ],
        "method": "put",
        "description": "Update the alert configuration for this network",
        "url": "/networks/{networkId}/alerts/settings",
        "params": [{
            "name": "updateNetworkAlertsSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "defaultDestinations": {
                        "type": "object",
                        "properties": {
                            "emails": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A list of emails that will recieve the alert(s)."
                            },
                            "allAdmins": {
                                "type": "boolean",
                                "description": "If true, then all network admins will receive emails."
                            },
                            "snmp": {
                                "type": "boolean",
                                "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network."
                            },
                            "httpServerIds": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A list of HTTP server IDs to send a Webhook to"
                            }
                        },
                        "description": "The network-wide destinations for all alerts on the network."
                    },
                    "alerts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "The type of alert"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "A boolean depicting if the alert is turned on or off"
                                },
                                "alertDestinations": {
                                    "type": "object",
                                    "properties": {
                                        "emails": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of emails that will receive information about the alert"
                                        },
                                        "allAdmins": {
                                            "type": "boolean",
                                            "description": "If true, then all network admins will receive emails for this alert"
                                        },
                                        "snmp": {
                                            "type": "boolean",
                                            "description": "If true, then an SNMP trap will be sent for this alert if there is an SNMP trap server configured for this network"
                                        },
                                        "httpServerIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of HTTP server IDs to send a Webhook to for this alert"
                                        }
                                    },
                                    "description": "A hash of destinations for this specific alert"
                                },
                                "filters": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated."
                                }
                            },
                            "required": [
                                "type"
                            ]
                        },
                        "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated."
                    }
                },
                "example": {
                    "defaultDestinations": {
                        "emails": [
                            "miles@meraki.com"
                        ],
                        "allAdmins": true,
                        "snmp": true
                    },
                    "alerts": [{
                        "type": "gatewayDown",
                        "enabled": true,
                        "alertDestinations": {
                            "emails": [
                                "miles@meraki.com"
                            ],
                            "allAdmins": false,
                            "snmp": false
                        },
                        "filters": {
                            "timeout": 60
                        }
                    }]
                }
            },
            "key": "updateNetworkAlertsSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "clientVpn",
            "anyconnectVpn"
        ],
        "method": "get",
        "description": "Return the AnyConnect VPN settings of a network.",
        "url": "/networks/{networkId}/appliance/clientVpn/anyconnectVpn",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "clientVpn",
            "anyconnectVpn"
        ],
        "method": "put",
        "description": "Update the AnyConnect VPN settings of a network.",
        "url": "/networks/{networkId}/appliance/clientVpn/anyconnectVpn",
        "params": [{
            "name": "updateNetworkApplianceClientVpnAnyconnectVpn",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether or not AnyConnect VPN is enabled."
                    },
                    "subnet": {
                        "type": "string",
                        "description": "Subnet in CIDR format for clients connected to the AnyConnect Client VPN"
                    },
                    "domainName": {
                        "type": "string",
                        "description": "The domain name that will be appended to clients' DNS queries that omit the domain field."
                    },
                    "sslPort": {
                        "type": "integer",
                        "description": "Port on the MX where AnyConnect will establish a SSL connection on. If this is not set, the default is 443."
                    },
                    "banner": {
                        "type": "string",
                        "description": "Welcome message shown to clients after they successfully connect to the AnyConnect VPN."
                    },
                    "authType": {
                        "type": "string",
                        "enum": [
                            "radius",
                            "meraki",
                            "active_directory"
                        ],
                        "description": "Type of authentication for clients. It can take 3 different values: 'radius', 'meraki', 'active_directory'"
                    },
                    "radiusServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "IP address to which the MX will send RADIUS messages."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port on the RADIUS server that is listening for accounting messages"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Shared key used to authenticate messages between the MX and RADIUS server"
                                }
                            },
                            "required": [
                                "host",
                                "port",
                                "password"
                            ]
                        },
                        "description": "List of RADIUS servers used for authentication. Only configurable if authType is set to 'radius'"
                    },
                    "activeDirectoryServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "shortDomain": {
                                    "type": "string",
                                    "description": "Domain of the active directory server."
                                },
                                "host": {
                                    "type": "string",
                                    "description": "IP address to which the MX will send LDAP traffic."
                                },
                                "username": {
                                    "type": "string",
                                    "description": "Username of the active directory domain admin"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Shared key used to authenticate messages between the MX and active directory server"
                                }
                            },
                            "required": [
                                "shortDomain",
                                "host",
                                "username",
                                "password"
                            ]
                        },
                        "description": "List of active directory servers used for authentication. Only configurable if authType is set to 'active_directory'"
                    },
                    "dnsMode": {
                        "type": "string",
                        "enum": [
                            "google_dns",
                            "opendns",
                            "custom"
                        ],
                        "description": "Mode of the DNS nameserver. It can take 3 different values: 'google_dns', 'opendns', 'custom'"
                    },
                    "dnsCustomNameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of custom DNS nameservers. This param is only valid if the dnsMode is set to 'custom'."
                    },
                    "splitTunnelMode": {
                        "type": "string",
                        "enum": [
                            "Disabled",
                            "Include",
                            "Exclude"
                        ],
                        "description": "Specify if the split tunnel destinations should be included in or excluded from the VPN tunnel. It can take 3 different values: 'Disabled', 'Include', 'Exclude'"
                    },
                    "splitTunnelDestinations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify the list of destinations in CIDR format that should be included or excluded from the VPN tunnel."
                    }
                },
                "example": {
                    "enabled": true,
                    "subnet": "192.168.1.0/24",
                    "domainName": "meraki.com",
                    "sslPort": 1443,
                    "banner": "Welcome",
                    "authType": "radius",
                    "radiusServers": [{
                        "host": "0.0.0.0",
                        "port": 3000
                    }],
                    "dnsMode": "custom",
                    "dnsCustomNameservers": [
                        "1.1.1.1",
                        "2.2.2.2"
                    ],
                    "splitTunnelMode": "Include",
                    "splitTunnelDestinations": [
                        "222.123.22.0/24",
                        "111.123.11.0/24"
                    ]
                }
            },
            "key": "updateNetworkApplianceClientVpnAnyconnectVpn",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "clientVpn",
            "metrics"
        ],
        "method": "get",
        "description": "Reports the number of events related to Client VPN",
        "url": "/networks/{networkId}/appliance/clientVpn/metrics",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "clients",
            "security",
            "events"
        ],
        "method": "get",
        "description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/appliance/clients/{clientId}/security/events",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "ascending",
                    "descending"
                ],
                "name": "sortOrder",
                "in": "query",
                "description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.",
                "key": "sortOrder",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "connectivityMonitoringDestinations"
        ],
        "method": "get",
        "description": "Return the connectivity testing destinations for an MX network",
        "url": "/networks/{networkId}/appliance/connectivityMonitoringDestinations",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "connectivityMonitoringDestinations"
        ],
        "method": "put",
        "description": "Update the connectivity testing destinations for an MX network",
        "url": "/networks/{networkId}/appliance/connectivityMonitoringDestinations",
        "params": [{
            "name": "updateNetworkApplianceConnectivityMonitoringDestinations",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "destinations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ip": {
                                    "type": "string",
                                    "description": "The IP address to test connectivity with"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description of the testing destination. Optional, defaults to null"
                                },
                                "default": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed"
                                }
                            },
                            "required": [
                                "ip"
                            ]
                        },
                        "description": "The list of connectivity monitoring destinations"
                    }
                },
                "example": {
                    "destinations": [{
                            "ip": "8.8.8.8",
                            "description": "Google",
                            "default": false
                        },
                        {
                            "ip": "1.23.45.67",
                            "description": "test description",
                            "default": true
                        },
                        {
                            "ip": "9.8.7.6"
                        }
                    ]
                }
            },
            "key": "updateNetworkApplianceConnectivityMonitoringDestinations",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "contentFiltering"
        ],
        "method": "get",
        "description": "Return the content filtering settings for an MX network",
        "url": "/networks/{networkId}/appliance/contentFiltering",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "contentFiltering"
        ],
        "method": "put",
        "description": "Update the content filtering settings for an MX network",
        "url": "/networks/{networkId}/appliance/contentFiltering",
        "params": [{
            "name": "updateNetworkApplianceContentFiltering",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "allowedUrlPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of URL patterns that are allowed"
                    },
                    "blockedUrlPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of URL patterns that are blocked"
                    },
                    "blockedUrlCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of URL categories to block"
                    },
                    "urlCategoryListSize": {
                        "type": "string",
                        "enum": [
                            "topSites",
                            "fullList"
                        ],
                        "description": "URL category list size which is either 'topSites' or 'fullList'"
                    }
                },
                "example": {
                    "allowedUrlPatterns": [
                        "http://www.example.org",
                        "http://help.com.au"
                    ],
                    "blockedUrlPatterns": [
                        "http://www.example.com",
                        "http://www.betting.com"
                    ],
                    "blockedUrlCategories": [
                        "meraki:contentFiltering/category/1",
                        "meraki:contentFiltering/category/7"
                    ],
                    "urlCategoryListSize": "topSites"
                }
            },
            "key": "updateNetworkApplianceContentFiltering",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "contentFiltering",
            "categories"
        ],
        "method": "get",
        "description": "List all available content filtering categories for an MX network",
        "url": "/networks/{networkId}/appliance/contentFiltering/categories",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "cellularFirewallRules"
        ],
        "method": "get",
        "description": "Return the cellular firewall rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/cellularFirewallRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "cellularFirewallRules"
        ],
        "method": "put",
        "description": "Update the cellular firewall rules of an MX network",
        "url": "/networks/{networkId}/appliance/firewall/cellularFirewallRules",
        "params": [{
            "name": "updateNetworkApplianceFirewallCellularFirewallRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)"
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule"
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "icmp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                },
                                "srcPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "srcCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                                },
                                "destPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "destCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                },
                                "syslogEnabled": {
                                    "type": "boolean",
                                    "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                }
                            },
                            "required": [
                                "policy",
                                "protocol",
                                "srcCidr",
                                "destCidr"
                            ]
                        },
                        "description": "An ordered array of the firewall rules (not including the default rule)"
                    }
                },
                "example": {
                    "rules": [{
                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                        "policy": "allow",
                        "protocol": "tcp",
                        "destPort": 443,
                        "destCidr": "192.168.1.0/24",
                        "srcPort": "Any",
                        "srcCidr": "Any",
                        "syslogEnabled": false
                    }]
                }
            },
            "key": "updateNetworkApplianceFirewallCellularFirewallRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "firewalledServices"
        ],
        "method": "get",
        "description": "List the appliance services and their accessibility rules",
        "url": "/networks/{networkId}/appliance/firewall/firewalledServices",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "firewalledServices"
        ],
        "method": "get",
        "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
        "url": "/networks/{networkId}/appliance/firewall/firewalledServices/{service}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "firewalledServices"
        ],
        "method": "put",
        "description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
        "url": "/networks/{networkId}/appliance/firewall/firewalledServices/{service}",
        "params": [{
            "name": "updateNetworkApplianceFirewallFirewalledService",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "enum": [
                            "blocked",
                            "restricted",
                            "unrestricted"
                        ],
                        "description": "A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only allowed IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required"
                    },
                    "allowedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of allowed IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored"
                    }
                },
                "example": {
                    "access": "restricted",
                    "allowedIps": [
                        "123.123.123.1"
                    ]
                },
                "required": [
                    "access"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceFirewallFirewalledService",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "inboundFirewallRules"
        ],
        "method": "get",
        "description": "Return the inbound firewall rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "inboundFirewallRules"
        ],
        "method": "put",
        "description": "Update the inbound firewall rules of an MX network",
        "url": "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
        "params": [{
            "name": "updateNetworkApplianceFirewallInboundFirewallRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)"
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule"
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "icmp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                },
                                "srcPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "srcCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                                },
                                "destPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "destCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                },
                                "syslogEnabled": {
                                    "type": "boolean",
                                    "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                }
                            },
                            "required": [
                                "policy",
                                "protocol",
                                "srcCidr",
                                "destCidr"
                            ]
                        },
                        "description": "An ordered array of the firewall rules (not including the default rule)"
                    },
                    "syslogDefaultRule": {
                        "type": "boolean",
                        "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                    }
                },
                "example": {
                    "rules": [{
                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                        "policy": "allow",
                        "protocol": "tcp",
                        "destPort": 443,
                        "destCidr": "192.168.1.0/24",
                        "srcPort": "Any",
                        "srcCidr": "Any",
                        "syslogEnabled": false
                    }]
                }
            },
            "key": "updateNetworkApplianceFirewallInboundFirewallRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "l3FirewallRules"
        ],
        "method": "get",
        "description": "Return the L3 firewall rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/l3FirewallRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "l3FirewallRules"
        ],
        "method": "put",
        "description": "Update the L3 firewall rules of an MX network",
        "url": "/networks/{networkId}/appliance/firewall/l3FirewallRules",
        "params": [{
            "name": "updateNetworkApplianceFirewallL3FirewallRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)"
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule"
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "icmp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                },
                                "srcPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "srcCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                                },
                                "destPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "destCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                },
                                "syslogEnabled": {
                                    "type": "boolean",
                                    "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                }
                            },
                            "required": [
                                "policy",
                                "protocol",
                                "srcCidr",
                                "destCidr"
                            ]
                        },
                        "description": "An ordered array of the firewall rules (not including the default rule)"
                    },
                    "syslogDefaultRule": {
                        "type": "boolean",
                        "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                    }
                },
                "example": {
                    "rules": [{
                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                        "policy": "allow",
                        "protocol": "tcp",
                        "destPort": 443,
                        "destCidr": "192.168.1.0/24",
                        "srcPort": "Any",
                        "srcCidr": "Any",
                        "syslogEnabled": false
                    }]
                }
            },
            "key": "updateNetworkApplianceFirewallL3FirewallRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "l7FirewallRules"
        ],
        "method": "get",
        "description": "List the MX L7 firewall rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/l7FirewallRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "l7FirewallRules"
        ],
        "method": "put",
        "description": "Update the MX L7 firewall rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/l7FirewallRules",
        "params": [{
            "name": "updateNetworkApplianceFirewallL7FirewallRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "deny"
                                    ],
                                    "description": "'Deny' traffic specified by this rule"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "application",
                                        "applicationCategory",
                                        "host",
                                        "port",
                                        "ipRange"
                                    ],
                                    "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format."
                                }
                            }
                        },
                        "description": "An ordered array of the MX L7 firewall rules"
                    }
                },
                "example": {
                    "rules": [{
                            "policy": "deny",
                            "type": "application",
                            "value": {
                                "id": "meraki:layer7/application/67",
                                "name": "Xbox LIVE"
                            }
                        },
                        {
                            "policy": "deny",
                            "type": "applicationCategory",
                            "value": {
                                "id": "meraki:layer7/category/2",
                                "name": "Blogging"
                            }
                        },
                        {
                            "policy": "deny",
                            "type": "host",
                            "value": "google.com"
                        },
                        {
                            "policy": "deny",
                            "type": "port",
                            "value": "23"
                        },
                        {
                            "policy": "deny",
                            "type": "ipRange",
                            "value": "10.11.12.00/24"
                        },
                        {
                            "policy": "deny",
                            "type": "ipRange",
                            "value": "10.11.12.00/24:5555"
                        },
                        {
                            "policy": "deny",
                            "type": "blockedCountries",
                            "value": [
                                "AX",
                                "CA"
                            ]
                        },
                        {
                            "policy": "deny",
                            "type": "allowedCountries",
                            "value": [
                                "US"
                            ]
                        }
                    ]
                }
            },
            "key": "updateNetworkApplianceFirewallL7FirewallRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "l7FirewallRules",
            "applicationCategories"
        ],
        "method": "get",
        "description": "Return the L7 firewall application categories and their associated applications for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "oneToManyNatRules"
        ],
        "method": "get",
        "description": "Return the 1:Many NAT mapping rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/oneToManyNatRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "oneToManyNatRules"
        ],
        "method": "put",
        "description": "Set the 1:Many NAT mapping rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/oneToManyNatRules",
        "params": [{
            "name": "updateNetworkApplianceFirewallOneToManyNatRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "publicIp": {
                                    "type": "string",
                                    "description": "The IP address that will be used to access the internal resource from the WAN"
                                },
                                "uplink": {
                                    "type": "string",
                                    "enum": [
                                        "internet1",
                                        "internet2"
                                    ],
                                    "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')"
                                },
                                "portRules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "A description of the rule"
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp"
                                                ],
                                                "description": "'tcp' or 'udp'"
                                            },
                                            "publicPort": {
                                                "type": "string",
                                                "description": "Destination port of the traffic that is arriving on the WAN"
                                            },
                                            "localIp": {
                                                "type": "string",
                                                "description": "Local IP address to which traffic will be forwarded"
                                            },
                                            "localPort": {
                                                "type": "string",
                                                "description": "Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port"
                                            },
                                            "allowedIps": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'"
                                            }
                                        }
                                    },
                                    "description": "An array of associated forwarding rules"
                                }
                            },
                            "required": [
                                "publicIp",
                                "uplink",
                                "portRules"
                            ]
                        },
                        "description": "An array of 1:Many nat rules"
                    }
                },
                "example": {
                    "rules": [{
                        "publicIp": "146.11.11.13",
                        "uplink": "internet1",
                        "portRules": [{
                                "name": "Rule 1",
                                "protocol": "tcp",
                                "publicPort": "9443",
                                "localIp": "192.168.128.1",
                                "localPort": "443",
                                "allowedIps": [
                                    "any"
                                ]
                            },
                            {
                                "name": "Rule 2",
                                "protocol": "tcp",
                                "publicPort": "8080",
                                "localIp": "192.168.128.1",
                                "localPort": "80",
                                "allowedIps": [
                                    "10.82.110.0/24",
                                    "10.82.111.0/24"
                                ]
                            }
                        ]
                    }]
                },
                "required": [
                    "rules"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceFirewallOneToManyNatRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "oneToOneNatRules"
        ],
        "method": "get",
        "description": "Return the 1:1 NAT mapping rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/oneToOneNatRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "oneToOneNatRules"
        ],
        "method": "put",
        "description": "Set the 1:1 NAT mapping rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/oneToOneNatRules",
        "params": [{
            "name": "updateNetworkApplianceFirewallOneToOneNatRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "A descriptive name for the rule"
                                },
                                "publicIp": {
                                    "type": "string",
                                    "description": "The IP address that will be used to access the internal resource from the WAN"
                                },
                                "lanIp": {
                                    "type": "string",
                                    "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN"
                                },
                                "uplink": {
                                    "type": "string",
                                    "enum": [
                                        "internet1",
                                        "internet2"
                                    ],
                                    "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')"
                                },
                                "allowedInbound": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp",
                                                    "icmp-ping",
                                                    "any"
                                                ],
                                                "description": "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'"
                                            },
                                            "destinationPorts": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "An array of ports or port ranges that will be forwarded to the host on the LAN"
                                            },
                                            "allowedIps": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'"
                                            }
                                        }
                                    },
                                    "description": "The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource"
                                }
                            },
                            "required": [
                                "lanIp"
                            ]
                        },
                        "description": "An array of 1:1 nat rules"
                    }
                },
                "example": {
                    "rules": [{
                        "name": "Service behind NAT",
                        "lanIp": "192.168.128.22",
                        "publicIp": "146.12.3.33",
                        "uplink": "internet1",
                        "allowedInbound": [{
                                "protocol": "tcp",
                                "destinationPorts": [
                                    "80"
                                ],
                                "allowedIps": [
                                    "10.82.112.0/24",
                                    "10.82.0.0/16"
                                ]
                            },
                            {
                                "protocol": "udp",
                                "destinationPorts": [
                                    "8080"
                                ],
                                "allowedIps": [
                                    "10.81.110.5",
                                    "10.81.0.0/16"
                                ]
                            }
                        ]
                    }]
                },
                "required": [
                    "rules"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceFirewallOneToOneNatRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "portForwardingRules"
        ],
        "method": "get",
        "description": "Return the port forwarding rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/portForwardingRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "firewall",
            "portForwardingRules"
        ],
        "method": "put",
        "description": "Update the port forwarding rules for an MX network",
        "url": "/networks/{networkId}/appliance/firewall/portForwardingRules",
        "params": [{
            "name": "updateNetworkApplianceFirewallPortForwardingRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "A descriptive name for the rule"
                                },
                                "lanIp": {
                                    "type": "string",
                                    "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN"
                                },
                                "uplink": {
                                    "type": "string",
                                    "enum": [
                                        "internet1",
                                        "internet2",
                                        "both"
                                    ],
                                    "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')"
                                },
                                "publicPort": {
                                    "type": "string",
                                    "description": "A port or port ranges that will be forwarded to the host on the LAN"
                                },
                                "localPort": {
                                    "type": "string",
                                    "description": "A port or port ranges that will receive the forwarded traffic from the WAN"
                                },
                                "allowedIps": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)"
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp"
                                    ],
                                    "description": "TCP or UDP"
                                }
                            },
                            "required": [
                                "lanIp",
                                "publicPort",
                                "localPort",
                                "allowedIps",
                                "protocol"
                            ]
                        },
                        "description": "An array of port forwarding params"
                    }
                },
                "example": {
                    "rules": [{
                        "lanIp": "192.168.128.1",
                        "allowedIps": [
                            "any"
                        ],
                        "name": "Description of Port Forwarding Rule",
                        "protocol": "tcp",
                        "publicPort": "8100-8101",
                        "localPort": "442-443",
                        "uplink": "both"
                    }]
                },
                "required": [
                    "rules"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceFirewallPortForwardingRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "ports"
        ],
        "method": "get",
        "description": "List per-port VLAN settings for all ports of a MX.",
        "url": "/networks/{networkId}/appliance/ports",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "ports"
        ],
        "method": "get",
        "description": "Return per-port VLAN settings for a single MX port.",
        "url": "/networks/{networkId}/appliance/ports/{portId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "ports"
        ],
        "method": "put",
        "description": "Update the per-port VLAN settings for a single MX port.",
        "url": "/networks/{networkId}/appliance/ports/{portId}",
        "params": [{
            "name": "updateNetworkAppliancePort",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "The status of the port"
                    },
                    "dropUntaggedTraffic": {
                        "type": "boolean",
                        "description": "Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the port: 'access' or 'trunk'."
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode."
                    },
                    "allowedVlans": {
                        "type": "string",
                        "description": "Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port."
                    },
                    "accessPolicy": {
                        "type": "string",
                        "description": "The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing."
                    }
                },
                "example": {
                    "enabled": true,
                    "type": "access",
                    "dropUntaggedTraffic": false,
                    "vlan": 3,
                    "accessPolicy": "open"
                }
            },
            "key": "updateNetworkAppliancePort",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "security",
            "events"
        ],
        "method": "get",
        "description": "List the security events for a network",
        "url": "/networks/{networkId}/appliance/security/events",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "ascending",
                    "descending"
                ],
                "name": "sortOrder",
                "in": "query",
                "description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.",
                "key": "sortOrder",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "security",
            "intrusion"
        ],
        "method": "get",
        "description": "Returns all supported intrusion settings for an MX network",
        "url": "/networks/{networkId}/appliance/security/intrusion",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "security",
            "intrusion"
        ],
        "method": "put",
        "description": "Set the supported intrusion settings for an MX network",
        "url": "/networks/{networkId}/appliance/security/intrusion",
        "params": [{
            "name": "updateNetworkApplianceSecurityIntrusion",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "enum": [
                            "prevention",
                            "detection",
                            "disabled"
                        ],
                        "description": "Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)"
                    },
                    "idsRulesets": {
                        "type": "string",
                        "enum": [
                            "connectivity",
                            "balanced",
                            "security"
                        ],
                        "description": "Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved"
                    },
                    "protectedNetworks": {
                        "type": "object",
                        "properties": {
                            "useDefault": {
                                "type": "boolean",
                                "description": "true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved"
                            },
                            "includedCidr": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "list of IP addresses or subnets being protected (required if 'useDefault' is false)"
                            },
                            "excludedCidr": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)"
                            }
                        },
                        "description": "Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged). This is available only in 'passthrough' mode"
                    }
                },
                "example": {
                    "mode": "prevention",
                    "idsRulesets": "balanced",
                    "protectedNetworks": {
                        "useDefault": false,
                        "includedCidr": [
                            "10.0.0.0/8",
                            "127.0.0.0/8",
                            "169.254.0.0/16",
                            "172.16.0.0/12"
                        ],
                        "excludedCidr": [
                            "10.0.0.0/8",
                            "127.0.0.0/8"
                        ]
                    }
                }
            },
            "key": "updateNetworkApplianceSecurityIntrusion",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "security",
            "malware"
        ],
        "method": "get",
        "description": "Returns all supported malware settings for an MX network",
        "url": "/networks/{networkId}/appliance/security/malware",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "security",
            "malware"
        ],
        "method": "put",
        "description": "Set the supported malware settings for an MX network",
        "url": "/networks/{networkId}/appliance/security/malware",
        "params": [{
            "name": "updateNetworkApplianceSecurityMalware",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "enum": [
                            "enabled",
                            "disabled"
                        ],
                        "description": "Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'"
                    },
                    "allowedUrls": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "description": "The url to allow"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment about the allowed entity"
                                }
                            },
                            "required": [
                                "url",
                                "comment"
                            ]
                        },
                        "description": "The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing"
                    },
                    "allowedFiles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "sha256": {
                                    "type": "string",
                                    "description": "The file sha256 hash to allow"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment about the allowed entity"
                                }
                            },
                            "required": [
                                "sha256",
                                "comment"
                            ]
                        },
                        "description": "The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing"
                    }
                },
                "example": {
                    "mode": "enabled",
                    "allowedUrls": [{
                            "url": "example.org",
                            "comment": "allow example.org"
                        },
                        {
                            "url": "help.com.au",
                            "comment": "allow help.com.au"
                        }
                    ],
                    "allowedFiles": [{
                        "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                        "comment": "allow ZIP file"
                    }]
                },
                "required": [
                    "mode"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceSecurityMalware",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "settings"
        ],
        "method": "get",
        "description": "Return the appliance settings for a network",
        "url": "/networks/{networkId}/appliance/settings",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "singleLan"
        ],
        "method": "get",
        "description": "Return single LAN configuration",
        "url": "/networks/{networkId}/appliance/singleLan",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "singleLan"
        ],
        "method": "put",
        "description": "Update single LAN configuration",
        "url": "/networks/{networkId}/appliance/singleLan",
        "params": [{
            "name": "updateNetworkApplianceSingleLan",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "subnet": {
                        "type": "string",
                        "description": "The subnet of the single LAN configuration"
                    },
                    "applianceIp": {
                        "type": "string",
                        "description": "The appliance IP address of the single LAN"
                    }
                },
                "example": {}
            },
            "key": "updateNetworkApplianceSingleLan",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "staticRoutes"
        ],
        "method": "get",
        "description": "List the static routes for an MX or teleworker network",
        "url": "/networks/{networkId}/appliance/staticRoutes",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "staticRoutes"
        ],
        "method": "post",
        "description": "Add a static route for an MX or teleworker network",
        "url": "/networks/{networkId}/appliance/staticRoutes",
        "params": [{
            "name": "createNetworkApplianceStaticRoute",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new static route"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet of the static route"
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The gateway IP (next hop) of the static route"
                    }
                },
                "example": {
                    "name": "My route",
                    "subnet": "192.168.1.0/24",
                    "gatewayIp": "1.2.3.5"
                },
                "required": [
                    "name",
                    "subnet",
                    "gatewayIp"
                ]
            },
            "required": true,
            "key": "createNetworkApplianceStaticRoute",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "staticRoutes"
        ],
        "method": "get",
        "description": "Return a static route for an MX or teleworker network",
        "url": "/networks/{networkId}/appliance/staticRoutes/{staticRouteId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "staticRoutes"
        ],
        "method": "put",
        "description": "Update a static route for an MX or teleworker network",
        "url": "/networks/{networkId}/appliance/staticRoutes/{staticRouteId}",
        "params": [{
            "name": "updateNetworkApplianceStaticRoute",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the static route"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet of the static route"
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The gateway IP (next hop) of the static route"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The enabled state of the static route"
                    },
                    "fixedIpAssignments": {
                        "type": "object",
                        "properties": {},
                        "description": "The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details."
                    },
                    "reservedIpRanges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "type": "string",
                                    "description": "The first IP in the reserved range"
                                },
                                "end": {
                                    "type": "string",
                                    "description": "The last IP in the reserved range"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "A text comment for the reserved range"
                                }
                            },
                            "required": [
                                "start",
                                "end",
                                "comment"
                            ]
                        },
                        "description": "The DHCP reserved IP ranges on the static route"
                    }
                },
                "example": {
                    "name": "My route",
                    "subnet": "192.168.1.0/24",
                    "fixedIpAssignments": {
                        "22:33:44:55:66:77": {
                            "ip": "1.2.3.4",
                            "name": "Some client name"
                        }
                    },
                    "reservedIpRanges": [{
                        "start": "192.168.1.0",
                        "end": "192.168.1.1",
                        "comment": "A reserved IP range"
                    }]
                }
            },
            "key": "updateNetworkApplianceStaticRoute",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "staticRoutes"
        ],
        "method": "delete",
        "description": "Delete a static route from an MX or teleworker network",
        "url": "/networks/{networkId}/appliance/staticRoutes/{staticRouteId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping"
        ],
        "method": "get",
        "description": "Display the traffic shaping settings for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping"
        ],
        "method": "put",
        "description": "Update the traffic shaping settings for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping",
        "params": [{
            "name": "updateNetworkApplianceTrafficShaping",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "globalBandwidthLimits": {
                        "type": "object",
                        "properties": {
                            "limitUp": {
                                "type": "integer",
                                "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                            },
                            "limitDown": {
                                "type": "integer",
                                "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                            }
                        },
                        "description": "Global per-client bandwidth limit"
                    }
                },
                "example": {
                    "globalBandwidthLimits": {
                        "limitUp": 2048,
                        "limitDown": 5120
                    }
                }
            },
            "key": "updateNetworkApplianceTrafficShaping",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "customPerformanceClasses"
        ],
        "method": "get",
        "description": "List all custom performance classes for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "customPerformanceClasses"
        ],
        "method": "post",
        "description": "Add a custom performance class for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses",
        "params": [{
            "name": "createNetworkApplianceTrafficShapingCustomPerformanceClass",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the custom performance class"
                    },
                    "maxLatency": {
                        "type": "integer",
                        "description": "Maximum latency in milliseconds"
                    },
                    "maxJitter": {
                        "type": "integer",
                        "description": "Maximum jitter in milliseconds"
                    },
                    "maxLossPercentage": {
                        "type": "integer",
                        "description": "Maximum percentage of packet loss"
                    }
                },
                "example": {
                    "name": "myCustomPerformanceClass",
                    "maxLatency": 100,
                    "maxJitter": 100,
                    "maxLossPercentage": 5
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createNetworkApplianceTrafficShapingCustomPerformanceClass",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "customPerformanceClasses"
        ],
        "method": "get",
        "description": "Return a custom performance class for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "customPerformanceClasses"
        ],
        "method": "put",
        "description": "Update a custom performance class for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
        "params": [{
            "name": "updateNetworkApplianceTrafficShapingCustomPerformanceClass",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the custom performance class"
                    },
                    "maxLatency": {
                        "type": "integer",
                        "description": "Maximum latency in milliseconds"
                    },
                    "maxJitter": {
                        "type": "integer",
                        "description": "Maximum jitter in milliseconds"
                    },
                    "maxLossPercentage": {
                        "type": "integer",
                        "description": "Maximum percentage of packet loss"
                    }
                },
                "example": {
                    "name": "myCustomPerformanceClass",
                    "maxLatency": 100,
                    "maxJitter": 100,
                    "maxLossPercentage": 5
                }
            },
            "key": "updateNetworkApplianceTrafficShapingCustomPerformanceClass",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "customPerformanceClasses"
        ],
        "method": "delete",
        "description": "Delete a custom performance class from an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "rules"
        ],
        "method": "put",
        "description": "Update the traffic shaping settings rules for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/rules",
        "params": [{
            "name": "updateNetworkApplianceTrafficShapingRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "defaultRulesEnabled": {
                        "type": "boolean",
                        "description": "Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8."
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "definitions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "application",
                                                    "applicationCategory",
                                                    "host",
                                                    "port",
                                                    "ipRange",
                                                    "localNet"
                                                ],
                                                "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "value"
                                        ]
                                    },
                                    "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                },
                                "perClientBandwidthLimits": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                        },
                                        "bandwidthLimits": {
                                            "type": "object",
                                            "properties": {
                                                "limitUp": {
                                                    "type": "integer",
                                                    "description": "The maximum upload limit (integer, in Kbps)."
                                                },
                                                "limitDown": {
                                                    "type": "integer",
                                                    "description": "The maximum download limit (integer, in Kbps)."
                                                }
                                            },
                                            "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                        }
                                    },
                                    "description": "    An object describing the bandwidth settings for your rule.\n"
                                },
                                "dscpTagValue": {
                                    "type": "integer",
                                    "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                }
                            },
                            "required": [
                                "definitions"
                            ]
                        },
                        "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                    }
                },
                "example": {
                    "defaultRulesEnabled": true,
                    "rules": [{
                        "definitions": [{
                                "type": "host",
                                "value": "google.com"
                            },
                            {
                                "type": "port",
                                "value": "9090"
                            },
                            {
                                "type": "ipRange",
                                "value": "192.1.0.0"
                            },
                            {
                                "type": "ipRange",
                                "value": "192.1.0.0/16"
                            },
                            {
                                "type": "ipRange",
                                "value": "10.1.0.0/16:80"
                            },
                            {
                                "type": "localNet",
                                "value": "192.168.0.0/16"
                            },
                            {
                                "type": "applicationCategory",
                                "value": {
                                    "id": "meraki:layer7/category/2",
                                    "name": "Blogging"
                                }
                            },
                            {
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/133",
                                    "name": "Battle.net"
                                }
                            }
                        ],
                        "perClientBandwidthLimits": {
                            "settings": "custom",
                            "bandwidthLimits": {
                                "limitUp": 1000000,
                                "limitDown": 1000000
                            }
                        },
                        "dscpTagValue": null,
                        "priority": "normal"
                    }]
                }
            },
            "key": "updateNetworkApplianceTrafficShapingRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "rules"
        ],
        "method": "get",
        "description": "Display the traffic shaping settings rules for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/rules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "uplinkBandwidth"
        ],
        "method": "get",
        "description": "Returns the uplink bandwidth settings for your MX network.",
        "url": "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "uplinkBandwidth"
        ],
        "method": "put",
        "description": "Updates the uplink bandwidth settings for your MX network.",
        "url": "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth",
        "params": [{
            "name": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "bandwidthLimits": {
                        "type": "object",
                        "properties": {
                            "wan1": {
                                "type": "object",
                                "properties": {
                                    "limitUp": {
                                        "type": "integer",
                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                    },
                                    "limitDown": {
                                        "type": "integer",
                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                    }
                                },
                                "description": "The bandwidth settings for the 'wan1' uplink"
                            },
                            "wan2": {
                                "type": "object",
                                "properties": {
                                    "limitUp": {
                                        "type": "integer",
                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                    },
                                    "limitDown": {
                                        "type": "integer",
                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                    }
                                },
                                "description": "The bandwidth settings for the 'wan2' uplink"
                            },
                            "cellular": {
                                "type": "object",
                                "properties": {
                                    "limitUp": {
                                        "type": "integer",
                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                    },
                                    "limitDown": {
                                        "type": "integer",
                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                    }
                                },
                                "description": "The bandwidth settings for the 'cellular' uplink"
                            }
                        },
                        "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                    }
                },
                "example": {
                    "bandwidthLimits": {
                        "wan1": {
                            "limitUp": 1000000,
                            "limitDown": 1000000
                        },
                        "wan2": {
                            "limitUp": 1000000,
                            "limitDown": 1000000
                        },
                        "cellular": {
                            "limitUp": 51200,
                            "limitDown": 51200
                        }
                    }
                }
            },
            "key": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "uplinkSelection"
        ],
        "method": "get",
        "description": "Show uplink selection settings for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/uplinkSelection",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "trafficShaping",
            "uplinkSelection"
        ],
        "method": "put",
        "description": "Update uplink selection settings for an MX network",
        "url": "/networks/{networkId}/appliance/trafficShaping/uplinkSelection",
        "params": [{
            "name": "updateNetworkApplianceTrafficShapingUplinkSelection",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "activeActiveAutoVpnEnabled": {
                        "type": "boolean",
                        "description": "Toggle for enabling or disabling active-active AutoVPN"
                    },
                    "defaultUplink": {
                        "type": "string",
                        "enum": [
                            "wan1",
                            "wan2"
                        ],
                        "description": "The default uplink. Must be one of: 'wan1' or 'wan2'"
                    },
                    "loadBalancingEnabled": {
                        "type": "boolean",
                        "description": "Toggle for enabling or disabling load balancing"
                    },
                    "wanTrafficUplinkPreferences": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "trafficFilters": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "custom"
                                                ],
                                                "description": "Type of this traffic filter. Must be one of: 'custom'"
                                            },
                                            "value": {
                                                "type": "object",
                                                "properties": {
                                                    "protocol": {
                                                        "type": "string",
                                                        "enum": [
                                                            "tcp",
                                                            "udp",
                                                            "any"
                                                        ],
                                                        "description": "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp' or 'any'"
                                                    },
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "port": {
                                                                "type": "string",
                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                            },
                                                            "cidr": {
                                                                "type": "string",
                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                            },
                                                            "vlan": {
                                                                "type": "integer",
                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                            },
                                                            "host": {
                                                                "type": "integer",
                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                            }
                                                        },
                                                        "description": "Source of this custom type traffic filter"
                                                    },
                                                    "destination": {
                                                        "type": "object",
                                                        "properties": {
                                                            "port": {
                                                                "type": "string",
                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                            },
                                                            "cidr": {
                                                                "type": "string",
                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                            }
                                                        },
                                                        "description": "Destination of this custom type traffic filter"
                                                    }
                                                },
                                                "required": [
                                                    "source",
                                                    "destination"
                                                ],
                                                "description": "Value object of this traffic filter"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "value"
                                        ]
                                    },
                                    "description": "Array of traffic filters for this uplink preference rule"
                                },
                                "preferredUplink": {
                                    "type": "string",
                                    "enum": [
                                        "wan1",
                                        "wan2"
                                    ],
                                    "description": "Preferred uplink for this uplink preference rule. Must be one of: 'wan1' or 'wan2'"
                                }
                            },
                            "required": [
                                "trafficFilters",
                                "preferredUplink"
                            ]
                        },
                        "description": "Array of uplink preference rules for WAN traffic"
                    },
                    "vpnTrafficUplinkPreferences": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "trafficFilters": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "applicationCategory",
                                                    "application",
                                                    "custom"
                                                ],
                                                "description": "Type of this traffic filter. Must be one of: 'applicationCategory', 'application' or 'custom'"
                                            },
                                            "value": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "ID of this applicationCategory or application type traffic filter. E.g.: \"meraki:layer7/category/1\", \"meraki:layer7/application/4\""
                                                    },
                                                    "protocol": {
                                                        "type": "string",
                                                        "enum": [
                                                            "tcp",
                                                            "udp",
                                                            "icmp",
                                                            "any"
                                                        ],
                                                        "description": "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp', 'icmp' or 'any'"
                                                    },
                                                    "source": {
                                                        "type": "object",
                                                        "properties": {
                                                            "port": {
                                                                "type": "string",
                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                            },
                                                            "cidr": {
                                                                "type": "string",
                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                            },
                                                            "network": {
                                                                "type": "string",
                                                                "description": "Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: \"L_12345678\"."
                                                            },
                                                            "vlan": {
                                                                "type": "integer",
                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                            },
                                                            "host": {
                                                                "type": "integer",
                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                            }
                                                        },
                                                        "description": "Source of this custom type traffic filter"
                                                    },
                                                    "destination": {
                                                        "type": "object",
                                                        "properties": {
                                                            "port": {
                                                                "type": "string",
                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                            },
                                                            "cidr": {
                                                                "type": "string",
                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                            },
                                                            "network": {
                                                                "type": "string",
                                                                "description": "Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: \"L_12345678\"."
                                                            },
                                                            "vlan": {
                                                                "type": "integer",
                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                            },
                                                            "host": {
                                                                "type": "integer",
                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                            },
                                                            "fqdn": {
                                                                "type": "string",
                                                                "description": "FQDN format address. Currently only availabe in 'destination' of 'vpnTrafficUplinkPreference' object. E.g.: 'www.google.com'"
                                                            }
                                                        },
                                                        "description": "Destination of this custom type traffic filter"
                                                    }
                                                },
                                                "description": "Value object of this traffic filter"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "value"
                                        ]
                                    },
                                    "description": "Array of traffic filters for this uplink preference rule"
                                },
                                "preferredUplink": {
                                    "type": "string",
                                    "enum": [
                                        "wan1",
                                        "wan2",
                                        "bestForVoIP",
                                        "loadBalancing",
                                        "defaultUplink"
                                    ],
                                    "description": "Preferred uplink for this uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'"
                                },
                                "failOverCriterion": {
                                    "type": "string",
                                    "enum": [
                                        "poorPerformance",
                                        "uplinkDown"
                                    ],
                                    "description": "Fail over criterion for this uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'"
                                },
                                "performanceClass": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "builtin",
                                                "custom"
                                            ],
                                            "description": "Type of this performance class. Must be one of: 'builtin' or 'custom'"
                                        },
                                        "builtinPerformanceClassName": {
                                            "type": "string",
                                            "enum": [
                                                "VoIP"
                                            ],
                                            "description": "Name of builtin performance class, must be present when performanceClass type is 'builtin', and value must be one of: 'VoIP'"
                                        },
                                        "customPerformanceClassId": {
                                            "type": "string",
                                            "description": "ID of created custom performance class, must be present when performanceClass type is 'custom'"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "description": "Performance class setting for this uplink preference rule"
                                }
                            },
                            "required": [
                                "trafficFilters",
                                "preferredUplink"
                            ]
                        },
                        "description": "Array of uplink preference rules for VPN traffic"
                    }
                },
                "example": {
                    "activeActiveAutoVpnEnabled": true,
                    "defaultUplink": "wan1",
                    "loadBalancingEnabled": true,
                    "wanTrafficUplinkPreferences": [{
                            "trafficFilters": [{
                                "type": "custom",
                                "value": {
                                    "protocol": "tcp",
                                    "source": {
                                        "port": "any",
                                        "cidr": "192.168.1.0/24"
                                    },
                                    "destination": {
                                        "port": "any",
                                        "cidr": "any"
                                    }
                                }
                            }],
                            "preferredUplink": "wan2"
                        },
                        {
                            "trafficFilters": [{
                                "type": "custom",
                                "value": {
                                    "protocol": "tcp",
                                    "source": {
                                        "port": "1-1024",
                                        "vlan": 10,
                                        "host": 254
                                    },
                                    "destination": {
                                        "port": "any",
                                        "cidr": "any"
                                    }
                                }
                            }],
                            "preferredUplink": "wan1"
                        }
                    ],
                    "vpnTrafficUplinkPreferences": [{
                            "trafficFilters": [{
                                    "type": "applicationCategory",
                                    "value": {
                                        "id": "meraki:layer7/category/1"
                                    }
                                },
                                {
                                    "type": "application",
                                    "value": {
                                        "id": "meraki:layer7/application/33"
                                    }
                                },
                                {
                                    "type": "custom",
                                    "value": {
                                        "protocol": "tcp",
                                        "source": {
                                            "port": "any",
                                            "cidr": "192.168.1.0/24"
                                        },
                                        "destination": {
                                            "port": "any",
                                            "cidr": "any"
                                        }
                                    }
                                },
                                {
                                    "type": "custom",
                                    "value": {
                                        "protocol": "tcp",
                                        "source": {
                                            "port": "any",
                                            "cidr": "any"
                                        },
                                        "destination": {
                                            "port": "any",
                                            "network": "L_23456789",
                                            "vlan": 20,
                                            "host": 200
                                        }
                                    }
                                },
                                {
                                    "type": "custom",
                                    "value": {
                                        "protocol": "tcp",
                                        "source": {
                                            "port": "any",
                                            "cidr": "any"
                                        },
                                        "destination": {
                                            "port": "1-1024",
                                            "fqdn": "www.google.com"
                                        }
                                    }
                                }
                            ],
                            "preferredUplink": "wan2",
                            "failOverCriterion": "poorPerformance",
                            "performanceClass": {
                                "type": "custom",
                                "customPerformanceClassId": "123456"
                            }
                        },
                        {
                            "trafficFilters": [{
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/9"
                                }
                            }],
                            "preferredUplink": "defaultUplink"
                        },
                        {
                            "trafficFilters": [{
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/106"
                                }
                            }],
                            "preferredUplink": "bestForVoIP"
                        },
                        {
                            "trafficFilters": [{
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/107"
                                }
                            }],
                            "preferredUplink": "loadBalancing",
                            "performanceClass": {
                                "type": "builtin",
                                "builtinPerformanceClassName": "VoIP"
                            }
                        },
                        {
                            "trafficFilters": [{
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/162"
                                }
                            }],
                            "preferredUplink": "loadBalancing",
                            "performanceClass": {
                                "type": "custom",
                                "customPerformanceClassId": "123456"
                            }
                        },
                        {
                            "trafficFilters": [{
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/168"
                                }
                            }],
                            "preferredUplink": "wan2",
                            "failOverCriterion": "poorPerformance",
                            "performanceClass": {
                                "type": "builtin",
                                "builtinPerformanceClassName": "VoIP"
                            }
                        },
                        {
                            "trafficFilters": [{
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/171"
                                }
                            }],
                            "preferredUplink": "wan2",
                            "failOverCriterion": "poorPerformance",
                            "performanceClass": {
                                "type": "custom",
                                "customPerformanceClassId": "123456"
                            }
                        }
                    ]
                }
            },
            "key": "updateNetworkApplianceTrafficShapingUplinkSelection",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "umbrella",
            "protection"
        ],
        "method": "get",
        "description": "Show Umbrella protection on an MX",
        "url": "/networks/{networkId}/appliance/umbrella/protection",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "umbrella",
            "protection",
            "applyProtectionAttempts"
        ],
        "method": "post",
        "description": "Apply Umbrella protection on an MX network",
        "url": "/networks/{networkId}/appliance/umbrella/protection/applyProtectionAttempts",
        "params": [{
            "name": "createNetworkApplianceUmbrellaProtectionApplyProtectionAttempt",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "umbrellaProtectionEnabled": {
                        "type": "boolean",
                        "description": "Enable/Disable Umbrella protection"
                    },
                    "umbrellaPolicyId": {
                        "type": "integer",
                        "description": "ID of the Umbrella policy to be applied"
                    },
                    "excludedDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domain names excluded from the applied protection"
                    }
                },
                "example": {
                    "umbrellaProtectionEnabled": true,
                    "umbrellaPolicyId": "1234",
                    "excludedDomains": [
                        "internal-domain.io"
                    ]
                },
                "required": [
                    "umbrellaProtectionEnabled"
                ]
            },
            "required": true,
            "key": "createNetworkApplianceUmbrellaProtectionApplyProtectionAttempt",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "umbrella",
            "protection",
            "applyProtectionAttempts"
        ],
        "method": "get",
        "description": "Status of applying Umbrella protection on an MX network",
        "url": "/networks/{networkId}/appliance/umbrella/protection/applyProtectionAttempts/{attemptId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vlans"
        ],
        "method": "get",
        "description": "List the VLANs for an MX network",
        "url": "/networks/{networkId}/appliance/vlans",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vlans"
        ],
        "method": "post",
        "description": "Add a VLAN",
        "url": "/networks/{networkId}/appliance/vlans",
        "params": [{
            "name": "createNetworkApplianceVlan",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the new VLAN"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet of the VLAN"
                    },
                    "applianceIp": {
                        "type": "string",
                        "description": "The local IP of the appliance on the VLAN"
                    },
                    "groupPolicyId": {
                        "type": "string",
                        "description": "The id of the desired group policy to apply to the VLAN"
                    }
                },
                "example": {
                    "id": "1234",
                    "name": "My VLAN",
                    "subnet": "192.168.1.0/24",
                    "applianceIp": "192.168.1.2",
                    "groupPolicyId": "101"
                },
                "required": [
                    "id",
                    "name",
                    "subnet",
                    "applianceIp"
                ]
            },
            "required": true,
            "key": "createNetworkApplianceVlan",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vlans",
            "settings"
        ],
        "method": "get",
        "description": "Returns the enabled status of VLANs for the network",
        "url": "/networks/{networkId}/appliance/vlans/settings",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vlans",
            "settings"
        ],
        "method": "put",
        "description": "Enable/Disable VLANs for the given network",
        "url": "/networks/{networkId}/appliance/vlans/settings",
        "params": [{
            "name": "updateNetworkApplianceVlansSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "vlansEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether to enable (true) or disable (false) VLANs for the network"
                    }
                },
                "example": {
                    "vlansEnabled": true
                }
            },
            "key": "updateNetworkApplianceVlansSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vlans"
        ],
        "method": "get",
        "description": "Return a VLAN",
        "url": "/networks/{networkId}/appliance/vlans/{vlanId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vlans"
        ],
        "method": "put",
        "description": "Update a VLAN",
        "url": "/networks/{networkId}/appliance/vlans/{vlanId}",
        "params": [{
            "name": "updateNetworkApplianceVlan",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the VLAN"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet of the VLAN"
                    },
                    "applianceIp": {
                        "type": "string",
                        "description": "The local IP of the appliance on the VLAN"
                    },
                    "groupPolicyId": {
                        "type": "string",
                        "description": "The id of the desired group policy to apply to the VLAN"
                    },
                    "vpnNatSubnet": {
                        "type": "string",
                        "description": "The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN"
                    },
                    "dhcpHandling": {
                        "type": "string",
                        "enum": [
                            "Run a DHCP server",
                            "Relay DHCP to another server",
                            "Do not respond to DHCP requests"
                        ],
                        "description": "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
                    },
                    "dhcpRelayServerIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IPs of the DHCP servers that DHCP requests should be relayed to"
                    },
                    "dhcpLeaseTime": {
                        "type": "string",
                        "enum": [
                            "30 minutes",
                            "1 hour",
                            "4 hours",
                            "12 hours",
                            "1 day",
                            "1 week"
                        ],
                        "description": "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
                    },
                    "dhcpBootOptionsEnabled": {
                        "type": "boolean",
                        "description": "Use DHCP boot options specified in other properties"
                    },
                    "dhcpBootNextServer": {
                        "type": "string",
                        "description": "DHCP boot option to direct boot clients to the server to load the boot file from"
                    },
                    "dhcpBootFilename": {
                        "type": "string",
                        "description": "DHCP boot option for boot filename"
                    },
                    "fixedIpAssignments": {
                        "type": "object",
                        "properties": {},
                        "description": "The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details."
                    },
                    "reservedIpRanges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "type": "string",
                                    "description": "The first IP in the reserved range"
                                },
                                "end": {
                                    "type": "string",
                                    "description": "The last IP in the reserved range"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "A text comment for the reserved range"
                                }
                            },
                            "required": [
                                "start",
                                "end",
                                "comment"
                            ]
                        },
                        "description": "The DHCP reserved IP ranges on the VLAN"
                    },
                    "dnsNameservers": {
                        "type": "string",
                        "description": "The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names"
                    },
                    "dhcpOptions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "The code for the DHCP option. This should be an integer between 2 and 254."
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "text",
                                        "ip",
                                        "hex",
                                        "integer"
                                    ],
                                    "description": "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value for the DHCP option"
                                }
                            },
                            "required": [
                                "code",
                                "type",
                                "value"
                            ]
                        },
                        "description": "The list of DHCP options that will be included in DHCP responses. Each object in the list should have \"code\", \"type\", and \"value\" properties."
                    }
                },
                "example": {
                    "name": "My VLAN",
                    "applianceIp": "192.168.1.2",
                    "subnet": "192.168.1.0/24",
                    "groupPolicyId": "101",
                    "fixedIpAssignments": {
                        "22:33:44:55:66:77": {
                            "ip": "1.2.3.4",
                            "name": "Some client name"
                        }
                    },
                    "reservedIpRanges": [{
                        "start": "192.168.1.0",
                        "end": "192.168.1.1",
                        "comment": "A reserved IP range"
                    }],
                    "dnsNameservers": "google_dns",
                    "dhcpHandling": "Run a DHCP server",
                    "dhcpLeaseTime": "1 day",
                    "dhcpBootOptionsEnabled": false,
                    "dhcpBootNextServer": null,
                    "dhcpBootFilename": null,
                    "dhcpOptions": [{
                        "code": 5,
                        "type": "text",
                        "value": "five"
                    }]
                }
            },
            "key": "updateNetworkApplianceVlan",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vlans"
        ],
        "method": "delete",
        "description": "Delete a VLAN from a network",
        "url": "/networks/{networkId}/appliance/vlans/{vlanId}",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "bgp"
        ],
        "method": "get",
        "description": "Return a Hub BGP Configuration",
        "url": "/networks/{networkId}/appliance/vpn/bgp",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "bgp"
        ],
        "method": "put",
        "description": "Update a Hub BGP Configuration",
        "url": "/networks/{networkId}/appliance/vpn/bgp",
        "params": [{
            "name": "updateNetworkApplianceVpnBgp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable or disable the BGP configuration."
                    },
                    "asNumber": {
                        "type": "integer",
                        "description": "An Autonomous System Number (ASN) is required if you are to run BGP and peer with another BGP Speaker outside of the Auto VPN domain. This ASN will be applied to the entire Auto VPN domain. The entire 4-byte ASN range is supported. So, the ASN must be an integer between 1 and 4294967295. When absent, this field is not updated. If no value exists then it defaults to 64512."
                    },
                    "ibgpHoldTimer": {
                        "type": "integer",
                        "description": "The IBGP holdtimer in seconds. The IBGP holdtimer must be an integer between 12 and 240. When absent, this field is not updated. If no value exists then it defaults to 240."
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ip": {
                                    "type": "string",
                                    "description": "IP address of the neighbor."
                                },
                                "remoteAsNumber": {
                                    "type": "integer",
                                    "description": "Remote ASN of the neighbor. The remote ASN must be an integer between 1 and 4294967295."
                                },
                                "receiveLimit": {
                                    "type": "integer",
                                    "description": "The receive limit is the maximum number of routes that can be received from any BGP peer. The receive limit must be an integer between 0 and 4294967295. When absent, it defaults to 0."
                                },
                                "allowTransit": {
                                    "type": "boolean",
                                    "description": "When this feature is on, the Meraki device will advertise routes learned from other Autonomous Systems, thereby allowing traffic between Autonomous Systems to transit this AS. When absent, it defaults to false."
                                },
                                "ebgpHoldTimer": {
                                    "type": "integer",
                                    "description": "The EBGP hold timer in seconds for each neighbor. The EBGP hold timer must be an integer between 12 and 240."
                                },
                                "ebgpMultihop": {
                                    "type": "integer",
                                    "description": "Configure this if the neighbor is not adjacent. The EBGP multi-hop must be an integer between 1 and 255."
                                }
                            },
                            "required": [
                                "ip",
                                "remoteAsNumber",
                                "ebgpHoldTimer",
                                "ebgpMultihop"
                            ]
                        },
                        "description": "List of BGP neighbors. This list replaces the existing set of neighbors. When absent, this field is not updated."
                    }
                },
                "example": {
                    "enabled": true,
                    "asNumber": 64515,
                    "ibgpHoldTimer": 120,
                    "neighbors": [{
                        "ip": "10.10.10.22",
                        "remoteAsNumber": 64343,
                        "receiveLimit": 120,
                        "allowTransit": true,
                        "ebgpHoldTimer": 180,
                        "ebgpMultihop": 2
                    }]
                },
                "required": [
                    "enabled"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceVpnBgp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "siteToSiteVpn"
        ],
        "method": "get",
        "description": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
        "url": "/networks/{networkId}/appliance/vpn/siteToSiteVpn",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "siteToSiteVpn"
        ],
        "method": "put",
        "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "url": "/networks/{networkId}/appliance/vpn/siteToSiteVpn",
        "params": [{
            "name": "updateNetworkApplianceVpnSiteToSiteVpn",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "enum": [
                            "none",
                            "spoke",
                            "hub"
                        ],
                        "description": "The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'"
                    },
                    "hubs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "hubId": {
                                    "type": "string",
                                    "description": "The network ID of the hub."
                                },
                                "useDefaultRoute": {
                                    "type": "boolean",
                                    "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub."
                                }
                            },
                            "required": [
                                "hubId"
                            ]
                        },
                        "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required."
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "localSubnet": {
                                    "type": "string",
                                    "description": "The CIDR notation subnet used within the VPN"
                                },
                                "useVpn": {
                                    "type": "boolean",
                                    "description": "Indicates the presence of the subnet in the VPN"
                                }
                            },
                            "required": [
                                "localSubnet"
                            ]
                        },
                        "description": "The list of subnets and their VPN presence."
                    }
                },
                "example": {
                    "mode": "spoke",
                    "hubs": [{
                            "hubId": "N_4901849",
                            "useDefaultRoute": true
                        },
                        {
                            "hubId": "N_1892489",
                            "useDefaultRoute": false
                        }
                    ],
                    "subnets": [{
                            "localSubnet": "192.168.1.0/24",
                            "useVpn": true
                        },
                        {
                            "localSubnet": "192.168.128.0/24",
                            "useVpn": true
                        }
                    ]
                },
                "required": [
                    "mode"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceVpnSiteToSiteVpn",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "warmSpare"
        ],
        "method": "get",
        "description": "Return MX warm spare settings",
        "url": "/networks/{networkId}/appliance/warmSpare",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "warmSpare"
        ],
        "method": "put",
        "description": "Update MX warm spare settings",
        "url": "/networks/{networkId}/appliance/warmSpare",
        "params": [{
            "name": "updateNetworkApplianceWarmSpare",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable warm spare"
                    },
                    "spareSerial": {
                        "type": "string",
                        "description": "Serial number of the warm spare appliance"
                    },
                    "uplinkMode": {
                        "type": "string",
                        "description": "Uplink mode, either virtual or public"
                    },
                    "virtualIp1": {
                        "type": "string",
                        "description": "The WAN 1 shared IP"
                    },
                    "virtualIp2": {
                        "type": "string",
                        "description": "The WAN 2 shared IP"
                    }
                },
                "example": {
                    "enabled": true,
                    "spareSerial": "Q234-ABCD-5678",
                    "uplinkMode": "virtual",
                    "virtualIp1": "1.2.3.4",
                    "virtualIp2": "1.2.3.4"
                },
                "required": [
                    "enabled"
                ]
            },
            "required": true,
            "key": "updateNetworkApplianceWarmSpare",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "warmSpare"
        ],
        "method": "post",
        "description": "Swap MX primary and warm spare appliances",
        "url": "/networks/{networkId}/appliance/warmSpare/swap",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure"
        ],
        "method": "post",
        "description": "Bind a network to a template.",
        "url": "/networks/{networkId}/bind",
        "params": [{
            "name": "bindNetwork",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "configTemplateId": {
                        "type": "string",
                        "description": "The ID of the template to which the network should be bound."
                    },
                    "autoBind": {
                        "type": "boolean",
                        "description": "Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model."
                    }
                },
                "example": {
                    "configTemplateId": "N_23952905",
                    "autoBind": false
                },
                "required": [
                    "configTemplateId"
                ]
            },
            "required": true,
            "key": "bindNetwork",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "bluetoothClients"
        ],
        "method": "get",
        "description": "List the Bluetooth clients seen by APs in this network",
        "url": "/networks/{networkId}/bluetoothClients",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "includeConnectivityHistory",
                "in": "query",
                "description": "Include the connectivity history for this client",
                "key": "includeConnectivityHistory",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "bluetoothClients"
        ],
        "method": "get",
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "url": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
        "params": [{
                "type": "boolean",
                "name": "includeConnectivityHistory",
                "in": "query",
                "description": "Include the connectivity history for this client",
                "key": "includeConnectivityHistory",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "connectivityHistoryTimespan",
                "in": "query",
                "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.",
                "key": "connectivityHistoryTimespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "camera",
            "configure",
            "externalStreamUsers"
        ],
        "method": "get",
        "description": "Returns all the external users who have access to cameras in this network",
        "url": "/networks/{networkId}/camera/externalStreamUsers",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "qualityRetentionProfiles"
        ],
        "method": "get",
        "description": "List the quality retention profiles for this network",
        "url": "/networks/{networkId}/camera/qualityRetentionProfiles",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "qualityRetentionProfiles"
        ],
        "method": "post",
        "description": "Creates new quality retention profile for this network.",
        "url": "/networks/{networkId}/camera/qualityRetentionProfiles",
        "params": [{
            "name": "createNetworkCameraQualityRetentionProfile",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new profile. Must be unique. This parameter is required."
                    },
                    "motionBasedRetentionEnabled": {
                        "type": "boolean",
                        "description": "Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false."
                    },
                    "restrictedBandwidthModeEnabled": {
                        "type": "boolean",
                        "description": "Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false."
                    },
                    "audioRecordingEnabled": {
                        "type": "boolean",
                        "description": "Whether or not to record audio. Can be either true or false. Defaults to false."
                    },
                    "cloudArchiveEnabled": {
                        "type": "boolean",
                        "description": "Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false."
                    },
                    "motionDetectorVersion": {
                        "type": "integer",
                        "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                    },
                    "scheduleId": {
                        "type": "string",
                        "description": "Schedule for which this camera will record video, or 'null' to always record."
                    },
                    "maxRetentionDays": {
                        "type": "integer",
                        "description": "The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days"
                    },
                    "videoSettings": {
                        "type": "object",
                        "properties": {
                            "MV21/MV71": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV21/MV71 camera models."
                            },
                            "MV12/MV22/MV72": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720",
                                            "1920x1080"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV12/MV22/MV72 camera models."
                            },
                            "MV32": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1080x1080",
                                            "2058x2058"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1080x1080' or '2058x2058'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV32 camera models."
                            },
                            "MV12WE": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720",
                                            "1920x1080"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV12WE camera models."
                            },
                            "MV22X/MV72X": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720",
                                            "1920x1080",
                                            "2688x1512"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV22X/MV72X camera models."
                            }
                        },
                        "description": "Video quality and resolution settings for all the camera models."
                    }
                },
                "example": {},
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createNetworkCameraQualityRetentionProfile",
            "source": "body"
        }]
    },
    {
        "tags": [
            "camera",
            "configure",
            "qualityRetentionProfiles"
        ],
        "method": "get",
        "description": "Retrieve a single quality retention profile",
        "url": "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "qualityRetentionProfiles"
        ],
        "method": "put",
        "description": "Update an existing quality retention profile for this network.",
        "url": "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
        "params": [{
            "name": "updateNetworkCameraQualityRetentionProfile",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new profile. Must be unique."
                    },
                    "motionBasedRetentionEnabled": {
                        "type": "boolean",
                        "description": "Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false."
                    },
                    "restrictedBandwidthModeEnabled": {
                        "type": "boolean",
                        "description": "Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false."
                    },
                    "audioRecordingEnabled": {
                        "type": "boolean",
                        "description": "Whether or not to record audio. Can be either true or false. Defaults to false."
                    },
                    "cloudArchiveEnabled": {
                        "type": "boolean",
                        "description": "Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false."
                    },
                    "motionDetectorVersion": {
                        "type": "integer",
                        "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                    },
                    "scheduleId": {
                        "type": "string",
                        "description": "Schedule for which this camera will record video, or 'null' to always record."
                    },
                    "maxRetentionDays": {
                        "type": "integer",
                        "description": "The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days"
                    },
                    "videoSettings": {
                        "type": "object",
                        "properties": {
                            "MV21/MV71": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV21/MV71 camera models."
                            },
                            "MV12/MV22/MV72": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720",
                                            "1920x1080"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV12/MV22/MV72 camera models."
                            },
                            "MV32": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1080x1080",
                                            "2058x2058"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1080x1080' or '2058x2058'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV32 camera models."
                            },
                            "MV12WE": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720",
                                            "1920x1080"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV12WE camera models."
                            },
                            "MV22X/MV72X": {
                                "type": "object",
                                "properties": {
                                    "quality": {
                                        "type": "string",
                                        "enum": [
                                            "Standard",
                                            "Enhanced",
                                            "High"
                                        ],
                                        "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                    },
                                    "resolution": {
                                        "type": "string",
                                        "enum": [
                                            "1280x720",
                                            "1920x1080",
                                            "2688x1512"
                                        ],
                                        "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'."
                                    }
                                },
                                "required": [
                                    "quality",
                                    "resolution"
                                ],
                                "description": "Quality and resolution for MV22X/MV72X camera models."
                            }
                        },
                        "description": "Video quality and resolution settings for all the camera models."
                    }
                },
                "example": {}
            },
            "key": "updateNetworkCameraQualityRetentionProfile",
            "source": "body"
        }]
    },
    {
        "tags": [
            "camera",
            "configure",
            "qualityRetentionProfiles"
        ],
        "method": "delete",
        "description": "Delete an existing quality retention profile for this network.",
        "url": "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
        "params": []
    },
    {
        "tags": [
            "camera",
            "configure",
            "schedules"
        ],
        "method": "get",
        "description": "Returns a list of all camera recording schedules.",
        "url": "/networks/{networkId}/camera/schedules",
        "params": []
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "connectivityMonitoringDestinations"
        ],
        "method": "get",
        "description": "Return the connectivity testing destinations for an MG network",
        "url": "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations",
        "params": []
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "connectivityMonitoringDestinations"
        ],
        "method": "put",
        "description": "Update the connectivity testing destinations for an MG network",
        "url": "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations",
        "params": [{
            "name": "updateNetworkCellularGatewayConnectivityMonitoringDestinations",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "destinations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ip": {
                                    "type": "string",
                                    "description": "The IP address to test connectivity with"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description of the testing destination. Optional, defaults to null",
                                    "default": null
                                },
                                "default": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed",
                                    "default": false
                                }
                            },
                            "required": [
                                "ip"
                            ]
                        },
                        "description": "The list of connectivity monitoring destinations"
                    }
                },
                "example": {
                    "destinations": [{
                            "ip": "8.8.8.8",
                            "description": "Google",
                            "default": false
                        },
                        {
                            "ip": "1.23.45.67",
                            "description": "test description",
                            "default": true
                        },
                        {
                            "ip": "9.8.7.6"
                        }
                    ]
                }
            },
            "key": "updateNetworkCellularGatewayConnectivityMonitoringDestinations",
            "source": "body"
        }]
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "dhcp"
        ],
        "method": "get",
        "description": "List common DHCP settings of MGs",
        "url": "/networks/{networkId}/cellularGateway/dhcp",
        "params": []
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "dhcp"
        ],
        "method": "put",
        "description": "Update common DHCP settings of MGs",
        "url": "/networks/{networkId}/cellularGateway/dhcp",
        "params": [{
            "name": "updateNetworkCellularGatewayDhcp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "dhcpLeaseTime": {
                        "type": "string",
                        "description": "DHCP Lease time for all MG of the network. It can be '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'."
                    },
                    "dnsNameservers": {
                        "type": "string",
                        "description": "DNS name servers mode for all MG of the network. It can take 4 different values: 'upstream_dns', 'google_dns', 'opendns', 'custom'."
                    },
                    "dnsCustomNameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of fixed IP representing the the DNS Name servers when the mode is 'custom'"
                    }
                },
                "example": {
                    "dhcpLeaseTime": "1 hour",
                    "dnsNameservers": "custom",
                    "dnsCustomNameservers": [
                        "172.16.2.111",
                        "172.16.2.30"
                    ]
                }
            },
            "key": "updateNetworkCellularGatewayDhcp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "subnetPool"
        ],
        "method": "get",
        "description": "Return the subnet pool and mask configured for MGs in the network.",
        "url": "/networks/{networkId}/cellularGateway/subnetPool",
        "params": []
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "subnetPool"
        ],
        "method": "put",
        "description": "Update the subnet pool and mask configuration for MGs in the network.",
        "url": "/networks/{networkId}/cellularGateway/subnetPool",
        "params": [{
            "name": "updateNetworkCellularGatewaySubnetPool",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "mask": {
                        "type": "integer",
                        "description": "Mask used for the subnet of all MGs in  this network."
                    },
                    "cidr": {
                        "type": "string",
                        "description": "CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool."
                    }
                },
                "example": {
                    "cidr": "192.168.0.0/16",
                    "mask": "24"
                }
            },
            "key": "updateNetworkCellularGatewaySubnetPool",
            "source": "body"
        }]
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "uplink"
        ],
        "method": "get",
        "description": "Returns the uplink settings for your MG network.",
        "url": "/networks/{networkId}/cellularGateway/uplink",
        "params": []
    },
    {
        "tags": [
            "cellularGateway",
            "configure",
            "uplink"
        ],
        "method": "put",
        "description": "Updates the uplink settings for your MG network.",
        "url": "/networks/{networkId}/cellularGateway/uplink",
        "params": [{
            "name": "updateNetworkCellularGatewayUplink",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "bandwidthLimits": {
                        "type": "object",
                        "properties": {
                            "limitUp": {
                                "type": "integer",
                                "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                            },
                            "limitDown": {
                                "type": "integer",
                                "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                            }
                        },
                        "description": "The bandwidth settings for the 'cellular' uplink"
                    }
                },
                "example": {}
            },
            "key": "updateNetworkCellularGatewayUplink",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "clients"
        ],
        "method": "get",
        "description": "List the clients that have used this network in the timespan",
        "url": "/networks/{networkId}/clients",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "clientVpn"
                    ]
                },
                "name": "clientTypes",
                "in": "query",
                "description": "Filter clients based on their type. Can be one of 'clientVpn'.",
                "key": "clientTypes",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "clients"
        ],
        "method": "post",
        "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
        "url": "/networks/{networkId}/clients/provision",
        "params": [{
            "name": "provisionNetworkClients",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "clients": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mac": {
                                    "type": "string",
                                    "description": "The MAC address of the client. Required."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The display name for the client. Optional. Limited to 255 bytes."
                                }
                            },
                            "required": [
                                "mac"
                            ]
                        },
                        "description": "The array of clients to provision"
                    },
                    "devicePolicy": {
                        "type": "string",
                        "enum": [
                            "Group policy",
                            "Allowed",
                            "Blocked",
                            "Per connection",
                            "Normal"
                        ],
                        "description": "The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required."
                    },
                    "groupPolicyId": {
                        "type": "string",
                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                    },
                    "policiesBySecurityAppliance": {
                        "type": "object",
                        "properties": {
                            "devicePolicy": {
                                "type": "string",
                                "enum": [
                                    "Allowed",
                                    "Blocked",
                                    "Normal"
                                ],
                                "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required."
                            }
                        },
                        "description": "An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)"
                    },
                    "policiesBySsid": {
                        "type": "object",
                        "properties": {
                            "0": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "1": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "2": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "3": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "4": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "5": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "6": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "7": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "8": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "9": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "10": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "11": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "12": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "13": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            },
                            "14": {
                                "type": "object",
                                "properties": {
                                    "devicePolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Allowed",
                                            "Blocked",
                                            "Normal",
                                            "Group policy"
                                        ],
                                        "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required."
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                    }
                                },
                                "required": [
                                    "devicePolicy"
                                ],
                                "description": "The number for the SSID"
                            }
                        },
                        "description": "An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy"
                    }
                },
                "example": {
                    "clients": [{
                        "mac": "00:11:22:33:44:55",
                        "clientId": "k74272e",
                        "name": "Miles's phone"
                    }],
                    "devicePolicy": "Group policy",
                    "groupPolicyId": "101"
                },
                "required": [
                    "clients",
                    "devicePolicy"
                ]
            },
            "required": true,
            "key": "provisionNetworkClients",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "clients"
        ],
        "method": "get",
        "description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/clients/{clientId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "clients",
            "policy"
        ],
        "method": "get",
        "description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/clients/{clientId}/policy",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "clients",
            "policy"
        ],
        "method": "put",
        "description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/clients/{clientId}/policy",
        "params": [{
            "name": "updateNetworkClientPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "devicePolicy": {
                        "type": "string",
                        "description": "The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                    },
                    "groupPolicyId": {
                        "type": "string",
                        "description": "[optional] If 'devicePolicy' is set to 'Group policy' this param is used to specify the group policy ID."
                    }
                },
                "example": {
                    "mac": "00:11:22:33:44:55",
                    "devicePolicy": "Group policy",
                    "groupPolicyId": "101"
                },
                "required": [
                    "devicePolicy"
                ]
            },
            "required": true,
            "key": "updateNetworkClientPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "clients",
            "splashAuthorizationStatus"
        ],
        "method": "get",
        "description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "clients",
            "splashAuthorizationStatus"
        ],
        "method": "put",
        "description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "params": [{
            "name": "updateNetworkClientSplashAuthorizationStatus",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "ssids": {
                        "type": "object",
                        "properties": {
                            "0": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 0"
                            },
                            "1": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 1"
                            },
                            "2": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 2"
                            },
                            "3": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 3"
                            },
                            "4": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 4"
                            },
                            "5": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 5"
                            },
                            "6": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 6"
                            },
                            "7": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 7"
                            },
                            "8": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 8"
                            },
                            "9": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 9"
                            },
                            "10": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 10"
                            },
                            "11": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 11"
                            },
                            "12": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 12"
                            },
                            "13": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 13"
                            },
                            "14": {
                                "type": "object",
                                "properties": {
                                    "isAuthorized": {
                                        "type": "boolean",
                                        "description": "New authorization status for the SSID (true, false)."
                                    }
                                },
                                "description": "Splash authorization for SSID 14"
                            }
                        },
                        "description": "The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency. Not all networks support configuring all SSIDs"
                    }
                },
                "example": {
                    "ssids": {
                        "0": {
                            "isAuthorized": true
                        },
                        "2": {
                            "isAuthorized": false
                        }
                    }
                },
                "required": [
                    "ssids"
                ]
            },
            "required": true,
            "key": "updateNetworkClientSplashAuthorizationStatus",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "clients",
            "trafficHistory"
        ],
        "method": "get",
        "description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/clients/{clientId}/trafficHistory",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "clients",
            "usageHistory"
        ],
        "method": "get",
        "description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "url": "/networks/{networkId}/clients/{clientId}/usageHistory",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "devices"
        ],
        "method": "get",
        "description": "List the devices in a network",
        "url": "/networks/{networkId}/devices",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Claim devices into a network",
        "url": "/networks/{networkId}/devices/claim",
        "params": [{
            "name": "claimNetworkDevices",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of serials of devices to claim"
                    }
                },
                "example": {
                    "serials": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                    ]
                },
                "required": [
                    "serials"
                ]
            },
            "required": true,
            "key": "claimNetworkDevices",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Remove a single device",
        "url": "/networks/{networkId}/devices/remove",
        "params": [{
            "name": "removeNetworkDevices",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "serial": {
                        "type": "string",
                        "description": "The serial of a device"
                    }
                },
                "example": {
                    "serial": "Q234-ABCD-5678"
                },
                "required": [
                    "serial"
                ]
            },
            "required": true,
            "key": "removeNetworkDevices",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "devices",
            "uplink",
            "cellular"
        ],
        "method": "get",
        "description": "Return the cellular uplink configurations for a device.",
        "url": "/networks/{networkId}/devices/{serial}/uplink/cellular",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "devices",
            "uplink",
            "cellular"
        ],
        "method": "post",
        "description": "Create an uplink configuration for a device.",
        "url": "/networks/{networkId}/devices/{serial}/uplink/cellular",
        "params": [{
            "name": "createNetworkDeviceUplinkCellular",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether this uplink is enabled (optional)"
                    },
                    "apn": {
                        "type": "string",
                        "description": "Access Point Name (APN) to send to carrier (optional)"
                    }
                },
                "example": {}
            },
            "key": "createNetworkDeviceUplinkCellular",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "devices",
            "uplink",
            "cellular"
        ],
        "method": "get",
        "description": "Return the cellular uplink configuration.",
        "url": "/networks/{networkId}/devices/{serial}/uplink/cellular/{id}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "devices",
            "uplink",
            "cellular"
        ],
        "method": "put",
        "description": "Update cellular uplink configuration",
        "url": "/networks/{networkId}/devices/{serial}/uplink/cellular/{id}",
        "params": [{
            "name": "updateNetworkDeviceUplinkCellular",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether this uplink is enabled"
                    },
                    "apn": {
                        "type": "string",
                        "description": "Access Point Name (APN) to send to carrier"
                    }
                },
                "example": {
                    "apn": "my.apn",
                    "enabled": true
                }
            },
            "key": "updateNetworkDeviceUplinkCellular",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "environmental",
            "events"
        ],
        "method": "get",
        "description": "List the environmental events for the network",
        "url": "/networks/{networkId}/environmental/events",
        "params": [{
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "includedEventTypes",
                "in": "query",
                "description": "A list of event types. The returned events will be filtered to only include events with these types.",
                "key": "includedEventTypes",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "excludedEventTypes",
                "in": "query",
                "description": "A list of event types. The returned events will be filtered to exclude events with these types.",
                "key": "excludedEventTypes",
                "source": "query"
            },
            {
                "type": "string",
                "name": "sensorSerial",
                "in": "query",
                "description": "The serial of the sensor device which the list of events will be filtered with",
                "key": "sensorSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "gatewaySerial",
                "in": "query",
                "description": "The serial of the environmental gateway device which the list of events will be filtered with",
                "key": "gatewaySerial",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "environmental",
            "events",
            "eventTypes"
        ],
        "method": "get",
        "description": "List the event type to human-readable description",
        "url": "/networks/{networkId}/environmental/events/eventTypes",
        "params": []
    },
    {
        "tags": [
            "networks",
            "monitor",
            "events"
        ],
        "method": "get",
        "description": "List the events for the network",
        "url": "/networks/{networkId}/events",
        "params": [{
                "type": "string",
                "name": "productType",
                "in": "query",
                "description": "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and environmental",
                "key": "productType",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "includedEventTypes",
                "in": "query",
                "description": "A list of event types. The returned events will be filtered to only include events with these types.",
                "key": "includedEventTypes",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "excludedEventTypes",
                "in": "query",
                "description": "A list of event types. The returned events will be filtered to exclude events with these types.",
                "key": "excludedEventTypes",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceMac",
                "in": "query",
                "description": "The MAC address of the Meraki device which the list of events will be filtered with",
                "key": "deviceMac",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "The serial of the Meraki device which the list of events will be filtered with",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceName",
                "in": "query",
                "description": "The name of the Meraki device which the list of events will be filtered with",
                "key": "deviceName",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientIp",
                "in": "query",
                "description": "The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.",
                "key": "clientIp",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientMac",
                "in": "query",
                "description": "The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.",
                "key": "clientMac",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientName",
                "in": "query",
                "description": "The name, or partial name, of the client which the list of events will be filtered with",
                "key": "clientName",
                "source": "query"
            },
            {
                "type": "string",
                "name": "smDeviceMac",
                "in": "query",
                "description": "The MAC address of the Systems Manager device which the list of events will be filtered with",
                "key": "smDeviceMac",
                "source": "query"
            },
            {
                "type": "string",
                "name": "smDeviceName",
                "in": "query",
                "description": "The name of the Systems Manager device which the list of events will be filtered with",
                "key": "smDeviceName",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "authentication",
                    "missingPolicy",
                    "connection",
                    "all"
                ],
                "name": "clientVpnErrorType",
                "in": "query",
                "description": "Filter on client VPN errors with more granularity. It must be one of: authentication, missingPolicy, connection, all",
                "key": "clientVpnErrorType",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "events",
            "eventTypes"
        ],
        "method": "get",
        "description": "List the event type to human-readable description",
        "url": "/networks/{networkId}/events/eventTypes",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "firmwareUpgrades"
        ],
        "method": "get",
        "description": "Get current maintenance window for a network",
        "url": "/networks/{networkId}/firmwareUpgrades",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "firmwareUpgrades"
        ],
        "method": "put",
        "description": "Update current maintenance window for a network",
        "url": "/networks/{networkId}/firmwareUpgrades",
        "params": [{
            "name": "updateNetworkFirmwareUpgrades",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "upgradeWindow": {
                        "type": "object",
                        "properties": {
                            "dayOfWeek": {
                                "type": "string",
                                "enum": [
                                    "sun",
                                    "mon",
                                    "tue",
                                    "wed",
                                    "thu",
                                    "fri",
                                    "sat",
                                    "sunday",
                                    "monday",
                                    "tuesday",
                                    "wednesday",
                                    "thursday",
                                    "friday",
                                    "saturday"
                                ],
                                "description": "Day of the week"
                            },
                            "hourOfDay": {
                                "type": "string",
                                "enum": [
                                    "0:00",
                                    "1:00",
                                    "2:00",
                                    "3:00",
                                    "4:00",
                                    "5:00",
                                    "6:00",
                                    "7:00",
                                    "8:00",
                                    "9:00",
                                    "10:00",
                                    "11:00",
                                    "12:00",
                                    "13:00",
                                    "14:00",
                                    "15:00",
                                    "16:00",
                                    "17:00",
                                    "18:00",
                                    "19:00",
                                    "20:00",
                                    "21:00",
                                    "22:00",
                                    "23:00"
                                ],
                                "description": "Hour of the day"
                            }
                        },
                        "description": "Upgrade window for devices in network"
                    }
                },
                "example": {
                    "upgradeWindow": {
                        "hourOfDay": "4:00",
                        "dayOfWeek": "Sun"
                    }
                }
            },
            "key": "updateNetworkFirmwareUpgrades",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "floorPlans"
        ],
        "method": "get",
        "description": "List the floor plans that belong to your network",
        "url": "/networks/{networkId}/floorPlans",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "floorPlans"
        ],
        "method": "post",
        "description": "Upload a floor plan",
        "url": "/networks/{networkId}/floorPlans",
        "params": [{
            "name": "createNetworkFloorPlan",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of your floor plan."
                    },
                    "center": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair."
                    },
                    "bottomLeftCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the bottom left corner of your floor plan."
                    },
                    "bottomRightCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the bottom right corner of your floor plan."
                    },
                    "topLeftCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the top left corner of your floor plan."
                    },
                    "topRightCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the top right corner of your floor plan."
                    },
                    "imageContents": {
                        "type": "string",
                        "format": "byte",
                        "description": "The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in."
                    }
                },
                "example": {},
                "required": [
                    "name",
                    "imageContents"
                ]
            },
            "required": true,
            "key": "createNetworkFloorPlan",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "floorPlans"
        ],
        "method": "get",
        "description": "Find a floor plan by ID",
        "url": "/networks/{networkId}/floorPlans/{floorPlanId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "floorPlans"
        ],
        "method": "put",
        "description": "Update a floor plan's geolocation and other meta data",
        "url": "/networks/{networkId}/floorPlans/{floorPlanId}",
        "params": [{
            "name": "updateNetworkFloorPlan",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of your floor plan."
                    },
                    "center": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair."
                    },
                    "bottomLeftCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the bottom left corner of your floor plan."
                    },
                    "bottomRightCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the bottom right corner of your floor plan."
                    },
                    "topLeftCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the top left corner of your floor plan."
                    },
                    "topRightCorner": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude"
                            },
                            "lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude"
                            }
                        },
                        "description": "The longitude and latitude of the top right corner of your floor plan."
                    },
                    "imageContents": {
                        "type": "string",
                        "format": "byte",
                        "description": "The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image."
                    }
                },
                "example": {}
            },
            "key": "updateNetworkFloorPlan",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "floorPlans"
        ],
        "method": "delete",
        "description": "Destroy a floor plan",
        "url": "/networks/{networkId}/floorPlans/{floorPlanId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies"
        ],
        "method": "get",
        "description": "List the group policies in a network",
        "url": "/networks/{networkId}/groupPolicies",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies"
        ],
        "method": "post",
        "description": "Create a group policy",
        "url": "/networks/{networkId}/groupPolicies",
        "params": [{
            "name": "createNetworkGroupPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for your group policy. Required."
                    },
                    "scheduling": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                            },
                            "monday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Monday."
                            },
                            "tuesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Tuesday."
                            },
                            "wednesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Wednesday."
                            },
                            "thursday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Thursday."
                            },
                            "friday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Friday."
                            },
                            "saturday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Saturday."
                            },
                            "sunday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Sunday."
                            }
                        },
                        "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                    },
                    "bandwidth": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "bandwidthLimits": {
                                "type": "object",
                                "properties": {
                                    "limitUp": {
                                        "type": "integer",
                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                    },
                                    "limitDown": {
                                        "type": "integer",
                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                    }
                                },
                                "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                            }
                        },
                        "description": "    The bandwidth settings for clients bound to your group policy.\n"
                    },
                    "firewallAndTrafficShaping": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "trafficShapingRules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "definitions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "application",
                                                            "applicationCategory",
                                                            "host",
                                                            "port",
                                                            "ipRange",
                                                            "localNet"
                                                        ],
                                                        "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ]
                                            },
                                            "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                        },
                                        "perClientBandwidthLimits": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                },
                                                "bandwidthLimits": {
                                                    "type": "object",
                                                    "properties": {
                                                        "limitUp": {
                                                            "type": "integer",
                                                            "description": "The maximum upload limit (integer, in Kbps)."
                                                        },
                                                        "limitDown": {
                                                            "type": "integer",
                                                            "description": "The maximum download limit (integer, in Kbps)."
                                                        }
                                                    },
                                                    "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                }
                                            },
                                            "description": "    An object describing the bandwidth settings for your rule.\n"
                                        },
                                        "dscpTagValue": {
                                            "type": "integer",
                                            "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                                        },
                                        "pcpTagValue": {
                                            "type": "integer",
                                            "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                                        },
                                        "priority": {
                                            "type": "string",
                                            "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                        }
                                    },
                                    "required": [
                                        "definitions"
                                    ]
                                },
                                "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                            },
                            "l3FirewallRules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "comment": {
                                            "type": "string",
                                            "description": "Description of the rule (optional)"
                                        },
                                        "policy": {
                                            "type": "string",
                                            "description": "'allow' or 'deny' traffic specified by this rule"
                                        },
                                        "protocol": {
                                            "type": "string",
                                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                        },
                                        "srcPort": {
                                            "type": "string",
                                            "description": "Source port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                                        },
                                        "srcCidr": {
                                            "type": "string",
                                            "description": "Source IP address (in IP or CIDR notation), or 'any'"
                                        },
                                        "destPort": {
                                            "type": "string",
                                            "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                                        },
                                        "destCidr": {
                                            "type": "string",
                                            "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'."
                                        }
                                    },
                                    "required": [
                                        "policy",
                                        "protocol",
                                        "srcCidr",
                                        "destCidr"
                                    ]
                                },
                                "description": "An ordered array of the L3 firewall rules"
                            },
                            "l7FirewallRules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "policy": {
                                            "type": "string",
                                            "enum": [
                                                "deny"
                                            ],
                                            "description": "The policy applied to matching traffic. Must be 'deny'."
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "application",
                                                "applicationCategory",
                                                "host",
                                                "port",
                                                "ipRange"
                                            ],
                                            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                                        }
                                    }
                                },
                                "description": "An ordered array of L7 firewall rules"
                            }
                        },
                        "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                    },
                    "contentFiltering": {
                        "type": "object",
                        "properties": {
                            "allowedUrlPatterns": {
                                "type": "object",
                                "properties": {
                                    "settings": {
                                        "type": "string",
                                        "enum": [
                                            "network default",
                                            "append",
                                            "override"
                                        ],
                                        "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                    },
                                    "patterns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A list of URL patterns that are allowed"
                                    }
                                },
                                "description": "Settings for allowed URL patterns"
                            },
                            "blockedUrlPatterns": {
                                "type": "object",
                                "properties": {
                                    "settings": {
                                        "type": "string",
                                        "enum": [
                                            "network default",
                                            "append",
                                            "override"
                                        ],
                                        "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                    },
                                    "patterns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A list of URL patterns that are blocked"
                                    }
                                },
                                "description": "Settings for blocked URL patterns"
                            },
                            "blockedUrlCategories": {
                                "type": "object",
                                "properties": {
                                    "settings": {
                                        "type": "string",
                                        "enum": [
                                            "network default",
                                            "append",
                                            "override"
                                        ],
                                        "description": "How URL categories are applied. Can be 'network default', 'append' or 'override'."
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A list of URL categories to block"
                                    }
                                },
                                "description": "Settings for blocked URL categories"
                            }
                        },
                        "description": "The content filtering settings for your group policy"
                    },
                    "splashAuthSettings": {
                        "type": "string",
                        "enum": [
                            "network default",
                            "bypass"
                        ],
                        "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration."
                    },
                    "vlanTagging": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "vlanId": {
                                "type": "string",
                                "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'."
                            }
                        },
                        "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration."
                    },
                    "bonjourForwarding": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "rules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string",
                                            "description": "A description for your Bonjour forwarding rule. Optional."
                                        },
                                        "vlanId": {
                                            "type": "string",
                                            "description": "The ID of the service VLAN. Required."
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "All Services",
                                                    "AirPlay",
                                                    "AFP",
                                                    "BitTorrent",
                                                    "FTP",
                                                    "iChat",
                                                    "iTunes",
                                                    "Printers",
                                                    "Samba",
                                                    "Scanners",
                                                    "SSH"
                                                ]
                                            },
                                            "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'"
                                        }
                                    },
                                    "required": [
                                        "vlanId",
                                        "services"
                                    ]
                                },
                                "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified."
                            }
                        },
                        "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration."
                    }
                },
                "example": {
                    "name": "No video streaming",
                    "scheduling": {
                        "enabled": true,
                        "monday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "tuesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "wednesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "thursday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "friday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "saturday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        },
                        "sunday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        }
                    },
                    "bandwidth": {
                        "settings": "custom",
                        "bandwidthLimits": {
                            "limitUp": 1000000,
                            "limitDown": 1000000
                        }
                    },
                    "firewallAndTrafficShaping": {
                        "settings": "custom",
                        "trafficShapingRules": [{
                            "definitions": [{
                                    "type": "host",
                                    "value": "google.com"
                                },
                                {
                                    "type": "port",
                                    "value": "9090"
                                },
                                {
                                    "type": "ipRange",
                                    "value": "192.1.0.0"
                                },
                                {
                                    "type": "ipRange",
                                    "value": "192.1.0.0/16"
                                },
                                {
                                    "type": "ipRange",
                                    "value": "10.1.0.0/16:80"
                                },
                                {
                                    "type": "localNet",
                                    "value": "192.168.0.0/16"
                                },
                                {
                                    "type": "applicationCategory",
                                    "value": {
                                        "id": "meraki:layer7/category/2",
                                        "name": "Blogging"
                                    }
                                },
                                {
                                    "type": "application",
                                    "value": {
                                        "id": "meraki:layer7/application/133",
                                        "name": "Battle.net"
                                    }
                                }
                            ],
                            "perClientBandwidthLimits": {
                                "settings": "custom",
                                "bandwidthLimits": {
                                    "limitUp": 1000000,
                                    "limitDown": 1000000
                                }
                            },
                            "dscpTagValue": null,
                            "pcpTagValue": null
                        }],
                        "l3FirewallRules": [{
                            "comment": "Allow TCP traffic to subnet with HTTP servers.",
                            "policy": "allow",
                            "protocol": "tcp",
                            "destPort": 443,
                            "destCidr": "192.168.1.0/24"
                        }],
                        "l7FirewallRules": [{
                                "policy": "deny",
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/67",
                                    "name": "Xbox LIVE"
                                }
                            },
                            {
                                "policy": "deny",
                                "type": "applicationCategory",
                                "value": {
                                    "id": "meraki:layer7/category/2",
                                    "name": "Blogging"
                                }
                            },
                            {
                                "policy": "deny",
                                "type": "host",
                                "value": "google.com"
                            },
                            {
                                "policy": "deny",
                                "type": "port",
                                "value": "23"
                            },
                            {
                                "policy": "deny",
                                "type": "ipRange",
                                "value": "10.11.12.00/24"
                            },
                            {
                                "policy": "deny",
                                "type": "ipRange",
                                "value": "10.11.12.00/24:5555"
                            },
                            {
                                "policy": "deny",
                                "type": "blockedCountries",
                                "value": [
                                    "AX",
                                    "CA"
                                ]
                            },
                            {
                                "policy": "deny",
                                "type": "allowedCountries",
                                "value": [
                                    "US"
                                ]
                            }
                        ]
                    },
                    "contentFiltering": {
                        "allowedUrlPatterns": {
                            "settings": "network default",
                            "patterns": []
                        },
                        "blockedUrlPatterns": {
                            "settings": "append",
                            "patterns": [
                                "http://www.example.com",
                                "http://www.betting.com"
                            ]
                        },
                        "blockedUrlCategories": {
                            "settings": "override",
                            "categories": [
                                "meraki:contentFiltering/category/1",
                                "meraki:contentFiltering/category/7"
                            ]
                        }
                    },
                    "splashAuthSettings": "bypass",
                    "vlanTagging": {
                        "settings": "custom",
                        "vlanId": "1"
                    },
                    "bonjourForwarding": {
                        "settings": "custom",
                        "rules": [{
                            "description": "A simple bonjour rule",
                            "vlanId": "1",
                            "services": [
                                "All Services"
                            ]
                        }]
                    }
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createNetworkGroupPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies"
        ],
        "method": "get",
        "description": "Display a group policy",
        "url": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies"
        ],
        "method": "put",
        "description": "Update a group policy",
        "url": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "params": [{
            "name": "updateNetworkGroupPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for your group policy."
                    },
                    "scheduling": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                            },
                            "monday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Monday."
                            },
                            "tuesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Tuesday."
                            },
                            "wednesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Wednesday."
                            },
                            "thursday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Thursday."
                            },
                            "friday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Friday."
                            },
                            "saturday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Saturday."
                            },
                            "sunday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Sunday."
                            }
                        },
                        "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                    },
                    "bandwidth": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "bandwidthLimits": {
                                "type": "object",
                                "properties": {
                                    "limitUp": {
                                        "type": "integer",
                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                    },
                                    "limitDown": {
                                        "type": "integer",
                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                    }
                                },
                                "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                            }
                        },
                        "description": "    The bandwidth settings for clients bound to your group policy.\n"
                    },
                    "firewallAndTrafficShaping": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "trafficShapingRules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "definitions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "application",
                                                            "applicationCategory",
                                                            "host",
                                                            "port",
                                                            "ipRange",
                                                            "localNet"
                                                        ],
                                                        "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ]
                                            },
                                            "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                        },
                                        "perClientBandwidthLimits": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                },
                                                "bandwidthLimits": {
                                                    "type": "object",
                                                    "properties": {
                                                        "limitUp": {
                                                            "type": "integer",
                                                            "description": "The maximum upload limit (integer, in Kbps)."
                                                        },
                                                        "limitDown": {
                                                            "type": "integer",
                                                            "description": "The maximum download limit (integer, in Kbps)."
                                                        }
                                                    },
                                                    "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                }
                                            },
                                            "description": "    An object describing the bandwidth settings for your rule.\n"
                                        },
                                        "dscpTagValue": {
                                            "type": "integer",
                                            "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                                        },
                                        "pcpTagValue": {
                                            "type": "integer",
                                            "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                                        },
                                        "priority": {
                                            "type": "string",
                                            "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                        }
                                    },
                                    "required": [
                                        "definitions"
                                    ]
                                },
                                "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                            },
                            "l3FirewallRules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "comment": {
                                            "type": "string",
                                            "description": "Description of the rule (optional)"
                                        },
                                        "policy": {
                                            "type": "string",
                                            "description": "'allow' or 'deny' traffic specified by this rule"
                                        },
                                        "protocol": {
                                            "type": "string",
                                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                        },
                                        "srcPort": {
                                            "type": "string",
                                            "description": "Source port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                                        },
                                        "srcCidr": {
                                            "type": "string",
                                            "description": "Source IP address (in IP or CIDR notation), or 'any'"
                                        },
                                        "destPort": {
                                            "type": "string",
                                            "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                                        },
                                        "destCidr": {
                                            "type": "string",
                                            "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'."
                                        }
                                    },
                                    "required": [
                                        "policy",
                                        "protocol",
                                        "srcCidr",
                                        "destCidr"
                                    ]
                                },
                                "description": "An ordered array of the L3 firewall rules"
                            },
                            "l7FirewallRules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "policy": {
                                            "type": "string",
                                            "enum": [
                                                "deny"
                                            ],
                                            "description": "The policy applied to matching traffic. Must be 'deny'."
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "application",
                                                "applicationCategory",
                                                "host",
                                                "port",
                                                "ipRange"
                                            ],
                                            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                                        }
                                    }
                                },
                                "description": "An ordered array of L7 firewall rules"
                            }
                        },
                        "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                    },
                    "contentFiltering": {
                        "type": "object",
                        "properties": {
                            "allowedUrlPatterns": {
                                "type": "object",
                                "properties": {
                                    "settings": {
                                        "type": "string",
                                        "enum": [
                                            "network default",
                                            "append",
                                            "override"
                                        ],
                                        "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                    },
                                    "patterns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A list of URL patterns that are allowed"
                                    }
                                },
                                "description": "Settings for allowed URL patterns"
                            },
                            "blockedUrlPatterns": {
                                "type": "object",
                                "properties": {
                                    "settings": {
                                        "type": "string",
                                        "enum": [
                                            "network default",
                                            "append",
                                            "override"
                                        ],
                                        "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                    },
                                    "patterns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A list of URL patterns that are blocked"
                                    }
                                },
                                "description": "Settings for blocked URL patterns"
                            },
                            "blockedUrlCategories": {
                                "type": "object",
                                "properties": {
                                    "settings": {
                                        "type": "string",
                                        "enum": [
                                            "network default",
                                            "append",
                                            "override"
                                        ],
                                        "description": "How URL categories are applied. Can be 'network default', 'append' or 'override'."
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A list of URL categories to block"
                                    }
                                },
                                "description": "Settings for blocked URL categories"
                            }
                        },
                        "description": "The content filtering settings for your group policy"
                    },
                    "splashAuthSettings": {
                        "type": "string",
                        "enum": [
                            "network default",
                            "bypass"
                        ],
                        "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration."
                    },
                    "vlanTagging": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "vlanId": {
                                "type": "string",
                                "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'."
                            }
                        },
                        "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration."
                    },
                    "bonjourForwarding": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "enum": [
                                    "network default",
                                    "ignore",
                                    "custom"
                                ],
                                "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'."
                            },
                            "rules": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string",
                                            "description": "A description for your Bonjour forwarding rule. Optional."
                                        },
                                        "vlanId": {
                                            "type": "string",
                                            "description": "The ID of the service VLAN. Required."
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "All Services",
                                                    "AirPlay",
                                                    "AFP",
                                                    "BitTorrent",
                                                    "FTP",
                                                    "iChat",
                                                    "iTunes",
                                                    "Printers",
                                                    "Samba",
                                                    "Scanners",
                                                    "SSH"
                                                ]
                                            },
                                            "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'"
                                        }
                                    },
                                    "required": [
                                        "vlanId",
                                        "services"
                                    ]
                                },
                                "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified."
                            }
                        },
                        "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration."
                    }
                },
                "example": {
                    "name": "No video streaming",
                    "scheduling": {
                        "enabled": true,
                        "monday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "tuesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "wednesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "thursday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "friday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "saturday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        },
                        "sunday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        }
                    },
                    "bandwidth": {
                        "settings": "custom",
                        "bandwidthLimits": {
                            "limitUp": 1000000,
                            "limitDown": 1000000
                        }
                    },
                    "firewallAndTrafficShaping": {
                        "settings": "custom",
                        "trafficShapingRules": [{
                            "definitions": [{
                                    "type": "host",
                                    "value": "google.com"
                                },
                                {
                                    "type": "port",
                                    "value": "9090"
                                },
                                {
                                    "type": "ipRange",
                                    "value": "192.1.0.0"
                                },
                                {
                                    "type": "ipRange",
                                    "value": "192.1.0.0/16"
                                },
                                {
                                    "type": "ipRange",
                                    "value": "10.1.0.0/16:80"
                                },
                                {
                                    "type": "localNet",
                                    "value": "192.168.0.0/16"
                                },
                                {
                                    "type": "applicationCategory",
                                    "value": {
                                        "id": "meraki:layer7/category/2",
                                        "name": "Blogging"
                                    }
                                },
                                {
                                    "type": "application",
                                    "value": {
                                        "id": "meraki:layer7/application/133",
                                        "name": "Battle.net"
                                    }
                                }
                            ],
                            "perClientBandwidthLimits": {
                                "settings": "custom",
                                "bandwidthLimits": {
                                    "limitUp": 1000000,
                                    "limitDown": 1000000
                                }
                            },
                            "dscpTagValue": null,
                            "pcpTagValue": null
                        }],
                        "l3FirewallRules": [{
                            "comment": "Allow TCP traffic to subnet with HTTP servers.",
                            "policy": "allow",
                            "protocol": "tcp",
                            "destPort": 443,
                            "destCidr": "192.168.1.0/24"
                        }],
                        "l7FirewallRules": [{
                                "policy": "deny",
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/67",
                                    "name": "Xbox LIVE"
                                }
                            },
                            {
                                "policy": "deny",
                                "type": "applicationCategory",
                                "value": {
                                    "id": "meraki:layer7/category/2",
                                    "name": "Blogging"
                                }
                            },
                            {
                                "policy": "deny",
                                "type": "host",
                                "value": "google.com"
                            },
                            {
                                "policy": "deny",
                                "type": "port",
                                "value": "23"
                            },
                            {
                                "policy": "deny",
                                "type": "ipRange",
                                "value": "10.11.12.00/24"
                            },
                            {
                                "policy": "deny",
                                "type": "ipRange",
                                "value": "10.11.12.00/24:5555"
                            },
                            {
                                "policy": "deny",
                                "type": "blockedCountries",
                                "value": [
                                    "AX",
                                    "CA"
                                ]
                            },
                            {
                                "policy": "deny",
                                "type": "allowedCountries",
                                "value": [
                                    "US"
                                ]
                            }
                        ]
                    },
                    "contentFiltering": {
                        "allowedUrlPatterns": {
                            "settings": "network default",
                            "patterns": []
                        },
                        "blockedUrlPatterns": {
                            "settings": "append",
                            "patterns": [
                                "http://www.example.com",
                                "http://www.betting.com"
                            ]
                        },
                        "blockedUrlCategories": {
                            "settings": "override",
                            "categories": [
                                "meraki:contentFiltering/category/1",
                                "meraki:contentFiltering/category/7"
                            ]
                        }
                    },
                    "splashAuthSettings": "bypass",
                    "vlanTagging": {
                        "settings": "custom",
                        "vlanId": "1"
                    },
                    "bonjourForwarding": {
                        "settings": "custom",
                        "rules": [{
                            "description": "A simple bonjour rule",
                            "vlanId": "1",
                            "services": [
                                "All Services"
                            ]
                        }]
                    }
                }
            },
            "key": "updateNetworkGroupPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies"
        ],
        "method": "delete",
        "description": "Delete a group policy",
        "url": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies",
            "umbrella",
            "protection"
        ],
        "method": "get",
        "description": "Show Umbrella protection on a group policy",
        "url": "/networks/{networkId}/groupPolicies/{groupPolicyId}/umbrella/protection",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies",
            "umbrella",
            "protection",
            "applyProtectionAttempts"
        ],
        "method": "post",
        "description": "Apply Umbrella protection on a group policy",
        "url": "/networks/{networkId}/groupPolicies/{groupPolicyId}/umbrella/protection/applyProtectionAttempts",
        "params": [{
            "name": "createNetworkGroupPolicyUmbrellaProtectionApplyProtectionAttempt",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "umbrellaProtectionEnabled": {
                        "type": "boolean",
                        "description": "Enable/Disable Umbrella protection"
                    },
                    "umbrellaPolicyId": {
                        "type": "integer",
                        "description": "ID of the Umbrella policy to be applied"
                    },
                    "excludedDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domain names excluded from the applied protection"
                    }
                },
                "example": {
                    "umbrellaProtectionEnabled": true,
                    "umbrellaPolicyId": "1234",
                    "excludedDomains": [
                        "internal-domain.io"
                    ]
                },
                "required": [
                    "umbrellaProtectionEnabled"
                ]
            },
            "required": true,
            "key": "createNetworkGroupPolicyUmbrellaProtectionApplyProtectionAttempt",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "groupPolicies",
            "umbrella",
            "protection",
            "applyProtectionAttempts"
        ],
        "method": "get",
        "description": "Status of applying Umbrella protection on a group policy",
        "url": "/networks/{networkId}/groupPolicies/{groupPolicyId}/umbrella/protection/applyProtectionAttempts/{attemptId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "locationScanning"
        ],
        "method": "get",
        "description": "Return scanning API settings",
        "url": "/networks/{networkId}/locationScanning",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "locationScanning"
        ],
        "method": "put",
        "description": "Change scanning API settings",
        "url": "/networks/{networkId}/locationScanning",
        "params": [{
            "name": "updateNetworkLocationScanning",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "analyticsEnabled": {
                        "type": "boolean",
                        "description": "Collect location and scanning analytics"
                    },
                    "scanningApiEnabled": {
                        "type": "boolean",
                        "description": "Enable push API for scanning events, analytics must be enabled"
                    }
                },
                "example": {
                    "analyticsEnabled": true,
                    "scanningApiEnabled": true
                }
            },
            "key": "updateNetworkLocationScanning",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "locationScanning",
            "httpServers"
        ],
        "method": "get",
        "description": "Return list of scanning API receivers",
        "url": "/networks/{networkId}/locationScanning/httpServers",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "locationScanning",
            "httpServers"
        ],
        "method": "put",
        "description": "Set the list of scanning API receivers. Old receivers will be removed",
        "url": "/networks/{networkId}/locationScanning/httpServers",
        "params": [{
            "name": "updateNetworkLocationScanningHttpServers",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "scanningApiVersion": {
                                    "type": "integer",
                                    "enum": [
                                        1,
                                        2,
                                        3
                                    ],
                                    "description": "API version that the receiver expects to get; '1', '2' or '3'"
                                },
                                "radioType": {
                                    "type": "string",
                                    "enum": [
                                        "WiFi",
                                        "BLE"
                                    ],
                                    "description": "Radio type to use for scanning; 'WiFi' or 'BLE'"
                                },
                                "httpServer": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "The URL of the HTTP server"
                                        },
                                        "sharedSecret": {
                                            "type": "string",
                                            "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki."
                                        }
                                    },
                                    "required": [
                                        "url",
                                        "sharedSecret"
                                    ],
                                    "description": "An http server object"
                                }
                            },
                            "required": [
                                "scanningApiVersion",
                                "radioType",
                                "httpServer"
                            ]
                        },
                        "description": "A set of http server configurations"
                    }
                },
                "example": {
                    "endpoints": [{
                        "httpServer": {
                            "url": "https://example.com",
                            "sharedSecret": "shhh"
                        },
                        "scanningApiVersion": 3,
                        "radioType": "WiFi"
                    }]
                },
                "required": [
                    "endpoints"
                ]
            },
            "required": true,
            "key": "updateNetworkLocationScanningHttpServers",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "merakiAuthUsers"
        ],
        "method": "get",
        "description": "List the users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a wired network)",
        "url": "/networks/{networkId}/merakiAuthUsers",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "merakiAuthUsers"
        ],
        "method": "post",
        "description": "Create a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)",
        "url": "/networks/{networkId}/merakiAuthUsers",
        "params": [{
            "name": "createNetworkMerakiAuthUser",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address of the user"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for this user account"
                    },
                    "accountType": {
                        "type": "string",
                        "enum": [
                            "Guest",
                            "802.1X",
                            "Client VPN"
                        ],
                        "description": "Authorization type for user. Can be 'Guest' or '802.1X' for wireless networks, or 'Client VPN' for wired networks. Defaults to '802.1X'.",
                        "default": "802.1X"
                    },
                    "emailPasswordToUser": {
                        "type": "boolean",
                        "description": "Whether or not Meraki should email the password to user. Default is false."
                    },
                    "authorizations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ssidNumber": {
                                    "type": "integer",
                                    "description": "Required for wireless networks. The SSID for which the user is being authorized, which must be configured for the user's given accountType."
                                },
                                "expiresAt": {
                                    "type": "string",
                                    "description": "Date for authorization to expire. Set to 'Never' for the authorization to not expire, which is the default.",
                                    "default": "Never"
                                }
                            }
                        },
                        "description": "Authorization zones and expiration dates for the user."
                    }
                },
                "example": {},
                "required": [
                    "email",
                    "name",
                    "password",
                    "authorizations"
                ]
            },
            "required": true,
            "key": "createNetworkMerakiAuthUser",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "merakiAuthUsers"
        ],
        "method": "get",
        "description": "Return the Meraki Auth splash guest, RADIUS, or client VPN user",
        "url": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "merakiAuthUsers"
        ],
        "method": "delete",
        "description": "Delete a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be deleted)",
        "url": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "merakiAuthUsers"
        ],
        "method": "put",
        "description": "Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be deleted)",
        "url": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
        "params": [{
            "name": "updateNetworkMerakiAuthUser",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the user"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for this user account"
                    },
                    "emailPasswordToUser": {
                        "type": "boolean",
                        "description": "Whether or not Meraki should email the password to user. Default is false."
                    },
                    "authorizations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ssidNumber": {
                                    "type": "integer",
                                    "description": "SSID for which the user is being authorized"
                                },
                                "expiresAt": {
                                    "type": "string",
                                    "description": "Date for authorization to expire. Default is for authorization to not expire.",
                                    "default": "Never"
                                }
                            },
                            "required": [
                                "ssidNumber"
                            ]
                        },
                        "description": "Authorization zones and expiration dates for the user."
                    }
                },
                "example": {}
            },
            "key": "updateNetworkMerakiAuthUser",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "mqttBrokers"
        ],
        "method": "get",
        "description": "List the MQTT brokers for this network",
        "url": "/networks/{networkId}/mqttBrokers",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "mqttBrokers"
        ],
        "method": "post",
        "description": "Add an MQTT broker",
        "url": "/networks/{networkId}/mqttBrokers",
        "params": [{
            "name": "createNetworkMqttBroker",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the MQTT broker"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host name/IP address where MQTT broker runs"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Host port though which MQTT broker can be reached"
                    }
                },
                "example": {
                    "name": "MQTT_Broker_1",
                    "host": "1.1.1.1",
                    "port": 1234
                },
                "required": [
                    "name",
                    "host",
                    "port"
                ]
            },
            "required": true,
            "key": "createNetworkMqttBroker",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "mqttBrokers"
        ],
        "method": "get",
        "description": "Return an MQTT broker",
        "url": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "mqttBrokers"
        ],
        "method": "put",
        "description": "Update an MQTT broker",
        "url": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
        "params": [{
            "name": "updateNetworkMqttBroker",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the mqtt config"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host name where mqtt broker runs"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Host port though which mqtt broker can be reached"
                    }
                },
                "example": {
                    "id": "1234",
                    "name": "MQTT_Broker_1",
                    "host": "1.1.1.1",
                    "port": 1234
                }
            },
            "key": "updateNetworkMqttBroker",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "mqttBrokers"
        ],
        "method": "delete",
        "description": "Delete an MQTT broker",
        "url": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "netflow"
        ],
        "method": "get",
        "description": "Return the NetFlow traffic reporting settings for a network",
        "url": "/networks/{networkId}/netflow",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "netflow"
        ],
        "method": "put",
        "description": "Update the NetFlow traffic reporting settings for a network",
        "url": "/networks/{networkId}/netflow",
        "params": [{
            "name": "updateNetworkNetflow",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "reportingEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false)."
                    },
                    "collectorIp": {
                        "type": "string",
                        "description": "The IPv4 address of the NetFlow collector."
                    },
                    "collectorPort": {
                        "type": "integer",
                        "description": "The port that the NetFlow collector will be listening on."
                    }
                },
                "example": {
                    "reportingEnabled": true,
                    "collectorIp": "1.2.3.4",
                    "collectorPort": 443
                }
            },
            "key": "updateNetworkNetflow",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "networkHealth",
            "channelUtilization"
        ],
        "method": "get",
        "description": "Get the channel utilization over each radio for all APs in a network.",
        "url": "/networks/{networkId}/networkHealth/channelUtilization",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 10.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "pii",
            "piiKeys"
        ],
        "method": "get",
        "description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```",
        "url": "/networks/{networkId}/pii/piiKeys",
        "params": [{
                "type": "string",
                "name": "username",
                "in": "query",
                "description": "The username of a Systems Manager user",
                "key": "username",
                "source": "query"
            },
            {
                "type": "string",
                "name": "email",
                "in": "query",
                "description": "The email of a network user account or a Systems Manager device",
                "key": "email",
                "source": "query"
            },
            {
                "type": "string",
                "name": "mac",
                "in": "query",
                "description": "The MAC of a network client device or a Systems Manager device",
                "key": "mac",
                "source": "query"
            },
            {
                "type": "string",
                "name": "serial",
                "in": "query",
                "description": "The serial of a Systems Manager device",
                "key": "serial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "imei",
                "in": "query",
                "description": "The IMEI of a Systems Manager device",
                "key": "imei",
                "source": "query"
            },
            {
                "type": "string",
                "name": "bluetoothMac",
                "in": "query",
                "description": "The MAC of a Bluetooth client",
                "key": "bluetoothMac",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "pii",
            "requests"
        ],
        "method": "get",
        "description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
        "url": "/networks/{networkId}/pii/requests",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "pii",
            "requests"
        ],
        "method": "post",
        "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
        "url": "/networks/{networkId}/pii/requests",
        "params": [{
            "name": "createNetworkPiiRequest",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "delete",
                            "restrict processing"
                        ],
                        "description": "One of \"delete\" or \"restrict processing\""
                    },
                    "datasets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of a network log in. Only applies to \"delete\" requests."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email of a network user account. Only applies to \"delete\" requests."
                    },
                    "mac": {
                        "type": "string",
                        "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests."
                    },
                    "smDeviceId": {
                        "type": "string",
                        "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device."
                    },
                    "smUserId": {
                        "type": "string",
                        "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user."
                    }
                },
                "example": {
                    "type": "delete",
                    "datasets": [
                        "usage",
                        "events"
                    ],
                    "mac": "00:77:00:77:00:77"
                }
            },
            "key": "createNetworkPiiRequest",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "pii",
            "requests"
        ],
        "method": "get",
        "description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
        "url": "/networks/{networkId}/pii/requests/{requestId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "pii",
            "requests"
        ],
        "method": "delete",
        "description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
        "url": "/networks/{networkId}/pii/requests/{requestId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "pii",
            "smDevicesForKey"
        ],
        "method": "get",
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```",
        "url": "/networks/{networkId}/pii/smDevicesForKey",
        "params": [{
                "type": "string",
                "name": "username",
                "in": "query",
                "description": "The username of a Systems Manager user",
                "key": "username",
                "source": "query"
            },
            {
                "type": "string",
                "name": "email",
                "in": "query",
                "description": "The email of a network user account or a Systems Manager device",
                "key": "email",
                "source": "query"
            },
            {
                "type": "string",
                "name": "mac",
                "in": "query",
                "description": "The MAC of a network client device or a Systems Manager device",
                "key": "mac",
                "source": "query"
            },
            {
                "type": "string",
                "name": "serial",
                "in": "query",
                "description": "The serial of a Systems Manager device",
                "key": "serial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "imei",
                "in": "query",
                "description": "The IMEI of a Systems Manager device",
                "key": "imei",
                "source": "query"
            },
            {
                "type": "string",
                "name": "bluetoothMac",
                "in": "query",
                "description": "The MAC of a Bluetooth client",
                "key": "bluetoothMac",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "pii",
            "smOwnersForKey"
        ],
        "method": "get",
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```",
        "url": "/networks/{networkId}/pii/smOwnersForKey",
        "params": [{
                "type": "string",
                "name": "username",
                "in": "query",
                "description": "The username of a Systems Manager user",
                "key": "username",
                "source": "query"
            },
            {
                "type": "string",
                "name": "email",
                "in": "query",
                "description": "The email of a network user account or a Systems Manager device",
                "key": "email",
                "source": "query"
            },
            {
                "type": "string",
                "name": "mac",
                "in": "query",
                "description": "The MAC of a network client device or a Systems Manager device",
                "key": "mac",
                "source": "query"
            },
            {
                "type": "string",
                "name": "serial",
                "in": "query",
                "description": "The serial of a Systems Manager device",
                "key": "serial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "imei",
                "in": "query",
                "description": "The IMEI of a Systems Manager device",
                "key": "imei",
                "source": "query"
            },
            {
                "type": "string",
                "name": "bluetoothMac",
                "in": "query",
                "description": "The MAC of a Bluetooth client",
                "key": "bluetoothMac",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "sensors"
        ],
        "method": "get",
        "description": "List all sensors in a given network.",
        "url": "/networks/{networkId}/sensors",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "temperature",
                    "humidity",
                    "water_detection",
                    "door"
                ],
                "name": "alertingOn",
                "in": "query",
                "description": "The type of reading that the sensor should be alerting on. Can be one of 'temperature', 'humidity', 'water_detection' or 'door'",
                "key": "alertingOn",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "alertProfiles",
                "in": "query",
                "description": "The list of environmental alert profile names that the sensor is bound to.",
                "key": "alertProfiles",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "sensors",
            "alerts",
            "profiles"
        ],
        "method": "get",
        "description": "Lists all sensor alert profiles for a network.",
        "url": "/networks/{networkId}/sensors/alerts/profiles",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "sensors",
            "alerts",
            "profiles"
        ],
        "method": "post",
        "description": "Creates a sensor alert profiles for a network.",
        "url": "/networks/{networkId}/sensors/alerts/profiles",
        "params": [{
            "name": "createNetworkSensorsAlertsProfile",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the sensor alert profiles."
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Alert condition type"
                                },
                                "direction": {
                                    "type": "string",
                                    "description": "Alert condition direction"
                                },
                                "threshold": {
                                    "type": "integer",
                                    "description": "Alert threshold"
                                }
                            }
                        },
                        "description": "List of alert conditions."
                    },
                    "recipients": {
                        "type": "object",
                        "properties": {
                            "emails": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A list of emails that will receive information about the alert"
                            },
                            "smsNumbers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A list of SMS numbers that will receive information about the alert"
                            }
                        },
                        "description": "List of alert conditions."
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of device serials assigned to this sensor alert profile."
                    }
                },
                "example": {}
            },
            "key": "createNetworkSensorsAlertsProfile",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "sensors",
            "alerts",
            "profiles"
        ],
        "method": "get",
        "description": "Lists all sensor alert profiles for a network.",
        "url": "/networks/{networkId}/sensors/alerts/profiles/{id}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "sensors",
            "alerts",
            "profiles"
        ],
        "method": "put",
        "description": "Updates a sensor alert profiles for a network.",
        "url": "/networks/{networkId}/sensors/alerts/profiles/{id}",
        "params": [{
            "name": "updateNetworkSensorsAlertsProfile",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the sensor alert profiles."
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Alert condition type"
                                },
                                "direction": {
                                    "type": "string",
                                    "description": "Alert condition direction"
                                },
                                "threshold": {
                                    "type": "integer",
                                    "description": "Alert threshold"
                                }
                            }
                        },
                        "description": "List of alert conditions."
                    },
                    "recipients": {
                        "type": "object",
                        "properties": {
                            "emails": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A list of emails that will receive information about the alert"
                            },
                            "smsNumbers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A list of SMS numbers that will receive information about the alert"
                            }
                        },
                        "description": "List of alert conditions."
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of device serials assigned to this sensor alert profile."
                    }
                },
                "example": {}
            },
            "key": "updateNetworkSensorsAlertsProfile",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "sensors",
            "alerts",
            "profiles"
        ],
        "method": "delete",
        "description": "Deletes a sensor alert profile from a network.",
        "url": "/networks/{networkId}/sensors/alerts/profiles/{id}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "monitor",
            "sensors",
            "health",
            "historicalBySensor"
        ],
        "method": "get",
        "description": "Return time series sensor health statistics for a list of sensors",
        "url": "/networks/{networkId}/sensors/health/historicalBySensor",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 730 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 730 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 730 days. The default is 2 hours.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 120, 3600, 14400, 86400. The default is 120.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "serials",
                "in": "query",
                "description": "List of sensor serials for which we are generating statistics for.",
                "key": "serials",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "uptime",
                    "numMeasurements",
                    "numSent",
                    "measurementInterval",
                    "wakePeriod",
                    "numMissedConnections",
                    "avgAdvTime",
                    "logAdvTime",
                    "usbConnection",
                    "advertisingPower",
                    "magneticField",
                    "rssi",
                    "scanTime",
                    "batteryPercentage"
                ],
                "name": "metric",
                "in": "query",
                "required": true,
                "description": "Type of health metric we want data for.",
                "key": "metric",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "avg",
                    "max",
                    "min"
                ],
                "name": "agg",
                "in": "query",
                "description": "The aggregation algorithm to apply to the data. By default we will aggregate all of the readings in the resolution bucket using average but maximum and minimum values are also supported. Supported values are \"avg\", \"max\", \"min\"",
                "key": "agg",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "sensors",
            "health",
            "latestBySensor"
        ],
        "method": "get",
        "description": "Provides the latest health reading for a set of sensors.",
        "url": "/networks/{networkId}/sensors/health/latestBySensor",
        "params": [{
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "serials",
                "in": "query",
                "required": true,
                "description": "List of sensor serials for which we are generating statistics for.",
                "key": "serials",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "uptime",
                        "numMeasurements",
                        "numSent",
                        "measurementInterval",
                        "wakePeriod",
                        "numMissedConnections",
                        "avgAdvTime",
                        "logAdvTime",
                        "usbConnection",
                        "advertisingPower",
                        "magneticField",
                        "rssi",
                        "firmwareVersion",
                        "scanTime",
                        "batteryPercentage"
                    ]
                },
                "name": "metrics",
                "in": "query",
                "description": "Types of metrics we want the data for.",
                "key": "metrics",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "sensors",
            "stats",
            "aggregateBySensor"
        ],
        "method": "get",
        "description": "Provides aggregated data about a set of sensors.",
        "url": "/networks/{networkId}/sensors/stats/aggregateBySensor",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 730 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 730 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 730 days. The default is 2 hours.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "serials",
                "in": "query",
                "description": "List of sensor serials for which we are generating statistics for.",
                "key": "serials",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "temperature",
                    "humidity",
                    "water_detection",
                    "door",
                    "battery"
                ],
                "name": "metric",
                "in": "query",
                "required": true,
                "description": "Type of metric we want the data for. This depends on the type of sensors you are requesting data, for example, \"temperature\" would be used for gathering temperature readings.",
                "key": "metric",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "avg",
                    "max",
                    "min"
                ],
                "name": "agg",
                "in": "query",
                "description": "The aggregation algorithm to apply to the data. By default we will aggregate all of the readings in the resolution bucket using average but maximum and minimum values are also supported.",
                "key": "agg",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "sensors",
            "stats",
            "historicalBySensor"
        ],
        "method": "get",
        "description": "Return time series sensor statistics for a list of sensors",
        "url": "/networks/{networkId}/sensors/stats/historicalBySensor",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 730 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 730 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 730 days. The default is 2 hours.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 120, 3600, 14400, 86400. The default is 120.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "serials",
                "in": "query",
                "description": "List of sensor serials for which we are generating statistics for.",
                "key": "serials",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "temperature",
                    "humidity",
                    "water_detection",
                    "door",
                    "battery"
                ],
                "name": "metric",
                "in": "query",
                "required": true,
                "description": "Type of metric we want the data for. This depends on the type of sensors you are requesting data, for example, \"temperature\" would be used for gathering temperature readings.",
                "key": "metric",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "avg",
                    "max",
                    "min"
                ],
                "name": "agg",
                "in": "query",
                "description": "The aggregation algorithm to apply to the data. By default we will aggregate all of the readings in the resolution bucket using average but maximum and minimum values are also supported. Supported values are \"avg\", \"max\", \"min\"",
                "key": "agg",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "sensors",
            "stats",
            "latestBySensor"
        ],
        "method": "get",
        "description": "Provides the latest reading for a set of sensors.",
        "url": "/networks/{networkId}/sensors/stats/latestBySensor",
        "params": [{
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "serials",
                "in": "query",
                "description": "List of sensor serials for which we are generating statistics for.",
                "key": "serials",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "temperature",
                    "humidity",
                    "water_detection",
                    "door",
                    "battery"
                ],
                "name": "metric",
                "in": "query",
                "required": true,
                "description": "Type of metric we want the data for. This depends on the type of sensors you are requesting data, for example, \"temperature\" would be used for gathering temperature readings.",
                "key": "metric",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "settings"
        ],
        "method": "get",
        "description": "Return the settings for a network",
        "url": "/networks/{networkId}/settings",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "settings"
        ],
        "method": "put",
        "description": "Update the settings for a network",
        "url": "/networks/{networkId}/settings",
        "params": [{
            "name": "updateNetworkSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "localStatusPageEnabled": {
                        "type": "boolean",
                        "description": "Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                    },
                    "remoteStatusPageEnabled": {
                        "type": "boolean",
                        "description": "Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true"
                    }
                },
                "example": {
                    "localStatusPageEnabled": true,
                    "remoteStatusPageEnabled": true
                }
            },
            "key": "updateNetworkSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "apps"
        ],
        "method": "get",
        "description": "List the managed apps for this network",
        "url": "/networks/{networkId}/sm/apps",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "apps"
        ],
        "method": "post",
        "description": "Add a managed app",
        "url": "/networks/{networkId}/sm/apps",
        "params": [{
            "name": "createNetworkSmApp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Requried. The name of the managed app"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Requried. The identifier of the managed app. Must match the package name / bundle ID exactly. Cannot be altered after creation."
                    },
                    "systemType": {
                        "type": "string",
                        "description": "Required. The system type of the managed app. Cannot be altered after creation. One of: ios, mac, android, chrome, pc"
                    },
                    "installMethod": {
                        "type": "string",
                        "description": "Requried. The install method of the app. Cannot be altered after creation. One of: store(iOS, macOS, Android), manifestUrl (iOS), manifestPlist (iOS), externalUrl (Android, macOS, Windows)"
                    },
                    "vendor": {
                        "type": "string",
                        "description": "Requried. The vendor of the managed app"
                    },
                    "version": {
                        "type": "string",
                        "description": "Required for non-store install methods. The version of the managed app"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the managed app"
                    },
                    "itunesId": {
                        "type": "string",
                        "description": "Required for macOS and iOS store apps. The iTunes identifier of the managed app."
                    },
                    "purchaseMethod": {
                        "type": "string",
                        "description": "The license purchase method of the application. One of: vppCodes, vppUserAssignment, vppDeviceAssignment, none"
                    },
                    "scope": {
                        "type": "string",
                        "description": "Requried. The scope option of the managed app. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags"
                    },
                    "autoInstall": {
                        "type": "boolean",
                        "description": "Auto-install and auto-uninstall this app when devices enter and leave the managed app's scope"
                    },
                    "autoUpdate": {
                        "type": "boolean",
                        "description": "Automatically enqueue app updates when available. App metadata will also refresh automatically from the iTunes store. Available for iOS 11.3 and above."
                    },
                    "removeWithMdm": {
                        "type": "boolean",
                        "description": "Remove this app when management profile is removed. Available for mobile applications (iOS and Android)"
                    },
                    "attemptToManage": {
                        "type": "boolean",
                        "description": "Attempt to manage unmanaged app installations. Available for iOS 9 and above."
                    },
                    "backupOnSync": {
                        "type": "boolean",
                        "description": "This option is required for iOS store apps. Backup application data when the device is synced. "
                    },
                    "foregroundInstallation": {
                        "type": "boolean",
                        "description": "Run the installer in the foreground. Available for agent installed desktop software."
                    },
                    "customCommand": {
                        "type": "string",
                        "description": "Custom command executed following software installation. Available for agent installed desktop software."
                    },
                    "installArguments": {
                        "type": "string",
                        "description": "Additional command line arguments passed to the software installer. Available for agent installed desktop software."
                    },
                    "sourceManifestUrl": {
                        "type": "string",
                        "description": "iOS only. Required for installMethod manifestUrl. Url for the app."
                    },
                    "sourceExternalUrl": {
                        "type": "string",
                        "description": "Android, macOS, Windows only. Required for installMethod externalUrl. Url for the app."
                    }
                },
                "example": {
                    "id": "1234",
                    "networkId": "N_24329156",
                    "name": "My managed app",
                    "identifier": "com.test.app",
                    "systemType": "ios",
                    "installMethod": "store",
                    "vendor": "App Developer Inc.",
                    "version": "1.2.3",
                    "itunesId": "472572197",
                    "description": "Some app description",
                    "purchaseMethod": "vppDeviceAssignment",
                    "scope": "all",
                    "tags": "[]",
                    "autoInstall": true,
                    "autoUpdate": true,
                    "removeWithMdm": false,
                    "attemptToManage": true,
                    "backupOnSync": true
                }
            },
            "key": "createNetworkSmApp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "apps"
        ],
        "method": "get",
        "description": "Return a managed app",
        "url": "/networks/{networkId}/sm/apps/{appId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "apps"
        ],
        "method": "put",
        "description": "Update a managed app",
        "url": "/networks/{networkId}/sm/apps/{appId}",
        "params": [{
            "name": "updateNetworkSmApp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Requried. The name of the managed app"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Requried. The identifier of the managed app. Must match the package name / bundle ID exactly. Cannot be altered after creation."
                    },
                    "systemType": {
                        "type": "string",
                        "description": "Required. The system type of the managed app. Cannot be altered after creation. One of: ios, mac, android, chrome, pc"
                    },
                    "installMethod": {
                        "type": "string",
                        "description": "Requried. The install method of the app. Cannot be altered after creation. One of: store(iOS, macOS, Android), manifestUrl (iOS), manifestPlist (iOS), externalUrl (Android, macOS, Windows)"
                    },
                    "vendor": {
                        "type": "string",
                        "description": "Requried. The vendor of the managed app"
                    },
                    "version": {
                        "type": "string",
                        "description": "Required for non-store install methods. The version of the managed app"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the managed app"
                    },
                    "itunesId": {
                        "type": "string",
                        "description": "Required for macOS and iOS store apps. The iTunes identifier of the managed app."
                    },
                    "purchaseMethod": {
                        "type": "string",
                        "description": "The license purchase method of the application. One of: vppCodes, vppUserAssignment, vppDeviceAssignment, none"
                    },
                    "scope": {
                        "type": "string",
                        "description": "Requried. The scope option of the managed app. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags"
                    },
                    "autoInstall": {
                        "type": "boolean",
                        "description": "Auto-install and auto-uninstall this app when devices enter and leave the managed app's scope"
                    },
                    "autoUpdate": {
                        "type": "boolean",
                        "description": "Automatically enqueue app updates when available. App metadata will also refresh automatically from the iTunes store. Available for iOS 11.3 and above."
                    },
                    "removeWithMdm": {
                        "type": "boolean",
                        "description": "Remove this app when management profile is removed. Available for mobile applications (iOS and Android)"
                    },
                    "attemptToManage": {
                        "type": "boolean",
                        "description": "Attempt to manage unmanaged app installations. Available for iOS 9 and above."
                    },
                    "backupOnSync": {
                        "type": "boolean",
                        "description": "This option is required for iOS store apps. Backup application data when the device is synced. "
                    },
                    "foregroundInstallation": {
                        "type": "boolean",
                        "description": "Run the installer in the foreground. Available for agent installed desktop software."
                    },
                    "customCommand": {
                        "type": "string",
                        "description": "Custom command executed following software installation. Available for agent installed desktop software."
                    },
                    "installArguments": {
                        "type": "string",
                        "description": "Additional command line arguments passed to the software installer. Available for agent installed desktop software."
                    },
                    "sourceManifestUrl": {
                        "type": "string",
                        "description": "iOS only. Required for installMethod manifestUrl. Url for the app."
                    },
                    "sourceExternalUrl": {
                        "type": "string",
                        "description": "Android, macOS, Windows only. Required for installMethod externalUrl. Url for the app."
                    }
                },
                "example": {
                    "name": "My managed app",
                    "description": "Some app description",
                    "scope": "all"
                }
            },
            "key": "updateNetworkSmApp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "apps"
        ],
        "method": "delete",
        "description": "Delete a managed app from a network",
        "url": "/networks/{networkId}/sm/apps/{appId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "bypassActivationLockAttempts"
        ],
        "method": "post",
        "description": "Bypass activation lock attempt",
        "url": "/networks/{networkId}/sm/bypassActivationLockAttempts",
        "params": [{
            "name": "createNetworkSmBypassActivationLockAttempt",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ids of the devices to attempt activation lock bypass."
                    }
                },
                "example": {
                    "ids": [
                        "1284392014819",
                        "2983092129865"
                    ]
                },
                "required": [
                    "ids"
                ]
            },
            "required": true,
            "key": "createNetworkSmBypassActivationLockAttempt",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "bypassActivationLockAttempts"
        ],
        "method": "get",
        "description": "Bypass activation lock attempt status",
        "url": "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "certs"
        ],
        "method": "get",
        "description": "List the certs on a network",
        "url": "/networks/{networkId}/sm/certs",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "deviceProfiles"
        ],
        "method": "get",
        "description": "Get the profiles associated with a network",
        "url": "/networks/{networkId}/sm/deviceProfiles",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "get",
        "description": "List the devices enrolled in an SM network with various specified fields and filters",
        "url": "/networks/{networkId}/sm/devices",
        "params": [{
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "fields",
                "in": "query",
                "description": "Additional fields that will be displayed for each device.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion.",
                "key": "fields",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "wifiMacs",
                "in": "query",
                "description": "Filter devices by wifi mac(s).",
                "key": "wifiMacs",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "serials",
                "in": "query",
                "description": "Filter devices by serial(s).",
                "key": "serials",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "ids",
                "in": "query",
                "description": "Filter devices by id(s).",
                "key": "ids",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "scope",
                "in": "query",
                "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags.",
                "key": "scope",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Force check-in a set of devices",
        "url": "/networks/{networkId}/sm/devices/checkin",
        "params": [{
            "name": "checkinNetworkSmDevices",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "wifiMacs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The wifiMacs of the devices to be checked-in."
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ids of the devices to be checked-in."
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The serials of the devices to be checked-in."
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in."
                    }
                },
                "example": {
                    "ids": "\"1284392014819\""
                }
            },
            "key": "checkinNetworkSmDevices",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "fields"
        ],
        "method": "put",
        "description": "Modify the fields of a device",
        "url": "/networks/{networkId}/sm/devices/fields",
        "params": [{
            "name": "updateNetworkSmDevicesFields",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "wifiMac": {
                        "type": "string",
                        "description": "The wifiMac of the device to be modified."
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the device to be modified."
                    },
                    "serial": {
                        "type": "string",
                        "description": "The serial of the device to be modified."
                    },
                    "deviceFields": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "New name for the device"
                            },
                            "notes": {
                                "type": "string",
                                "description": "New notes for the device"
                            }
                        },
                        "description": "The new fields of the device. Each field of this object is optional."
                    }
                },
                "example": {
                    "id": "1284392014819",
                    "deviceFields": {
                        "name": "Miles's phone",
                        "notes": "Here's some info about my device"
                    }
                },
                "required": [
                    "deviceFields"
                ]
            },
            "required": true,
            "key": "updateNetworkSmDevicesFields",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Lock a set of devices",
        "url": "/networks/{networkId}/sm/devices/lock",
        "params": [{
            "name": "lockNetworkSmDevices",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "wifiMacs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The wifiMacs of the devices to be locked."
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ids of the devices to be locked."
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The serials of the devices to be locked."
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped."
                    },
                    "pin": {
                        "type": "integer",
                        "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices."
                    }
                },
                "example": {
                    "ids": "\"1284392014819\""
                }
            },
            "key": "lockNetworkSmDevices",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Add, delete, or update the tags of a set of devices",
        "url": "/networks/{networkId}/sm/devices/modifyTags",
        "params": [{
            "name": "modifyNetworkSmDevicesTags",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "wifiMacs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The wifiMacs of the devices to be modified."
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ids of the devices to be modified."
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The serials of the devices to be modified."
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags to be added, deleted, or updated."
                    },
                    "updateAction": {
                        "type": "string",
                        "description": "One of add, delete, or update. Only devices that have been modified will be returned."
                    }
                },
                "example": {
                    "scope": "withAny, old_tag",
                    "updateAction": "add",
                    "tags": [
                        "tag1",
                        "tag2"
                    ]
                },
                "required": [
                    "tags",
                    "updateAction"
                ]
            },
            "required": true,
            "key": "modifyNetworkSmDevicesTags",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Move a set of devices to a new network",
        "url": "/networks/{networkId}/sm/devices/move",
        "params": [{
            "name": "moveNetworkSmDevices",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "wifiMacs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The wifiMacs of the devices to be moved."
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ids of the devices to be moved."
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The serials of the devices to be moved."
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved."
                    },
                    "newNetwork": {
                        "type": "string",
                        "description": "The new network to which the devices will be moved."
                    }
                },
                "example": {
                    "ids": "\"1284392014819\"",
                    "newNetwork": "N_24329156"
                },
                "required": [
                    "newNetwork"
                ]
            },
            "required": true,
            "key": "moveNetworkSmDevices",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Wipe a device",
        "url": "/networks/{networkId}/sm/devices/wipe",
        "params": [{
            "name": "wipeNetworkSmDevices",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "wifiMac": {
                        "type": "string",
                        "description": "The wifiMac of the device to be wiped."
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the device to be wiped."
                    },
                    "serial": {
                        "type": "string",
                        "description": "The serial of the device to be wiped."
                    },
                    "pin": {
                        "type": "integer",
                        "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices."
                    }
                },
                "example": {
                    "id": "1284392014819"
                }
            },
            "key": "wipeNetworkSmDevices",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "delete",
        "description": "Delete a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "monitor",
            "devices",
            "cellularUsageHistory"
        ],
        "method": "get",
        "description": "Return the client's daily cellular data usage history. Usage data is in kilobytes.",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "certs"
        ],
        "method": "get",
        "description": "List the certs on a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/certs",
        "params": []
    },
    {
        "tags": [
            "sm",
            "monitor",
            "devices",
            "connectivity"
        ],
        "method": "get",
        "description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/connectivity",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "monitor",
            "devices",
            "desktopLogs"
        ],
        "method": "get",
        "description": "Return historical records of various Systems Manager network connection details for desktop devices.",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/desktopLogs",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "monitor",
            "devices",
            "deviceCommandLogs"
        ],
        "method": "get",
        "description": "Return historical records of commands sent to Systems Manager devices. Note that this will include the name of the Dashboard user who initiated the command if it was generated by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out of any reports.",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "deviceProfiles"
        ],
        "method": "get",
        "description": "Get the profiles associated with a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/deviceProfiles",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Install applications on a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/installApps",
        "params": [{
            "name": "installNetworkSmDeviceApps",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "appIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "ids of applications to be installed"
                    },
                    "force": {
                        "type": "boolean",
                        "description": "By default, installation of an app which is believed to already be present on the device will be skipped. If you'd like to force the installation of the app, set this parameter to true."
                    }
                },
                "example": {
                    "appIds": [
                        "1284392014819",
                        "2983092129865"
                    ]
                },
                "required": [
                    "appIds"
                ]
            },
            "required": true,
            "key": "installNetworkSmDeviceApps",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "networkAdapters"
        ],
        "method": "get",
        "description": "List the network adapters of a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/networkAdapters",
        "params": []
    },
    {
        "tags": [
            "sm",
            "monitor",
            "devices",
            "performanceHistory"
        ],
        "method": "get",
        "description": "Return historical records of various Systems Manager client metrics for desktop devices.",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/performanceHistory",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Refresh the details of a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/refreshDetails",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "restrictions"
        ],
        "method": "get",
        "description": "List the restrictions on a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/restrictions",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "securityCenters"
        ],
        "method": "get",
        "description": "List the security centers on a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/securityCenters",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "softwares"
        ],
        "method": "get",
        "description": "Get a list of softwares associated with a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/softwares",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Refresh the details of a device and sync missing apps and profiles",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/sync",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Unenroll a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Uninstall applications on a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/uninstallApps",
        "params": [{
            "name": "uninstallNetworkSmDeviceApps",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "appIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "ids of applications to be uninstalled"
                    }
                },
                "example": {
                    "appIds": [
                        "1284392014819",
                        "2983092129865"
                    ]
                },
                "required": [
                    "appIds"
                ]
            },
            "required": true,
            "key": "uninstallNetworkSmDeviceApps",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "devices",
            "wlanLists"
        ],
        "method": "get",
        "description": "List the saved SSID names on a device",
        "url": "/networks/{networkId}/sm/devices/{deviceId}/wlanLists",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences"
        ],
        "method": "get",
        "description": "List the geofences in this network",
        "url": "/networks/{networkId}/sm/geofences",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences"
        ],
        "method": "post",
        "description": "Add a new geofence",
        "url": "/networks/{networkId}/sm/geofences",
        "params": [{
            "name": "createNetworkSmGeofence",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of this geofence"
                    },
                    "description": {
                        "type": "string",
                        "description": "[optional] The description of this geofence"
                    },
                    "maxTimeOutside": {
                        "type": "integer",
                        "description": "The maximum time (minutes) a device can be outside of a geofence area before being considered violating the geofence"
                    }
                },
                "example": {
                    "name": "My Geofence",
                    "description": "This is a sample geofence",
                    "maxTimeOutside": 5
                },
                "required": [
                    "name",
                    "maxTimeOutside"
                ]
            },
            "required": true,
            "key": "createNetworkSmGeofence",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences"
        ],
        "method": "get",
        "description": "Returns a specific geofence",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences"
        ],
        "method": "put",
        "description": "Update a geofence",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}",
        "params": [{
            "name": "updateNetworkSmGeofence",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of this geofence"
                    },
                    "description": {
                        "type": "string",
                        "description": "[optional] The description of this geofence"
                    },
                    "maxTimeOutside": {
                        "type": "integer",
                        "description": "The maximum time (minutes) a device can be outside of a geofence area before being considered violating the geofence"
                    }
                },
                "example": {
                    "name": "My Geofence",
                    "description": "This is a sample geofence",
                    "maxTimeOutside": 5
                }
            },
            "key": "updateNetworkSmGeofence",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences"
        ],
        "method": "delete",
        "description": "Delete a geofence",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences",
            "regions"
        ],
        "method": "get",
        "description": "List the geofence's regions associated with the specified geofence",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}/regions",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences",
            "regions"
        ],
        "method": "post",
        "description": "Add a new geofence region to the specified geofence",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}/regions",
        "params": [{
            "name": "createNetworkSmGeofenceRegion",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The name of this geofence"
                    },
                    "type": {
                        "type": "string",
                        "description": "[optional] The description of this geofence"
                    },
                    "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "The latitudinal coordinate of the geofence region's center. Can only be for a circle geofence region"
                    },
                    "lon": {
                        "type": "number",
                        "format": "float",
                        "description": "The longitudinal coordinate of the geofence region's center. Can only be for a circle geofence region. Same as the lng param"
                    },
                    "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "The longitudinal coordinate of the geofence region's center. Can only be for a circle geofence region. Same as the lon param"
                    },
                    "radius": {
                        "type": "number",
                        "format": "float",
                        "description": "The radius of the geofence region in meters. Can only be for a circle geofence region"
                    },
                    "north": {
                        "type": "number",
                        "format": "float",
                        "description": "The northern edge of the geofence region. Can only be for a rectangle geofence region"
                    },
                    "east": {
                        "type": "number",
                        "format": "float",
                        "description": "The eastern edge of the geofence region. Can only be for a rectangle geofence region"
                    },
                    "south": {
                        "type": "number",
                        "format": "float",
                        "description": "The southern edge of the geofence region. Can only be for a rectangle geofence region"
                    },
                    "west": {
                        "type": "number",
                        "format": "float",
                        "description": "The western edge of the geofence region. Can only be for a rectangle geofence region"
                    }
                },
                "example": {
                    "description": "This is a sample geofence region",
                    "type": "circle",
                    "lat": 10,
                    "lng": 10,
                    "radius": 10
                },
                "required": [
                    "type"
                ]
            },
            "required": true,
            "key": "createNetworkSmGeofenceRegion",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences",
            "regions"
        ],
        "method": "get",
        "description": "Show the specified geofence region",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}/regions/{regionId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences",
            "regions"
        ],
        "method": "put",
        "description": "Update a specified geofence region",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}/regions/{regionId}",
        "params": [{
            "name": "updateNetworkSmGeofenceRegion",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The name of this geofence"
                    },
                    "type": {
                        "type": "string",
                        "description": "[optional] The description of this geofence"
                    },
                    "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "The latitudinal coordinate of the geofence region's center. Can only be for a circle geofence region"
                    },
                    "lon": {
                        "type": "number",
                        "format": "float",
                        "description": "The longitudinal coordinate of the geofence region's center. Can only be for a circle geofence region. Same as the lng param"
                    },
                    "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "The longitudinal coordinate of the geofence region's center. Can only be for a circle geofence region. Same as the lon param"
                    },
                    "radius": {
                        "type": "number",
                        "format": "float",
                        "description": "The radius of the geofence region in meters. Can only be for a circle geofence region"
                    },
                    "north": {
                        "type": "number",
                        "format": "float",
                        "description": "The northern edge of the geofence region. Can only be for a rectangle geofence region"
                    },
                    "east": {
                        "type": "number",
                        "format": "float",
                        "description": "The eastern edge of the geofence region. Can only be for a rectangle geofence region"
                    },
                    "south": {
                        "type": "number",
                        "format": "float",
                        "description": "The southern edge of the geofence region. Can only be for a rectangle geofence region"
                    },
                    "west": {
                        "type": "number",
                        "format": "float",
                        "description": "The western edge of the geofence region. Can only be for a rectangle geofence region"
                    }
                },
                "example": {
                    "description": "This is a sample geofence region",
                    "type": "circle",
                    "lat": 10,
                    "lng": 10,
                    "radius": 10
                }
            },
            "key": "updateNetworkSmGeofenceRegion",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "geofences",
            "regions"
        ],
        "method": "delete",
        "description": "Delete a geofence region attached to the specified geofence",
        "url": "/networks/{networkId}/sm/geofences/{geofenceId}/regions/{regionId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "profiles"
        ],
        "method": "get",
        "description": "List all profiles in a network",
        "url": "/networks/{networkId}/sm/profiles",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "softwares"
        ],
        "method": "get",
        "description": "Get a list of softwares associated with a network",
        "url": "/networks/{networkId}/sm/softwares",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "tags"
        ],
        "method": "get",
        "description": "List the tags on this node group",
        "url": "/networks/{networkId}/sm/tags",
        "params": [{
            "type": "string",
            "name": "type",
            "in": "query",
            "description": "Filter the results by the tag type",
            "key": "type",
            "source": "query"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "tags"
        ],
        "method": "post",
        "description": "Add a new tag",
        "url": "/networks/{networkId}/sm/tags",
        "params": [{
            "name": "createNetworkSmTag",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the tag. Required."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the tag. Required."
                    },
                    "associatedId": {
                        "type": "string",
                        "description": "ID of the associated entity (not used for manual tags)."
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags."
                    }
                },
                "example": {
                    "name": "Geofence Tag",
                    "type": "geofence",
                    "scope": "withAll",
                    "tags": [
                        "tag",
                        "test"
                    ]
                },
                "required": [
                    "type",
                    "name"
                ]
            },
            "required": true,
            "key": "createNetworkSmTag",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "tags"
        ],
        "method": "get",
        "description": "Show a specific tag",
        "url": "/networks/{networkId}/sm/tags/{tagId}",
        "params": [{
            "type": "string",
            "name": "type",
            "in": "query",
            "required": true,
            "description": "The type of the tag. Required.",
            "key": "type",
            "source": "query"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "tags"
        ],
        "method": "put",
        "description": "Update a tag",
        "url": "/networks/{networkId}/sm/tags/{tagId}",
        "params": [{
            "name": "updateNetworkSmTag",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the tag. Required."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this tag."
                    },
                    "associatedId": {
                        "type": "string",
                        "description": "ID of the associated entity (not used for manual tags)."
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags."
                    }
                },
                "example": {
                    "name": "Geofence Tag",
                    "type": "geofence",
                    "scope": "withAll",
                    "tags": [
                        "tag",
                        "test"
                    ]
                },
                "required": [
                    "type"
                ]
            },
            "required": true,
            "key": "updateNetworkSmTag",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "tags"
        ],
        "method": "delete",
        "description": "Delete a tag",
        "url": "/networks/{networkId}/sm/tags/{tagId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "tags",
            "scopedDevices"
        ],
        "method": "get",
        "description": "Get the devices in scope of this tag",
        "url": "/networks/{networkId}/sm/tags/{tagId}/scopedDevices",
        "params": [{
                "type": "string",
                "name": "type",
                "in": "query",
                "required": true,
                "description": "The type of the tag. Required.",
                "key": "type",
                "source": "query"
            },
            {
                "type": "string",
                "name": "scope",
                "in": "query",
                "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags.",
                "key": "scope",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "targetGroups"
        ],
        "method": "get",
        "description": "List the target groups in this network",
        "url": "/networks/{networkId}/sm/targetGroups",
        "params": [{
            "type": "boolean",
            "name": "withDetails",
            "in": "query",
            "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response",
            "key": "withDetails",
            "source": "query"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "targetGroups"
        ],
        "method": "post",
        "description": "Add a target group",
        "url": "/networks/{networkId}/sm/targetGroups",
        "params": [{
            "name": "createNetworkSmTargetGroup",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of this target group"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty."
                    }
                },
                "example": {
                    "name": "My target group",
                    "scope": "none",
                    "tags": "[]",
                    "type": "devices"
                }
            },
            "key": "createNetworkSmTargetGroup",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "targetGroups"
        ],
        "method": "get",
        "description": "Return a target group",
        "url": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "params": [{
            "type": "boolean",
            "name": "withDetails",
            "in": "query",
            "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response",
            "key": "withDetails",
            "source": "query"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "targetGroups"
        ],
        "method": "put",
        "description": "Update a target group",
        "url": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "params": [{
            "name": "updateNetworkSmTargetGroup",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of this target group"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty."
                    }
                },
                "example": {
                    "name": "My target group",
                    "scope": "none",
                    "tags": "[]",
                    "type": "devices"
                }
            },
            "key": "updateNetworkSmTargetGroup",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "targetGroups"
        ],
        "method": "delete",
        "description": "Delete a target group from a network",
        "url": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "trustedAccessConfigs"
        ],
        "method": "get",
        "description": "List Trusted Access Configs",
        "url": "/networks/{networkId}/sm/trustedAccessConfigs",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "userAccessDevices"
        ],
        "method": "get",
        "description": "List User Access Devices and its Trusted Access Connections",
        "url": "/networks/{networkId}/sm/userAccessDevices",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "userAccessDevices"
        ],
        "method": "delete",
        "description": "Delete a User Access Device",
        "url": "/networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "users"
        ],
        "method": "get",
        "description": "List the owners in an SM network with various specified fields and filters",
        "url": "/networks/{networkId}/sm/users",
        "params": [{
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "ids",
                "in": "query",
                "description": "Filter users by id(s).",
                "key": "ids",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "usernames",
                "in": "query",
                "description": "Filter users by username(s).",
                "key": "usernames",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "emails",
                "in": "query",
                "description": "Filter users by email(s).",
                "key": "emails",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "scope",
                "in": "query",
                "description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags.",
                "key": "scope",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "sm",
            "configure",
            "users",
            "certificates"
        ],
        "method": "post",
        "description": "Add an identity certificate to a user.",
        "url": "/networks/{networkId}/sm/users/certificates",
        "params": [{
            "name": "createNetworkSmUsersCertificate",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "userEmail": {
                        "type": "string",
                        "description": "The email of the user to which we should add the provided certificate."
                    },
                    "certificate": {
                        "type": "object",
                        "properties": {
                            "filename": {
                                "type": "string",
                                "description": "The desired filename for the certificate."
                            },
                            "data": {
                                "type": "string",
                                "description": "The data of the certificate. Must be in PEM format (everything between the ( -----BEGIN CERTIFICATE----- / -----END CERTIFICATE——) parameters)."
                            },
                            "password": {
                                "type": "string",
                                "description": "The password for the certificate."
                            }
                        },
                        "description": "The certificate to be added to the provided user."
                    }
                },
                "example": {
                    "userEmail": "miles@meraki.com",
                    "certificate": {
                        "filename": "sample_certificate.p12",
                        "data": "ovo1L/r2VhBO5kZEtPGhdLMaL...",
                        "password": "password"
                    }
                },
                "required": [
                    "userEmail",
                    "certificate"
                ]
            },
            "required": true,
            "key": "createNetworkSmUsersCertificate",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "users",
            "certificates"
        ],
        "method": "get",
        "description": "List the certificates that belong to a user.",
        "url": "/networks/{networkId}/sm/users/certificates",
        "params": [{
            "type": "string",
            "name": "userEmail",
            "in": "query",
            "required": true,
            "description": "The email of the user to retrieve the certificates from.",
            "key": "userEmail",
            "source": "query"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "users",
            "certificates"
        ],
        "method": "delete",
        "description": "Remove a certificate from a user.",
        "url": "/networks/{networkId}/sm/users/certificates/{certificateId}",
        "params": [{
            "name": "deleteNetworkSmUsersCertificate",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "userEmail": {
                        "type": "string",
                        "description": "The email of the user from which we should remove the certificate."
                    }
                },
                "example": {
                    "userEmail": "miles@meraki.com"
                },
                "required": [
                    "userEmail"
                ]
            },
            "required": true,
            "key": "deleteNetworkSmUsersCertificate",
            "source": "body"
        }]
    },
    {
        "tags": [
            "sm",
            "configure",
            "users",
            "deviceProfiles"
        ],
        "method": "get",
        "description": "Get the profiles associated with a user",
        "url": "/networks/{networkId}/sm/users/{userId}/deviceProfiles",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "users",
            "softwares"
        ],
        "method": "get",
        "description": "Get a list of softwares associated with a user",
        "url": "/networks/{networkId}/sm/users/{userId}/softwares",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "snmp"
        ],
        "method": "get",
        "description": "Return the SNMP settings for a network",
        "url": "/networks/{networkId}/snmp",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "snmp"
        ],
        "method": "put",
        "description": "Update the SNMP settings for a network",
        "url": "/networks/{networkId}/snmp",
        "params": [{
            "name": "updateNetworkSnmp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "enum": [
                            "none",
                            "community",
                            "users"
                        ],
                        "description": "The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3)."
                    },
                    "communityString": {
                        "type": "string",
                        "description": "The SNMP community string. Only relevant if 'access' is set to 'community'."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "The username for the SNMP user. Required."
                                },
                                "passphrase": {
                                    "type": "string",
                                    "description": "The passphrase for the SNMP user. Required."
                                }
                            },
                            "required": [
                                "username",
                                "passphrase"
                            ]
                        },
                        "description": "The list of SNMP users. Only relevant if 'access' is set to 'users'."
                    }
                },
                "example": {
                    "access": "users",
                    "users": [{
                        "username": "AzureDiamond",
                        "passphrase": "hunter2"
                    }]
                }
            },
            "key": "updateNetworkSnmp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "splashLoginAttempts"
        ],
        "method": "get",
        "description": "List the splash login attempts for a network",
        "url": "/networks/{networkId}/splashLoginAttempts",
        "params": [{
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                "name": "ssidNumber",
                "in": "query",
                "description": "Only return the login attempts for the specified SSID",
                "key": "ssidNumber",
                "source": "query"
            },
            {
                "type": "string",
                "name": "loginIdentifier",
                "in": "query",
                "description": "The username, email, or phone number used during login",
                "key": "loginIdentifier",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "timespan",
                "in": "query",
                "description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure"
        ],
        "method": "post",
        "description": "Split a combined network into individual networks for each type of device",
        "url": "/networks/{networkId}/split",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "accessControlLists"
        ],
        "method": "get",
        "description": "Return the access control lists for a MS network",
        "url": "/networks/{networkId}/switch/accessControlLists",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "accessControlLists"
        ],
        "method": "put",
        "description": "Update the access control lists for a MS network",
        "url": "/networks/{networkId}/switch/accessControlLists",
        "params": [{
            "name": "updateNetworkSwitchAccessControlLists",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)."
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule."
                                },
                                "ipVersion": {
                                    "type": "string",
                                    "enum": [
                                        "any",
                                        "ipv4",
                                        "ipv6"
                                    ],
                                    "description": "IP address version (must be 'any', 'ipv4' or 'ipv6'). Applicable only if network supports IPv6. Default value is 'ipv4'."
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', or 'any')."
                                },
                                "srcCidr": {
                                    "type": "string",
                                    "description": "Source IP address (in IP or CIDR notation) or 'any'."
                                },
                                "srcPort": {
                                    "type": "string",
                                    "description": "Source port. Must be in the range  of 1-65535 or 'any'. Default is 'any'."
                                },
                                "dstCidr": {
                                    "type": "string",
                                    "description": "Destination IP address (in IP or CIDR notation) or 'any'."
                                },
                                "dstPort": {
                                    "type": "string",
                                    "description": "Destination port. Must be in the range of 1-65535 or 'any'. Default is 'any'."
                                },
                                "vlan": {
                                    "type": "string",
                                    "description": "Incoming traffic VLAN. Must be in the range of 1-4095 or 'any'. Default is 'any'."
                                }
                            },
                            "required": [
                                "policy",
                                "protocol",
                                "srcCidr",
                                "dstCidr"
                            ]
                        },
                        "description": "An ordered array of the access control list rules (not including the default rule). An empty array will clear the rules."
                    }
                },
                "example": {
                    "rules": [{
                        "comment": "Deny SSH",
                        "policy": "deny",
                        "ipVersion": "ipv4",
                        "protocol": "tcp",
                        "srcCidr": "10.1.10.0/24",
                        "srcPort": "any",
                        "dstCidr": "172.16.30/24",
                        "dstPort": "22",
                        "vlan": "10"
                    }]
                },
                "required": [
                    "rules"
                ]
            },
            "required": true,
            "key": "updateNetworkSwitchAccessControlLists",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "accessPolicies"
        ],
        "method": "get",
        "description": "List the access policies for a switch network. Only returns access policies with 'my RADIUS server' as authentication method",
        "url": "/networks/{networkId}/switch/accessPolicies",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "accessPolicies"
        ],
        "method": "post",
        "description": "Create an access policy for a switch network. This endpoint only supports access policies with 'My RADIUS server' as authentication method.",
        "url": "/networks/{networkId}/switch/accessPolicies",
        "params": [{
            "name": "createNetworkSwitchAccessPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the access policy"
                    },
                    "radiusServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "Public IP address of the RADIUS server"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "UDP port that the RADIUS server listens on for access requests"
                                },
                                "secret": {
                                    "type": "string",
                                    "description": "RADIUS client shared secret"
                                }
                            },
                            "required": [
                                "host",
                                "port",
                                "secret"
                            ]
                        },
                        "description": "List of RADIUS servers to require connecting devices to authenticate against before granting network access"
                    },
                    "radiusTestingEnabled": {
                        "type": "boolean",
                        "description": "If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers"
                    },
                    "radiusCoaSupportEnabled": {
                        "type": "boolean",
                        "description": "Change of authentication for RADIUS re-authentication and disconnection"
                    },
                    "radiusAccountingEnabled": {
                        "type": "boolean",
                        "description": "Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients"
                    },
                    "radiusAccountingServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "Public IP address of the RADIUS accounting server"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "UDP port that the RADIUS Accounting server listens on for access requests"
                                },
                                "secret": {
                                    "type": "string",
                                    "description": "RADIUS client shared secret"
                                }
                            },
                            "required": [
                                "host",
                                "port",
                                "secret"
                            ]
                        },
                        "description": "List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access"
                    },
                    "hostMode": {
                        "type": "string",
                        "enum": [
                            "Single-Host",
                            "Multi-Domain",
                            "Multi-Host",
                            "Multi-Auth"
                        ],
                        "description": "Choose the Host Mode for the access policy."
                    },
                    "accessPolicyType": {
                        "type": "string",
                        "enum": [
                            "802.1x",
                            "MAC authentication bypass",
                            "Hybrid authentication"
                        ],
                        "description": "Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'."
                    },
                    "increaseAccessSpeed": {
                        "type": "boolean",
                        "description": "Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication."
                    },
                    "guestVlanId": {
                        "type": "integer",
                        "description": "ID for the guest VLAN allow unauthorized devices access to limited network resources"
                    },
                    "voiceVlanClients": {
                        "type": "boolean",
                        "description": "CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'."
                    },
                    "urlRedirectWalledGardenEnabled": {
                        "type": "boolean",
                        "description": "Enable to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication"
                    },
                    "urlRedirectWalledGardenRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication"
                    }
                },
                "example": {
                    "name": "Access policy #1",
                    "radiusServers": [{
                        "host": "1.2.3.4",
                        "port": 22,
                        "secret": "password1"
                    }],
                    "radiusTestingEnabled": false,
                    "radiusCoaSupportEnabled": false,
                    "radiusAccountingEnabled": true,
                    "radiusAccountingServers": [{
                        "host": "1.2.3.4",
                        "port": 22,
                        "secret": "password1"
                    }],
                    "hostMode": "Single-Host",
                    "accessPolicyType": "Hybrid authentication",
                    "increaseAccessSpeed": false,
                    "guestVlanId": 100,
                    "voiceVlanClients": true,
                    "urlRedirectWalledGardenEnabled": true,
                    "urlRedirectWalledGardenRanges": "192.168.1.0/24"
                },
                "required": [
                    "name",
                    "radiusServers",
                    "radiusTestingEnabled",
                    "radiusCoaSupportEnabled",
                    "radiusAccountingEnabled",
                    "hostMode",
                    "urlRedirectWalledGardenEnabled"
                ]
            },
            "required": true,
            "key": "createNetworkSwitchAccessPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "accessPolicies"
        ],
        "method": "get",
        "description": "Return a specific access policy for a switch network",
        "url": "/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "accessPolicies"
        ],
        "method": "put",
        "description": "Update an access policy for a switch network. This endpoint only supports access policies with 'My RADIUS server' as authentication method.",
        "url": "/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}",
        "params": [{
            "name": "updateNetworkSwitchAccessPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the access policy"
                    },
                    "radiusServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "Public IP address of the RADIUS server"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "UDP port that the RADIUS server listens on for access requests"
                                },
                                "secret": {
                                    "type": "string",
                                    "description": "RADIUS client shared secret"
                                }
                            },
                            "required": [
                                "host",
                                "port",
                                "secret"
                            ]
                        },
                        "description": "List of RADIUS servers to require connecting devices to authenticate against before granting network access"
                    },
                    "radiusTestingEnabled": {
                        "type": "boolean",
                        "description": "If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers"
                    },
                    "radiusCoaSupportEnabled": {
                        "type": "boolean",
                        "description": "Change of authentication for RADIUS re-authentication and disconnection"
                    },
                    "radiusAccountingEnabled": {
                        "type": "boolean",
                        "description": "Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients"
                    },
                    "radiusAccountingServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "Public IP address of the RADIUS accounting server"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "UDP port that the RADIUS Accounting server listens on for access requests"
                                },
                                "secret": {
                                    "type": "string",
                                    "description": "RADIUS client shared secret"
                                }
                            },
                            "required": [
                                "host",
                                "port",
                                "secret"
                            ]
                        },
                        "description": "List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access"
                    },
                    "hostMode": {
                        "type": "string",
                        "enum": [
                            "Single-Host",
                            "Multi-Domain",
                            "Multi-Host",
                            "Multi-Auth"
                        ],
                        "description": "Choose the Host Mode for the access policy."
                    },
                    "accessPolicyType": {
                        "type": "string",
                        "enum": [
                            "802.1x",
                            "MAC authentication bypass",
                            "Hybrid authentication"
                        ],
                        "description": "Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'."
                    },
                    "increaseAccessSpeed": {
                        "type": "boolean",
                        "description": "Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication."
                    },
                    "guestVlanId": {
                        "type": "integer",
                        "description": "ID for the guest VLAN allow unauthorized devices access to limited network resources"
                    },
                    "voiceVlanClients": {
                        "type": "boolean",
                        "description": "CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'."
                    },
                    "urlRedirectWalledGardenEnabled": {
                        "type": "boolean",
                        "description": "Enable to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication"
                    },
                    "urlRedirectWalledGardenRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication"
                    }
                },
                "example": {
                    "name": "Access policy #1",
                    "radiusServers": [{
                        "host": "1.2.3.4",
                        "port": 22,
                        "secret": "password1"
                    }],
                    "radiusTestingEnabled": false,
                    "radiusCoaSupportEnabled": false,
                    "radiusAccountingEnabled": true,
                    "radiusAccountingServers": [{
                        "host": "1.2.3.4",
                        "port": 22,
                        "secret": "password1"
                    }],
                    "hostMode": "Single-Host",
                    "accessPolicyType": "Hybrid authentication",
                    "increaseAccessSpeed": false,
                    "guestVlanId": 100,
                    "voiceVlanClients": true,
                    "urlRedirectWalledGardenEnabled": true,
                    "urlRedirectWalledGardenRanges": "192.168.1.0/24"
                }
            },
            "key": "updateNetworkSwitchAccessPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "accessPolicies"
        ],
        "method": "delete",
        "description": "Delete an access policy for a switch network",
        "url": "/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "alternateManagementInterface"
        ],
        "method": "get",
        "description": "Return the switch alternate management interface for the network",
        "url": "/networks/{networkId}/switch/alternateManagementInterface",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "alternateManagementInterface"
        ],
        "method": "put",
        "description": "Update the switch alternate management interface for the network",
        "url": "/networks/{networkId}/switch/alternateManagementInterface",
        "params": [{
            "name": "updateNetworkSwitchAlternateManagementInterface",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "Alternate management VLAN, must be between 1 and 4094"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "radius",
                                "snmp",
                                "syslog"
                            ]
                        },
                        "description": "Can be one or more of the following values: 'radius', 'snmp' or 'syslog'"
                    },
                    "switches": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "Switch serial number"
                                },
                                "alternateManagementIp": {
                                    "type": "string",
                                    "description": "Switch alternative management IP. To remove a prior IP setting, provide an empty string"
                                }
                            },
                            "required": [
                                "serial",
                                "alternateManagementIp"
                            ]
                        },
                        "description": "Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put 'switches' in the body when updating template networks. Also, an empty 'switches' array will remove all previous assignments"
                    }
                },
                "example": {
                    "enabled": true,
                    "vlanId": 100,
                    "protocols": [
                        "radius",
                        "snmp",
                        "syslog"
                    ],
                    "switches": [{
                        "serial": "Q234-ABCD-5678",
                        "alternateManagementIp": "1.2.3.4"
                    }]
                }
            },
            "key": "updateNetworkSwitchAlternateManagementInterface",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "dhcpServerPolicy"
        ],
        "method": "get",
        "description": "Return the DHCP server policy",
        "url": "/networks/{networkId}/switch/dhcpServerPolicy",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "dhcpServerPolicy"
        ],
        "method": "put",
        "description": "Update the DHCP server policy",
        "url": "/networks/{networkId}/switch/dhcpServerPolicy",
        "params": [{
            "name": "updateNetworkSwitchDhcpServerPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "defaultPolicy": {
                        "type": "string",
                        "enum": [
                            "allow",
                            "block"
                        ],
                        "description": "'allow' or 'block' new DHCP servers. Default value is 'allow'."
                    },
                    "allowedServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List the MAC addresses of DHCP servers to permit on the network. Applicable only if defaultPolicy is set to block. An empty array will clear the entries."
                    },
                    "blockedServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List the MAC addresses of DHCP servers to block on the network. Applicable only if defaultPolicy is set to allow. An empty array will clear the entries."
                    }
                },
                "example": {
                    "defaultPolicy": "block",
                    "allowedServers": [
                        "00:50:56:00:00:01",
                        "00:50:56:00:00:02"
                    ]
                }
            },
            "key": "updateNetworkSwitchDhcpServerPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "dscpToCosMappings"
        ],
        "method": "get",
        "description": "Return the DSCP to CoS mappings",
        "url": "/networks/{networkId}/switch/dscpToCosMappings",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "dscpToCosMappings"
        ],
        "method": "put",
        "description": "Update the DSCP to CoS mappings",
        "url": "/networks/{networkId}/switch/dscpToCosMappings",
        "params": [{
            "name": "updateNetworkSwitchDscpToCosMappings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "mappings": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dscp": {
                                    "type": "integer",
                                    "description": "The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive."
                                },
                                "cos": {
                                    "type": "integer",
                                    "description": "The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Label for the mapping (optional)."
                                }
                            },
                            "required": [
                                "dscp",
                                "cos"
                            ]
                        },
                        "description": "An array of DSCP to CoS mappings. An empty array will reset the mappings to default."
                    }
                },
                "example": {
                    "mappings": [{
                        "dscp": 1,
                        "cos": 1,
                        "title": "Video"
                    }]
                },
                "required": [
                    "mappings"
                ]
            },
            "required": true,
            "key": "updateNetworkSwitchDscpToCosMappings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "linkAggregations"
        ],
        "method": "get",
        "description": "List link aggregation groups",
        "url": "/networks/{networkId}/switch/linkAggregations",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "linkAggregations"
        ],
        "method": "post",
        "description": "Create a link aggregation group",
        "url": "/networks/{networkId}/switch/linkAggregations",
        "params": [{
            "name": "createNetworkSwitchLinkAggregation",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "switchPorts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "Serial number of the switch."
                                },
                                "portId": {
                                    "type": "string",
                                    "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                }
                            },
                            "required": [
                                "serial",
                                "portId"
                            ]
                        },
                        "description": "Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported."
                    },
                    "switchProfilePorts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "profile": {
                                    "type": "string",
                                    "description": "Profile identifier."
                                },
                                "portId": {
                                    "type": "string",
                                    "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                }
                            },
                            "required": [
                                "profile",
                                "portId"
                            ]
                        },
                        "description": "Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported."
                    }
                },
                "example": {
                    "switchPorts": [{
                            "serial": "Q234-ABCD-0001",
                            "portId": "1"
                        },
                        {
                            "serial": "Q234-ABCD-0002",
                            "portId": "2"
                        },
                        {
                            "serial": "Q234-ABCD-0003",
                            "portId": "3"
                        },
                        {
                            "serial": "Q234-ABCD-0004",
                            "portId": "4"
                        },
                        {
                            "serial": "Q234-ABCD-0005",
                            "portId": "5"
                        },
                        {
                            "serial": "Q234-ABCD-0006",
                            "portId": "6"
                        },
                        {
                            "serial": "Q234-ABCD-0007",
                            "portId": "7"
                        },
                        {
                            "serial": "Q234-ABCD-0008",
                            "portId": "8"
                        }
                    ]
                }
            },
            "key": "createNetworkSwitchLinkAggregation",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "linkAggregations"
        ],
        "method": "put",
        "description": "Update a link aggregation group",
        "url": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
        "params": [{
            "name": "updateNetworkSwitchLinkAggregation",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "switchPorts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "Serial number of the switch."
                                },
                                "portId": {
                                    "type": "string",
                                    "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                }
                            },
                            "required": [
                                "serial",
                                "portId"
                            ]
                        },
                        "description": "Array of switch or stack ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported."
                    },
                    "switchProfilePorts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "profile": {
                                    "type": "string",
                                    "description": "Profile identifier."
                                },
                                "portId": {
                                    "type": "string",
                                    "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                }
                            },
                            "required": [
                                "profile",
                                "portId"
                            ]
                        },
                        "description": "Array of switch profile ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported."
                    }
                },
                "example": {
                    "id": "NDU2N18yXzM=",
                    "switchPorts": [{
                            "serial": "Q234-ABCD-0001",
                            "portId": "1"
                        },
                        {
                            "serial": "Q234-ABCD-0002",
                            "portId": "2"
                        },
                        {
                            "serial": "Q234-ABCD-0003",
                            "portId": "3"
                        },
                        {
                            "serial": "Q234-ABCD-0004",
                            "portId": "4"
                        },
                        {
                            "serial": "Q234-ABCD-0005",
                            "portId": "5"
                        },
                        {
                            "serial": "Q234-ABCD-0006",
                            "portId": "6"
                        },
                        {
                            "serial": "Q234-ABCD-0007",
                            "portId": "7"
                        },
                        {
                            "serial": "Q234-ABCD-0008",
                            "portId": "8"
                        }
                    ]
                }
            },
            "key": "updateNetworkSwitchLinkAggregation",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "linkAggregations"
        ],
        "method": "delete",
        "description": "Split a link aggregation group into separate ports",
        "url": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "mtu"
        ],
        "method": "get",
        "description": "Return the MTU configuration",
        "url": "/networks/{networkId}/switch/mtu",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "mtu"
        ],
        "method": "put",
        "description": "Update the MTU configuration",
        "url": "/networks/{networkId}/switch/mtu",
        "params": [{
            "name": "updateNetworkSwitchMtu",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "defaultMtuSize": {
                        "type": "integer",
                        "description": "MTU size for the entire network. Default value is 9578."
                    },
                    "overrides": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "switches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch serials. Applicable only for switch network."
                                },
                                "switchProfiles": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch profile IDs. Applicable only for template network."
                                },
                                "mtuSize": {
                                    "type": "integer",
                                    "description": "MTU size for the switches or switch profiles."
                                }
                            },
                            "required": [
                                "mtuSize"
                            ]
                        },
                        "description": "Override MTU size for individual switches or switch profiles. An empty array will clear overrides."
                    }
                },
                "example": {
                    "defaultMtuSize": 9578,
                    "overrides": [{
                            "switches": [
                                "Q234-ABCD-0001",
                                "Q234-ABCD-0002",
                                "Q234-ABCD-0003"
                            ],
                            "mtuSize": 1500
                        },
                        {
                            "switchProfiles": [
                                "1284392014819",
                                "2983092129865"
                            ],
                            "mtuSize": 1600
                        }
                    ]
                }
            },
            "key": "updateNetworkSwitchMtu",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "portSchedules"
        ],
        "method": "get",
        "description": "List switch port schedules",
        "url": "/networks/{networkId}/switch/portSchedules",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "portSchedules"
        ],
        "method": "post",
        "description": "Add a switch port schedule",
        "url": "/networks/{networkId}/switch/portSchedules",
        "params": [{
            "name": "createNetworkSwitchPortSchedule",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for your port schedule. Required"
                    },
                    "portSchedule": {
                        "type": "object",
                        "properties": {
                            "monday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Monday."
                            },
                            "tuesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Tuesday."
                            },
                            "wednesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Wednesday."
                            },
                            "thursday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Thursday."
                            },
                            "friday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Friday."
                            },
                            "saturday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Saturday."
                            },
                            "sunday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Sunday."
                            }
                        },
                        "description": "    The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n"
                    }
                },
                "example": {
                    "name": "Weekdays schedule",
                    "portSchedule": {
                        "monday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "tuesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "wednesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "thursday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "friday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "saturday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        },
                        "sunday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        }
                    }
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createNetworkSwitchPortSchedule",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "portSchedules"
        ],
        "method": "delete",
        "description": "Delete a switch port schedule",
        "url": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "portSchedules"
        ],
        "method": "put",
        "description": "Update a switch port schedule",
        "url": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
        "params": [{
            "name": "updateNetworkSwitchPortSchedule",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for your port schedule."
                    },
                    "portSchedule": {
                        "type": "object",
                        "properties": {
                            "monday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Monday."
                            },
                            "tuesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Tuesday."
                            },
                            "wednesday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Wednesday."
                            },
                            "thursday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Thursday."
                            },
                            "friday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Friday."
                            },
                            "saturday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Saturday."
                            },
                            "sunday": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean",
                                        "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                    },
                                    "to": {
                                        "type": "string",
                                        "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                    }
                                },
                                "description": "The schedule object for Sunday."
                            }
                        },
                        "description": "    The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n"
                    }
                },
                "example": {
                    "name": "Weekdays schedule",
                    "portSchedule": {
                        "monday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "tuesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "wednesday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "thursday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "friday": {
                            "active": true,
                            "from": "9:00",
                            "to": "17:00"
                        },
                        "saturday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        },
                        "sunday": {
                            "active": false,
                            "from": "0:00",
                            "to": "24:00"
                        }
                    }
                }
            },
            "key": "updateNetworkSwitchPortSchedule",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "qosRules"
        ],
        "method": "get",
        "description": "List quality of service rules",
        "url": "/networks/{networkId}/switch/qosRules",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "qosRules"
        ],
        "method": "post",
        "description": "Add a quality of service rule",
        "url": "/networks/{networkId}/switch/qosRules",
        "params": [{
            "name": "createNetworkSwitchQosRule",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "vlan": {
                        "type": "integer",
                        "description": "The VLAN of the incoming packet. A null value will match any VLAN."
                    },
                    "protocol": {
                        "type": "string",
                        "enum": [
                            "ANY",
                            "TCP",
                            "UDP"
                        ],
                        "description": "The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\""
                    },
                    "srcPort": {
                        "type": "integer",
                        "description": "The source port of the incoming packet. Applicable only if protocol is TCP or UDP."
                    },
                    "srcPortRange": {
                        "type": "string",
                        "description": "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                    },
                    "dstPort": {
                        "type": "integer",
                        "description": "The destination port of the incoming packet. Applicable only if protocol is TCP or UDP."
                    },
                    "dstPortRange": {
                        "type": "string",
                        "description": "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0"
                    }
                },
                "example": {
                    "vlan": 100,
                    "protocol": "TCP",
                    "srcPort": 2000,
                    "srcPortRange": null,
                    "dstPort": null,
                    "dstPortRange": "3000-3100",
                    "dscp": 0
                },
                "required": [
                    "vlan"
                ]
            },
            "required": true,
            "key": "createNetworkSwitchQosRule",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "qosRules",
            "order"
        ],
        "method": "get",
        "description": "Return the quality of service rule IDs by order in which they will be processed by the switch",
        "url": "/networks/{networkId}/switch/qosRules/order",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "qosRules",
            "order"
        ],
        "method": "put",
        "description": "Update the order in which the rules should be processed by the switch",
        "url": "/networks/{networkId}/switch/qosRules/order",
        "params": [{
            "name": "updateNetworkSwitchQosRulesOrder",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "ruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of quality of service rule IDs arranged in order in which they should be processed by the switch."
                    }
                },
                "example": {
                    "ruleIds": [
                        "1284392014819",
                        "2983092129865"
                    ]
                },
                "required": [
                    "ruleIds"
                ]
            },
            "required": true,
            "key": "updateNetworkSwitchQosRulesOrder",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "qosRules"
        ],
        "method": "get",
        "description": "Return a quality of service rule",
        "url": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "qosRules"
        ],
        "method": "delete",
        "description": "Delete a quality of service rule",
        "url": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "qosRules"
        ],
        "method": "put",
        "description": "Update a quality of service rule",
        "url": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
        "params": [{
            "name": "updateNetworkSwitchQosRule",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "vlan": {
                        "type": "integer",
                        "description": "The VLAN of the incoming packet. A null value will match any VLAN."
                    },
                    "protocol": {
                        "type": "string",
                        "enum": [
                            "ANY",
                            "TCP",
                            "UDP"
                        ],
                        "description": "The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\"."
                    },
                    "srcPort": {
                        "type": "integer",
                        "description": "The source port of the incoming packet. Applicable only if protocol is TCP or UDP."
                    },
                    "srcPortRange": {
                        "type": "string",
                        "description": "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                    },
                    "dstPort": {
                        "type": "integer",
                        "description": "The destination port of the incoming packet. Applicable only if protocol is TCP or UDP."
                    },
                    "dstPortRange": {
                        "type": "string",
                        "description": "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                    },
                    "dscp": {
                        "type": "integer",
                        "description": "DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0."
                    }
                },
                "example": {
                    "vlan": 100,
                    "protocol": "TCP",
                    "srcPort": 2000,
                    "srcPortRange": null,
                    "dstPort": null,
                    "dstPortRange": "3000-3100",
                    "dscp": 0
                }
            },
            "key": "updateNetworkSwitchQosRule",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "multicast"
        ],
        "method": "get",
        "description": "Return multicast settings for a network",
        "url": "/networks/{networkId}/switch/routing/multicast",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "multicast"
        ],
        "method": "put",
        "description": "Update multicast settings for a network",
        "url": "/networks/{networkId}/switch/routing/multicast",
        "params": [{
            "name": "updateNetworkSwitchRoutingMulticast",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "defaultSettings": {
                        "type": "object",
                        "properties": {
                            "igmpSnoopingEnabled": {
                                "type": "boolean",
                                "description": "IGMP snooping setting for entire network"
                            },
                            "floodUnknownMulticastTrafficEnabled": {
                                "type": "boolean",
                                "description": "Flood unknown multicast traffic setting for entire network"
                            }
                        },
                        "description": "Default multicast setting for entire network. IGMP snooping and Flood unknown multicast traffic settings are enabled by default."
                    },
                    "overrides": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "switchProfiles": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch profiles ids for template network"
                                },
                                "switches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch serials for non-template network"
                                },
                                "stacks": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch stack ids for non-template network"
                                },
                                "igmpSnoopingEnabled": {
                                    "type": "boolean",
                                    "description": "IGMP snooping setting for switches, switch stacks or switch profiles"
                                },
                                "floodUnknownMulticastTrafficEnabled": {
                                    "type": "boolean",
                                    "description": "Flood unknown multicast traffic setting for switches, switch stacks or switch profiles"
                                }
                            },
                            "required": [
                                "igmpSnoopingEnabled",
                                "floodUnknownMulticastTrafficEnabled"
                            ]
                        },
                        "description": "Array of paired switches/stacks/profiles and corresponding multicast settings. An empty array will clear the multicast settings."
                    }
                },
                "example": {
                    "defaultSettings": {
                        "igmpSnoopingEnabled": true,
                        "floodUnknownMulticastTrafficEnabled": true
                    },
                    "overrides": [{
                            "switches": [
                                "Q234-ABCD-0001",
                                "Q234-ABCD-0002",
                                "Q234-ABCD-0003"
                            ],
                            "igmpSnoopingEnabled": true,
                            "floodUnknownMulticastTrafficEnabled": true
                        },
                        {
                            "stacks": [
                                "789102",
                                "123456",
                                "129102"
                            ],
                            "igmpSnoopingEnabled": true,
                            "floodUnknownMulticastTrafficEnabled": true
                        }
                    ]
                }
            },
            "key": "updateNetworkSwitchRoutingMulticast",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "multicast",
            "rendezvousPoints"
        ],
        "method": "get",
        "description": "List multicast rendezvous points",
        "url": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "multicast",
            "rendezvousPoints"
        ],
        "method": "post",
        "description": "Create a multicast rendezvous point",
        "url": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints",
        "params": [{
            "name": "createNetworkSwitchRoutingMulticastRendezvousPoint",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "interfaceIp": {
                        "type": "string",
                        "description": "The IP address of the interface where the RP needs to be created."
                    },
                    "multicastGroup": {
                        "type": "string",
                        "description": "'Any', or the IP address of a multicast group"
                    }
                },
                "example": {
                    "interfaceIp": "192.168.1.2",
                    "multicastGroup": "192.168.128.0/24"
                },
                "required": [
                    "interfaceIp",
                    "multicastGroup"
                ]
            },
            "required": true,
            "key": "createNetworkSwitchRoutingMulticastRendezvousPoint",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "multicast",
            "rendezvousPoints"
        ],
        "method": "get",
        "description": "Return a multicast rendezvous point",
        "url": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "multicast",
            "rendezvousPoints"
        ],
        "method": "delete",
        "description": "Delete a multicast rendezvous point",
        "url": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "multicast",
            "rendezvousPoints"
        ],
        "method": "put",
        "description": "Update a multicast rendezvous point",
        "url": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
        "params": [{
            "name": "updateNetworkSwitchRoutingMulticastRendezvousPoint",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "interfaceIp": {
                        "type": "string",
                        "description": "The IP address of the interface to use"
                    },
                    "multicastGroup": {
                        "type": "string",
                        "description": "'Any', or the IP address of a multicast group"
                    }
                },
                "example": {
                    "interfaceIp": "192.168.1.2",
                    "multicastGroup": "192.168.128.0/24"
                },
                "required": [
                    "interfaceIp",
                    "multicastGroup"
                ]
            },
            "required": true,
            "key": "updateNetworkSwitchRoutingMulticastRendezvousPoint",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "ospf"
        ],
        "method": "get",
        "description": "Return layer 3 OSPF routing configuration",
        "url": "/networks/{networkId}/switch/routing/ospf",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "routing",
            "ospf"
        ],
        "method": "put",
        "description": "Update layer 3 OSPF routing configuration",
        "url": "/networks/{networkId}/switch/routing/ospf",
        "params": [{
            "name": "updateNetworkSwitchRoutingOspf",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default."
                    },
                    "helloTimerInSeconds": {
                        "type": "integer",
                        "description": "Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds"
                    },
                    "deadTimerInSeconds": {
                        "type": "integer",
                        "description": "Time interval to determine when the peer will be declare inactive/dead. Value must be between 1 and 65535"
                    },
                    "areas": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "areaId": {
                                    "type": "integer",
                                    "description": "OSPF area ID"
                                },
                                "areaName": {
                                    "type": "string",
                                    "description": "Name of the OSPF area"
                                },
                                "areaType": {
                                    "type": "string",
                                    "enum": [
                                        "normal",
                                        "stub",
                                        "nssa"
                                    ],
                                    "description": "Area types in OSPF. Must be one of: [\"normal\", \"stub\", \"nssa\"]"
                                }
                            },
                            "required": [
                                "areaId",
                                "areaName",
                                "areaType"
                            ]
                        },
                        "description": "OSPF areas"
                    },
                    "md5AuthenticationEnabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default."
                    },
                    "md5AuthenticationKey": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "MD5 authentication key index. Key index must be between 1 to 255"
                            },
                            "passphrase": {
                                "type": "string",
                                "description": "MD5 authentication passphrase"
                            }
                        },
                        "description": "MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true"
                    }
                },
                "example": {
                    "enabled": true,
                    "helloTimerInSeconds": 10,
                    "deadTimerInSeconds": 40,
                    "areas": [{
                        "areaId": "1284392014819",
                        "areaName": "Backbone",
                        "areaType": "normal"
                    }],
                    "md5AuthenticationEnabled": true,
                    "md5AuthenticationKey": {
                        "id": "1234",
                        "passphrase": "abc1234"
                    }
                }
            },
            "key": "updateNetworkSwitchRoutingOspf",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "settings"
        ],
        "method": "get",
        "description": "Returns the switch network settings",
        "url": "/networks/{networkId}/switch/settings",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "settings"
        ],
        "method": "put",
        "description": "Update switch network settings",
        "url": "/networks/{networkId}/switch/settings",
        "params": [{
            "name": "updateNetworkSwitchSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "vlan": {
                        "type": "integer",
                        "description": "Management VLAN"
                    },
                    "useCombinedPower": {
                        "type": "boolean",
                        "description": "The use Combined Power as the default behavior of secondary power supplies on supported devices."
                    },
                    "powerExceptions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "Serial number of the switch"
                                },
                                "powerType": {
                                    "type": "string",
                                    "enum": [
                                        "combined",
                                        "redundant",
                                        "useNetworkSetting"
                                    ],
                                    "description": "Per switch exception (combined, redundant, useNetworkSetting)"
                                }
                            },
                            "required": [
                                "serial",
                                "powerType"
                            ]
                        },
                        "description": "Exceptions on a per switch basis to \"useCombinedPower\""
                    }
                },
                "example": {
                    "vlan": 100,
                    "useCombinedPower": false,
                    "powerExceptions": [{
                            "serial": "Q234-ABCD-0001",
                            "powerType": "redundant"
                        },
                        {
                            "serial": "Q234-ABCD-0002",
                            "powerType": "combined"
                        },
                        {
                            "serial": "Q234-ABCD-0003",
                            "powerType": "redundant"
                        },
                        {
                            "serial": "Q234-ABCD-0004",
                            "powerType": "useNetworkSetting"
                        }
                    ]
                }
            },
            "key": "updateNetworkSwitchSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks"
        ],
        "method": "get",
        "description": "List the switch stacks in a network",
        "url": "/networks/{networkId}/switch/stacks",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks"
        ],
        "method": "post",
        "description": "Create a stack",
        "url": "/networks/{networkId}/switch/stacks",
        "params": [{
            "name": "createNetworkSwitchStack",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new stack"
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of switch serials to be added into the new stack"
                    }
                },
                "example": {
                    "name": "A cool stack",
                    "serials": [
                        "QBZY-XWVU-TSRQ",
                        "QBAB-CDEF-GHIJ"
                    ]
                },
                "required": [
                    "name",
                    "serials"
                ]
            },
            "required": true,
            "key": "createNetworkSwitchStack",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks"
        ],
        "method": "get",
        "description": "Show a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks"
        ],
        "method": "delete",
        "description": "Delete a stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks"
        ],
        "method": "post",
        "description": "Add a switch to a stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/add",
        "params": [{
            "name": "addNetworkSwitchStack",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "serial": {
                        "type": "string",
                        "description": "The serial of the switch to be added"
                    }
                },
                "example": {
                    "serial": "QBZY-XWVU-TSRQ"
                },
                "required": [
                    "serial"
                ]
            },
            "required": true,
            "key": "addNetworkSwitchStack",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks"
        ],
        "method": "post",
        "description": "Remove a switch from a stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/remove",
        "params": [{
            "name": "removeNetworkSwitchStack",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "serial": {
                        "type": "string",
                        "description": "The serial of the switch to be removed"
                    }
                },
                "example": {
                    "serial": "QBZY-XWVU-TSRQ"
                },
                "required": [
                    "serial"
                ]
            },
            "required": true,
            "key": "removeNetworkSwitchStack",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "interfaces"
        ],
        "method": "get",
        "description": "List layer 3 interfaces for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "interfaces"
        ],
        "method": "post",
        "description": "Create a layer 3 interface for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces",
        "params": [{
            "name": "createNetworkSwitchStackRoutingInterface",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A friendly name or description for the interface or VLAN."
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                    },
                    "interfaceIp": {
                        "type": "string",
                        "description": "The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                    },
                    "multicastRouting": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "enabled",
                            "IGMP snooping querier"
                        ],
                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'."
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                    },
                    "defaultGateway": {
                        "type": "string",
                        "description": "The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface."
                    },
                    "ospfSettings": {
                        "type": "object",
                        "properties": {
                            "area": {
                                "type": "string",
                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area. Defaults to 'disabled'."
                            },
                            "cost": {
                                "type": "integer",
                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                            },
                            "isPassiveEnabled": {
                                "type": "boolean",
                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                            }
                        },
                        "description": "The OSPF routing settings of the interface."
                    }
                },
                "example": {
                    "name": "L3 interface",
                    "subnet": "192.168.1.0/24",
                    "interfaceIp": "192.168.1.2",
                    "multicastRouting": "disabled",
                    "vlanId": 100,
                    "defaultGateway": "192.168.1.1",
                    "ospfSettings": {
                        "area": "0",
                        "cost": 1,
                        "isPassiveEnabled": true
                    }
                },
                "required": [
                    "name",
                    "subnet",
                    "interfaceIp",
                    "vlanId"
                ]
            },
            "required": true,
            "key": "createNetworkSwitchStackRoutingInterface",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "interfaces"
        ],
        "method": "get",
        "description": "Return a layer 3 interface from a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "interfaces"
        ],
        "method": "put",
        "description": "Update a layer 3 interface for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
        "params": [{
            "name": "updateNetworkSwitchStackRoutingInterface",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A friendly name or description for the interface or VLAN."
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                    },
                    "interfaceIp": {
                        "type": "string",
                        "description": "The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                    },
                    "multicastRouting": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "enabled",
                            "IGMP snooping querier"
                        ],
                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'."
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                    },
                    "ospfSettings": {
                        "type": "object",
                        "properties": {
                            "area": {
                                "type": "string",
                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area."
                            },
                            "cost": {
                                "type": "integer",
                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                            },
                            "isPassiveEnabled": {
                                "type": "boolean",
                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                            }
                        },
                        "description": "The OSPF routing settings of the interface."
                    }
                },
                "example": {
                    "name": "L3 interface",
                    "subnet": "192.168.1.0/24",
                    "interfaceIp": "192.168.1.2",
                    "multicastRouting": "disabled",
                    "vlanId": 100,
                    "ospfSettings": {
                        "area": "0",
                        "cost": 1,
                        "isPassiveEnabled": true
                    }
                }
            },
            "key": "updateNetworkSwitchStackRoutingInterface",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "interfaces"
        ],
        "method": "delete",
        "description": "Delete a layer 3 interface from a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "interfaces",
            "dhcp"
        ],
        "method": "get",
        "description": "Return a layer 3 interface DHCP configuration for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "interfaces",
            "dhcp"
        ],
        "method": "put",
        "description": "Update a layer 3 interface DHCP configuration for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp",
        "params": [{
            "name": "updateNetworkSwitchStackRoutingInterfaceDhcp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "dhcpMode": {
                        "type": "string",
                        "enum": [
                            "dhcpDisabled",
                            "dhcpRelay",
                            "dhcpServer"
                        ],
                        "description": "The DHCP mode options for the switch stack interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')"
                    },
                    "dhcpRelayServerIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The DHCP relay server IPs to which DHCP packets would get relayed for the switch stack interface"
                    },
                    "dhcpLeaseTime": {
                        "type": "string",
                        "enum": [
                            "30 minutes",
                            "1 hour",
                            "4 hours",
                            "12 hours",
                            "1 day",
                            "1 week"
                        ],
                        "description": "The DHCP lease time config for the dhcp server running on switch stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')"
                    },
                    "dnsNameserversOption": {
                        "type": "string",
                        "enum": [
                            "googlePublicDns",
                            "openDns",
                            "custom"
                        ],
                        "description": "The DHCP name server option for the dhcp server running on the switch stack interface ('googlePublicDns', 'openDns' or 'custom')"
                    },
                    "dnsCustomNameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The DHCP name server IPs when DHCP name server option is 'custom'"
                    },
                    "bootOptionsEnabled": {
                        "type": "boolean",
                        "description": "Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch stack interface"
                    },
                    "bootNextServer": {
                        "type": "string",
                        "description": "The PXE boot server IP for the DHCP server running on the switch stack interface"
                    },
                    "bootFileName": {
                        "type": "string",
                        "description": "The PXE boot server file name for the DHCP server running on the switch stack interface"
                    },
                    "dhcpOptions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "The code for DHCP option which should be from 2 to 254"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "text",
                                        "ip",
                                        "integer",
                                        "hex"
                                    ],
                                    "description": "The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the DHCP option"
                                }
                            },
                            "required": [
                                "code",
                                "type",
                                "value"
                            ]
                        },
                        "description": "Array of DHCP options consisting of code, type and value for the DHCP server running on the switch stack interface"
                    },
                    "reservedIpRanges": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "type": "string",
                                    "description": "The starting IP address of the reserved IP range"
                                },
                                "end": {
                                    "type": "string",
                                    "description": "The ending IP address of the reserved IP range"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "The comment for the reserved IP range"
                                }
                            },
                            "required": [
                                "start",
                                "end"
                            ]
                        },
                        "description": "Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface"
                    },
                    "fixedIpAssignments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the client which has fixed IP address"
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "The MAC address of the client which has fixed IP address"
                                },
                                "ip": {
                                    "type": "string",
                                    "description": "The IP address of the client which has fixed IP address assigned to it"
                                }
                            },
                            "required": [
                                "name",
                                "mac",
                                "ip"
                            ]
                        },
                        "description": "Array of DHCP fixed IP assignments for the DHCP server running on the switch stack interface"
                    }
                },
                "example": {
                    "dhcpMode": "dhcpServer",
                    "dhcpLeaseTime": "1 day",
                    "dnsNameserversOption": "custom",
                    "dnsCustomNameservers": [
                        "8.8.8.8, 8.8.4.4"
                    ],
                    "bootOptionsEnabled": true,
                    "bootNextServer": "1.2.3.4",
                    "bootFileName": "home_boot_file",
                    "dhcpOptions": [{
                        "code": "5",
                        "type": "text",
                        "value": "five"
                    }],
                    "reservedIpRanges": [{
                        "start": "192.168.1.1",
                        "end": "192.168.1.10",
                        "comment": "A reserved IP range"
                    }],
                    "fixedIpAssignments": [{
                        "mac": "22:33:44:55:66:77",
                        "name": "Cisco Meraki valued client",
                        "ip": "192.168.1.12"
                    }]
                }
            },
            "key": "updateNetworkSwitchStackRoutingInterfaceDhcp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "staticRoutes"
        ],
        "method": "get",
        "description": "List layer 3 static routes for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "staticRoutes"
        ],
        "method": "post",
        "description": "Create a layer 3 static route for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes",
        "params": [{
            "name": "createNetworkSwitchStackRoutingStaticRoute",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name or description for layer 3 static route"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                    },
                    "nextHopIp": {
                        "type": "string",
                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                    },
                    "advertiseViaOspfEnabled": {
                        "type": "boolean",
                        "description": "Option to advertise static route via OSPF"
                    },
                    "preferOverOspfRoutesEnabled": {
                        "type": "boolean",
                        "description": "Option to prefer static route over OSPF routes"
                    }
                },
                "example": {
                    "name": "My route",
                    "subnet": "192.168.1.0/24",
                    "nextHopIp": "1.2.3.4",
                    "advertiseViaOspfEnabled": false,
                    "preferOverOspfRoutesEnabled": false
                },
                "required": [
                    "subnet",
                    "nextHopIp"
                ]
            },
            "required": true,
            "key": "createNetworkSwitchStackRoutingStaticRoute",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "staticRoutes"
        ],
        "method": "get",
        "description": "Return a layer 3 static route for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "staticRoutes"
        ],
        "method": "put",
        "description": "Update a layer 3 static route for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
        "params": [{
            "name": "updateNetworkSwitchStackRoutingStaticRoute",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name or description for layer 3 static route"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                    },
                    "nextHopIp": {
                        "type": "string",
                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                    },
                    "advertiseViaOspfEnabled": {
                        "type": "boolean",
                        "description": "Option to advertise static route via OSPF"
                    },
                    "preferOverOspfRoutesEnabled": {
                        "type": "boolean",
                        "description": "Option to prefer static route over OSPF routes"
                    }
                },
                "example": {
                    "name": "My route",
                    "subnet": "192.168.1.0/24",
                    "nextHopIp": "1.2.3.4",
                    "advertiseViaOspfEnabled": false,
                    "preferOverOspfRoutesEnabled": false
                }
            },
            "key": "updateNetworkSwitchStackRoutingStaticRoute",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stacks",
            "routing",
            "staticRoutes"
        ],
        "method": "delete",
        "description": "Delete a layer 3 static route for a switch stack",
        "url": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stormControl"
        ],
        "method": "get",
        "description": "Return the storm control configuration for a switch network",
        "url": "/networks/{networkId}/switch/stormControl",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stormControl"
        ],
        "method": "put",
        "description": "Update the storm control configuration for a switch network",
        "url": "/networks/{networkId}/switch/stormControl",
        "params": [{
            "name": "updateNetworkSwitchStormControl",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "broadcastThreshold": {
                        "type": "integer",
                        "description": "Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration."
                    },
                    "multicastThreshold": {
                        "type": "integer",
                        "description": "Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration."
                    },
                    "unknownUnicastThreshold": {
                        "type": "integer",
                        "description": "Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration."
                    }
                },
                "example": {
                    "broadcastThreshold": 30,
                    "multicastThreshold": 30,
                    "unknownUnicastThreshold": 30
                }
            },
            "key": "updateNetworkSwitchStormControl",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "stp"
        ],
        "method": "get",
        "description": "Returns STP settings",
        "url": "/networks/{networkId}/switch/stp",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "stp"
        ],
        "method": "put",
        "description": "Updates STP settings",
        "url": "/networks/{networkId}/switch/stp",
        "params": [{
            "name": "updateNetworkSwitchStp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rstpEnabled": {
                        "type": "boolean",
                        "description": "The spanning tree protocol status in network"
                    },
                    "stpBridgePriority": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "switchProfiles": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch profile IDs"
                                },
                                "switches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch serial numbers"
                                },
                                "stacks": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of stack IDs"
                                },
                                "stpPriority": {
                                    "type": "integer",
                                    "description": "STP priority for switch, stacks, or switch profiles"
                                }
                            },
                            "required": [
                                "stpPriority"
                            ]
                        },
                        "description": "STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings."
                    }
                },
                "example": {
                    "rstpEnabled": true,
                    "stpBridgePriority": [{
                            "switches": [
                                "Q234-ABCD-0001",
                                "Q234-ABCD-0002",
                                "Q234-ABCD-0003"
                            ],
                            "stpPriority": 4096
                        },
                        {
                            "stacks": [
                                "789102",
                                "123456",
                                "129102"
                            ],
                            "stpPriority": 28672
                        }
                    ]
                }
            },
            "key": "updateNetworkSwitchStp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "syslogServers"
        ],
        "method": "get",
        "description": "List the syslog servers for a network",
        "url": "/networks/{networkId}/syslogServers",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "syslogServers"
        ],
        "method": "put",
        "description": "Update the syslog servers for a network",
        "url": "/networks/{networkId}/syslogServers",
        "params": [{
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "servers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "The IP address of the syslog server"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "The port of the syslog server"
                                },
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
                                }
                            },
                            "required": [
                                "host",
                                "port",
                                "roles"
                            ]
                        },
                        "description": "A list of the syslog servers for this network"
                    }
                },
                "example": {
                    "servers": [{
                        "host": "1.2.3.4",
                        "port": 443,
                        "roles": [
                            "Wireless event log",
                            "URLs"
                        ]
                    }]
                },
                "required": [
                    "servers"
                ]
            },
            "required": true,
            "key": "updateNetworkSyslogServers",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "monitor",
            "traffic"
        ],
        "method": "get",
        "description": "Return the traffic analysis data for this network. Traffic analysis with hostname visibility must be enabled on the network.",
        "url": "/networks/{networkId}/traffic",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "combined",
                    "wireless",
                    "switch",
                    "appliance"
                ],
                "name": "deviceType",
                "in": "query",
                "description": "Filter the data by device type: 'combined', 'wireless', 'switch' or 'appliance'. Defaults to 'combined'. When using 'combined', for each rule the data will come from the device type with the most usage.",
                "key": "deviceType",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "networks",
            "configure",
            "trafficAnalysis"
        ],
        "method": "get",
        "description": "Return the traffic analysis settings for a network",
        "url": "/networks/{networkId}/trafficAnalysis",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "trafficAnalysis"
        ],
        "method": "put",
        "description": "Update the traffic analysis settings for a network",
        "url": "/networks/{networkId}/trafficAnalysis",
        "params": [{
            "name": "updateNetworkTrafficAnalysis",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "basic",
                            "detailed"
                        ],
                        "description": "    The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),\n    'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).\n"
                    },
                    "customPieChartItems": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the custom pie chart item."
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "host",
                                        "port",
                                        "ipRange"
                                    ],
                                    "description": "    The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.\n"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "    The value of the custom pie chart item. Valid syntax depends on the signature type of the chart item\n    (see sample request/response for more details).\n"
                                }
                            },
                            "required": [
                                "name",
                                "type",
                                "value"
                            ]
                        },
                        "description": "The list of items that make up the custom pie chart for traffic reporting."
                    }
                },
                "example": {
                    "mode": "detailed",
                    "customPieChartItems": [{
                            "name": "Item from hostname",
                            "type": "host",
                            "value": "example.com"
                        },
                        {
                            "name": "Item from port",
                            "type": "port",
                            "value": "440"
                        },
                        {
                            "name": "Item from IP",
                            "type": "ipRange",
                            "value": "192.1.0.0"
                        },
                        {
                            "name": "Item from IP range (CIDR)",
                            "type": "ipRange",
                            "value": "192.2.0.0/16"
                        },
                        {
                            "name": "Item from IP range with port",
                            "type": "ipRange",
                            "value": "192.3.0.0/16:80"
                        }
                    ]
                }
            },
            "key": "updateNetworkTrafficAnalysis",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "trafficShaping",
            "applicationCategories"
        ],
        "method": "get",
        "description": "Returns the application categories for traffic shaping rules.",
        "url": "/networks/{networkId}/trafficShaping/applicationCategories",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "trafficShaping",
            "dscpTaggingOptions"
        ],
        "method": "get",
        "description": "Returns the available DSCP tagging options for your traffic shaping rules.",
        "url": "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "umbrella",
            "account"
        ],
        "method": "get",
        "description": "Show network-wide Umbrella account settings",
        "url": "/networks/{networkId}/umbrella/account",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "umbrella",
            "account"
        ],
        "method": "put",
        "description": "Update network-wide Umbrella account settings",
        "url": "/networks/{networkId}/umbrella/account",
        "params": [{
            "name": "updateNetworkUmbrellaAccount",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "API key generated from Umbrella dashboard"
                    },
                    "secret": {
                        "type": "string",
                        "description": "API secret generated from Umbrella dashboard"
                    }
                },
                "example": {
                    "key": "AdfpkbmIFPAH@48ALXLPfkjaF",
                    "secret": "fkpPFKMBpAPQOELKJfpaihdfz"
                },
                "required": [
                    "key",
                    "secret"
                ]
            },
            "required": true,
            "key": "updateNetworkUmbrellaAccount",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "umbrella",
            "policies"
        ],
        "method": "get",
        "description": "Return a list of Umbrella protection policies available for applying on an SSID or Group Policy",
        "url": "/networks/{networkId}/umbrella/policies",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure"
        ],
        "method": "post",
        "description": "Unbind a network from a template.",
        "url": "/networks/{networkId}/unbind",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "webhooks",
            "httpServers"
        ],
        "method": "get",
        "description": "List the HTTP servers for a network",
        "url": "/networks/{networkId}/webhooks/httpServers",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "webhooks",
            "httpServers"
        ],
        "method": "post",
        "description": "Add an HTTP server to a network",
        "url": "/networks/{networkId}/webhooks/httpServers",
        "params": [{
            "name": "createNetworkWebhooksHttpServer",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name for easy reference to the HTTP server"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the HTTP server"
                    },
                    "sharedSecret": {
                        "type": "string",
                        "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki."
                    },
                    "payloadTemplate": {
                        "type": "string",
                        "enum": [
                            "Meraki"
                        ],
                        "description": "The name of the payload template to use when posting data to the HTTP server. Defaults to the 'Meraki' template.",
                        "default": "Meraki"
                    }
                },
                "example": {
                    "name": "My HTTP server",
                    "url": "https://www.example.com/webhooks",
                    "sharedSecret": "foobar"
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "required": true,
            "key": "createNetworkWebhooksHttpServer",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "webhooks",
            "httpServers"
        ],
        "method": "get",
        "description": "Return an HTTP server for a network",
        "url": "/networks/{networkId}/webhooks/httpServers/{httpServerId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "webhooks",
            "httpServers"
        ],
        "method": "put",
        "description": "Update an HTTP server",
        "url": "/networks/{networkId}/webhooks/httpServers/{httpServerId}",
        "params": [{
            "name": "updateNetworkWebhooksHttpServer",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name for easy reference to the HTTP server"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the HTTP server"
                    },
                    "sharedSecret": {
                        "type": "string",
                        "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki."
                    },
                    "payloadTemplate": {
                        "type": "string",
                        "enum": [
                            "Meraki"
                        ],
                        "description": "The name of the payload template to use when posting data to the HTTP server. Defaults to the 'Meraki' template."
                    }
                },
                "example": {
                    "name": "My HTTP server",
                    "url": "https://www.example.com/webhooks",
                    "sharedSecret": "foobar"
                }
            },
            "key": "updateNetworkWebhooksHttpServer",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "webhooks",
            "httpServers"
        ],
        "method": "delete",
        "description": "Delete an HTTP server from a network",
        "url": "/networks/{networkId}/webhooks/httpServers/{httpServerId}",
        "params": []
    },
    {
        "tags": [
            "networks",
            "configure",
            "webhooks",
            "webhookTests"
        ],
        "method": "post",
        "description": "Send a test webhook for a network",
        "url": "/networks/{networkId}/webhooks/webhookTests",
        "params": [{
            "name": "createNetworkWebhooksWebhookTest",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL where the test webhook will be sent"
                    },
                    "sharedSecret": {
                        "type": "string",
                        "description": "The shared secret the test webhook will send. Optional. Defaults to an empty string.",
                        "default": ""
                    }
                },
                "example": {
                    "url": "https://www.example.com/path"
                },
                "required": [
                    "url"
                ]
            },
            "required": true,
            "key": "createNetworkWebhooksWebhookTest",
            "source": "body"
        }]
    },
    {
        "tags": [
            "networks",
            "configure",
            "webhooks",
            "webhookTests"
        ],
        "method": "get",
        "description": "Return the status of a webhook test for a network",
        "url": "/networks/{networkId}/webhooks/webhookTests/{webhookTestId}",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "airMarshal"
        ],
        "method": "get",
        "description": "List Air Marshal scan results from a network",
        "url": "/networks/{networkId}/wireless/airMarshal",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "alternateManagementInterface"
        ],
        "method": "get",
        "description": "Return alternate management interface and devices with IP assigned",
        "url": "/networks/{networkId}/wireless/alternateManagementInterface",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "alternateManagementInterface"
        ],
        "method": "put",
        "description": "Update alternate management interface and device static IP",
        "url": "/networks/{networkId}/wireless/alternateManagementInterface",
        "params": [{
            "name": "updateNetworkWirelessAlternateManagementInterface",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable or disable alternate management interface"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "Alternate management interface VLAN, must be between 1 and 4094"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "radius",
                                "snmp",
                                "syslog",
                                "ldap"
                            ]
                        },
                        "description": "Can be one or more of the following values: 'radius', 'snmp', 'syslog' or 'ldap'"
                    },
                    "accessPoints": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "Serial number of access point to be configured with alternate management IP"
                                },
                                "alternateManagementIp": {
                                    "type": "string",
                                    "description": "Wireless alternate management interface device IP. Provide an empty string to remove alternate management IP assignment"
                                },
                                "subnetMask": {
                                    "type": "string",
                                    "description": "Subnet mask must be in IP format"
                                },
                                "gateway": {
                                    "type": "string",
                                    "description": "Gateway must be in IP format"
                                },
                                "dns1": {
                                    "type": "string",
                                    "description": "Primary DNS must be in IP format"
                                },
                                "dns2": {
                                    "type": "string",
                                    "description": "Optional secondary DNS must be in IP format"
                                }
                            },
                            "required": [
                                "serial",
                                "alternateManagementIp"
                            ]
                        },
                        "description": "Array of access point serial number and IP assignment. Note: accessPoints IP assignment is not applicable for template networks, in other words, do not put 'accessPoints' in the body when updating template networks. Also, an empty 'accessPoints' array will remove all previous static IP assignments"
                    }
                },
                "example": {
                    "enabled": true,
                    "vlanId": 100,
                    "protocols": [
                        "radius",
                        "snmp",
                        "syslog",
                        "ldap"
                    ],
                    "accessPoints": [{
                        "serial": "Q234-ABCD-5678",
                        "alternateManagementIp": "1.2.3.4",
                        "subnetMask": "255.255.255.0",
                        "gateway": "1.2.3.5",
                        "dns1": "8.8.8.8",
                        "dns2": "8.8.4.4"
                    }]
                }
            },
            "key": "updateNetworkWirelessAlternateManagementInterface",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "bluetooth",
            "settings"
        ],
        "method": "get",
        "description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
        "url": "/networks/{networkId}/wireless/bluetooth/settings",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "bluetooth",
            "settings"
        ],
        "method": "put",
        "description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.",
        "url": "/networks/{networkId}/wireless/bluetooth/settings",
        "params": [{
            "name": "updateNetworkWirelessBluetoothSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "scanningEnabled": {
                        "type": "boolean",
                        "description": "Whether APs will scan for Bluetooth enabled clients. (true, false)"
                    },
                    "advertisingEnabled": {
                        "type": "boolean",
                        "description": "Whether APs will advertise beacons. (true, false)"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "The UUID to be used in the beacon identifier."
                    },
                    "majorMinorAssignmentMode": {
                        "type": "string",
                        "enum": [
                            "Unique",
                            "Non-unique"
                        ],
                        "description": "The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')"
                    },
                    "major": {
                        "type": "integer",
                        "description": "The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode."
                    },
                    "minor": {
                        "type": "integer",
                        "description": "The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode."
                    }
                },
                "example": {
                    "scanningEnabled": true,
                    "advertisingEnabled": true,
                    "uuid": "00000000-0000-0000-000-000000000000",
                    "majorMinorAssignmentMode": "Non-unique",
                    "major": 1
                }
            },
            "key": "updateNetworkWirelessBluetoothSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "channelUtilizationHistory"
        ],
        "method": "get",
        "description": "Return AP channel utilization over time for a device or network client",
        "url": "/networks/{networkId}/wireless/channelUtilizationHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "autoResolution",
                "in": "query",
                "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
                "key": "autoResolution",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientId",
                "in": "query",
                "description": "Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history.",
                "key": "clientId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified.",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified.",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5').",
                "key": "band",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "clientCountHistory"
        ],
        "method": "get",
        "description": "Return wireless client counts over time for a network, device, or network client",
        "url": "/networks/{networkId}/wireless/clientCountHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "autoResolution",
                "in": "query",
                "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
                "key": "autoResolution",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientId",
                "in": "query",
                "description": "Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history.",
                "key": "clientId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter results by device.",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP tag.",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5').",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID number.",
                "key": "ssid",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "clients",
            "connectionStats"
        ],
        "method": "get",
        "description": "Aggregated connectivity info for this network, grouped by clients",
        "url": "/networks/{networkId}/wireless/clients/connectionStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "clients",
            "latencyStats"
        ],
        "method": "get",
        "description": "Aggregated latency info for this network, grouped by clients",
        "url": "/networks/{networkId}/wireless/clients/latencyStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "name": "fields",
                "in": "query",
                "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                "key": "fields",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "clients",
            "connectionStats"
        ],
        "method": "get",
        "description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.",
        "url": "/networks/{networkId}/wireless/clients/{clientId}/connectionStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "clients",
            "connectivityEvents"
        ],
        "method": "get",
        "description": "List the wireless connectivity events for a client within a network in the timespan.",
        "url": "/networks/{networkId}/wireless/clients/{clientId}/connectivityEvents",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "assoc",
                        "disassoc",
                        "auth",
                        "deauth",
                        "dns",
                        "dhcp",
                        "roam",
                        "connection",
                        "sticky"
                    ]
                },
                "name": "types",
                "in": "query",
                "description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.",
                "key": "types",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "good",
                        "info",
                        "warn",
                        "bad"
                    ]
                },
                "name": "includedSeverities",
                "in": "query",
                "description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'.",
                "key": "includedSeverities",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5').",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                "name": "ssidNumber",
                "in": "query",
                "description": "An SSID number to include. If not specified, events for all SSIDs will be returned.",
                "key": "ssidNumber",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter results by an AP's serial number.",
                "key": "deviceSerial",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "clients",
            "latencyHistory"
        ],
        "method": "get",
        "description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.",
        "url": "/networks/{networkId}/wireless/clients/{clientId}/latencyHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400.",
                "key": "resolution",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "clients",
            "latencyStats"
        ],
        "method": "get",
        "description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC.",
        "url": "/networks/{networkId}/wireless/clients/{clientId}/latencyStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "name": "fields",
                "in": "query",
                "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                "key": "fields",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "connectionStats"
        ],
        "method": "get",
        "description": "Aggregated connectivity info for this network",
        "url": "/networks/{networkId}/wireless/connectionStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "dataRateHistory"
        ],
        "method": "get",
        "description": "Return PHY data rates over time for a network, device, or network client",
        "url": "/networks/{networkId}/wireless/dataRateHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "autoResolution",
                "in": "query",
                "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
                "key": "autoResolution",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientId",
                "in": "query",
                "description": "Filter results by network client.",
                "key": "clientId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter results by device.",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP tag.",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5').",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID number.",
                "key": "ssid",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "devices",
            "connectionStats"
        ],
        "method": "get",
        "description": "Aggregated connectivity info for this network, grouped by node",
        "url": "/networks/{networkId}/wireless/devices/connectionStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "devices",
            "latencyStats"
        ],
        "method": "get",
        "description": "Aggregated latency info for this network, grouped by node",
        "url": "/networks/{networkId}/wireless/devices/latencyStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "name": "fields",
                "in": "query",
                "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                "key": "fields",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "electronicShelfLabel"
        ],
        "method": "get",
        "description": "Return the ESL settings of a wireless network",
        "url": "/networks/{networkId}/wireless/electronicShelfLabel",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "electronicShelfLabel"
        ],
        "method": "put",
        "description": "Update the ESL settings of a wireless network",
        "url": "/networks/{networkId}/wireless/electronicShelfLabel",
        "params": [{
            "name": "updateNetworkWirelessElectronicShelfLabel",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "hostName": {
                        "type": "string",
                        "description": "Desired ESL host name of the network"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Turn ESL features on and off for this network"
                    }
                },
                "example": {
                    "hostName": "N_24329156",
                    "enabled": true
                }
            },
            "key": "updateNetworkWirelessElectronicShelfLabel",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "electronicShelfLabel",
            "configuredDevices"
        ],
        "method": "get",
        "description": "Get a list of all ESL eligible devices of a network",
        "url": "/networks/{networkId}/wireless/electronicShelfLabel/configuredDevices",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "failedConnections"
        ],
        "method": "get",
        "description": "List of all failed client connection events on this network in a given time range",
        "url": "/networks/{networkId}/wireless/failedConnections",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "name": "serial",
                "in": "query",
                "description": "Filter by AP",
                "key": "serial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientId",
                "in": "query",
                "description": "Filter by client MAC",
                "key": "clientId",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "latencyHistory"
        ],
        "method": "get",
        "description": "Return average wireless latency over time for a network, device, or network client",
        "url": "/networks/{networkId}/wireless/latencyHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "autoResolution",
                "in": "query",
                "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
                "key": "autoResolution",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientId",
                "in": "query",
                "description": "Filter results by network client.",
                "key": "clientId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter results by device.",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP tag.",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5').",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID number.",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "backgroundTraffic",
                    "bestEffortTraffic",
                    "videoTraffic",
                    "voiceTraffic"
                ],
                "name": "accessCategory",
                "in": "query",
                "description": "Filter by access category.",
                "key": "accessCategory",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "latencyStats"
        ],
        "method": "get",
        "description": "Aggregated latency info for this network",
        "url": "/networks/{networkId}/wireless/latencyStats",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information.",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID",
                "key": "ssid",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "vlan",
                "in": "query",
                "description": "Filter results by VLAN",
                "key": "vlan",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP Tag",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "name": "fields",
                "in": "query",
                "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                "key": "fields",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "meshStatuses"
        ],
        "method": "get",
        "description": "List wireless mesh statuses for repeaters",
        "url": "/networks/{networkId}/wireless/meshStatuses",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "rfProfiles"
        ],
        "method": "get",
        "description": "List the non-basic RF profiles for this network",
        "url": "/networks/{networkId}/wireless/rfProfiles",
        "params": [{
            "type": "boolean",
            "name": "includeTemplateProfiles",
            "in": "query",
            "description": "If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.",
            "key": "includeTemplateProfiles",
            "source": "query"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "rfProfiles"
        ],
        "method": "post",
        "description": "Creates new RF profile for this network",
        "url": "/networks/{networkId}/wireless/rfProfiles",
        "params": [{
            "name": "createNetworkWirelessRfProfile",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new profile. Must be unique. This param is required on creation."
                    },
                    "clientBalancingEnabled": {
                        "type": "boolean",
                        "description": "Steers client to best available access point. Can be either true or false. Defaults to true."
                    },
                    "minBitrateType": {
                        "type": "string",
                        "enum": [
                            "band",
                            "ssid"
                        ],
                        "description": "Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band."
                    },
                    "bandSelectionType": {
                        "type": "string",
                        "enum": [
                            "ssid",
                            "ap"
                        ],
                        "description": "Band selection can be set to either 'ssid' or 'ap'. This param is required on creation."
                    },
                    "apBandSettings": {
                        "type": "object",
                        "properties": {
                            "bandOperationMode": {
                                "type": "string",
                                "enum": [
                                    "dual",
                                    "2.4ghz",
                                    "5ghz"
                                ],
                                "description": "Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual."
                            },
                            "bandSteeringEnabled": {
                                "type": "boolean",
                                "description": "Steers client to most open band. Can be either true or false. Defaults to true."
                            }
                        },
                        "description": "Settings that will be enabled if selectionType is set to 'ap'."
                    },
                    "twoFourGhzSettings": {
                        "type": "object",
                        "properties": {
                            "maxPower": {
                                "type": "integer",
                                "description": "Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 30."
                            },
                            "minPower": {
                                "type": "integer",
                                "description": "Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 5."
                            },
                            "minBitrate": {
                                "type": "number",
                                "format": "float",
                                "description": "Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11."
                            },
                            "validAutoChannels": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "description": "Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11]."
                            },
                            "axEnabled": {
                                "type": "boolean",
                                "description": "Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true."
                            },
                            "rxsop": {
                                "type": "integer",
                                "description": "The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default."
                            }
                        },
                        "description": "Settings related to 2.4Ghz band"
                    },
                    "fiveGhzSettings": {
                        "type": "object",
                        "properties": {
                            "maxPower": {
                                "type": "integer",
                                "description": "Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 30."
                            },
                            "minPower": {
                                "type": "integer",
                                "description": "Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 8."
                            },
                            "minBitrate": {
                                "type": "integer",
                                "description": "Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12."
                            },
                            "validAutoChannels": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "description": "Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165]."
                            },
                            "channelWidth": {
                                "type": "string",
                                "description": "Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto."
                            },
                            "rxsop": {
                                "type": "integer",
                                "description": "The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default."
                            }
                        },
                        "description": "Settings related to 5Ghz band"
                    }
                },
                "example": {},
                "required": [
                    "name",
                    "bandSelectionType"
                ]
            },
            "required": true,
            "key": "createNetworkWirelessRfProfile",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "rfProfiles"
        ],
        "method": "put",
        "description": "Updates specified RF profile for this network",
        "url": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "params": [{
            "name": "updateNetworkWirelessRfProfile",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new profile. Must be unique."
                    },
                    "clientBalancingEnabled": {
                        "type": "boolean",
                        "description": "Steers client to best available access point. Can be either true or false."
                    },
                    "minBitrateType": {
                        "type": "string",
                        "enum": [
                            "band",
                            "ssid"
                        ],
                        "description": "Minimum bitrate can be set to either 'band' or 'ssid'."
                    },
                    "bandSelectionType": {
                        "type": "string",
                        "enum": [
                            "ssid",
                            "ap"
                        ],
                        "description": "Band selection can be set to either 'ssid' or 'ap'."
                    },
                    "apBandSettings": {
                        "type": "object",
                        "properties": {
                            "bandOperationMode": {
                                "type": "string",
                                "enum": [
                                    "dual",
                                    "2.4ghz",
                                    "5ghz"
                                ],
                                "description": "Choice between 'dual', '2.4ghz' or '5ghz'."
                            },
                            "bandSteeringEnabled": {
                                "type": "boolean",
                                "description": "Steers client to most open band. Can be either true or false."
                            }
                        },
                        "description": "Settings that will be enabled if selectionType is set to 'ap'."
                    },
                    "twoFourGhzSettings": {
                        "type": "object",
                        "properties": {
                            "maxPower": {
                                "type": "integer",
                                "description": "Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                            },
                            "minPower": {
                                "type": "integer",
                                "description": "Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                            },
                            "minBitrate": {
                                "type": "number",
                                "format": "float",
                                "description": "Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'."
                            },
                            "validAutoChannels": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "description": "Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'."
                            },
                            "axEnabled": {
                                "type": "boolean",
                                "description": "Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering."
                            },
                            "rxsop": {
                                "type": "integer",
                                "description": "The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default."
                            }
                        },
                        "description": "Settings related to 2.4Ghz band"
                    },
                    "fiveGhzSettings": {
                        "type": "object",
                        "properties": {
                            "maxPower": {
                                "type": "integer",
                                "description": "Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                            },
                            "minPower": {
                                "type": "integer",
                                "description": "Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                            },
                            "minBitrate": {
                                "type": "integer",
                                "description": "Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'."
                            },
                            "validAutoChannels": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "description": "Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'."
                            },
                            "channelWidth": {
                                "type": "string",
                                "description": "Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'."
                            },
                            "rxsop": {
                                "type": "integer",
                                "description": "The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default."
                            }
                        },
                        "description": "Settings related to 5Ghz band"
                    }
                },
                "example": {}
            },
            "key": "updateNetworkWirelessRfProfile",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "rfProfiles"
        ],
        "method": "delete",
        "description": "Delete a RF Profile",
        "url": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "rfProfiles"
        ],
        "method": "get",
        "description": "Return a RF profile",
        "url": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "settings"
        ],
        "method": "get",
        "description": "Return the wireless settings for a network",
        "url": "/networks/{networkId}/wireless/settings",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "settings"
        ],
        "method": "put",
        "description": "Update the wireless settings for a network",
        "url": "/networks/{networkId}/wireless/settings",
        "params": [{
            "name": "updateNetworkWirelessSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "meshingEnabled": {
                        "type": "boolean",
                        "description": "Toggle for enabling or disabling meshing in a network"
                    },
                    "ipv6BridgeEnabled": {
                        "type": "boolean",
                        "description": "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
                    },
                    "locationAnalyticsEnabled": {
                        "type": "boolean",
                        "description": "Toggle for enabling or disabling location analytics for your network"
                    },
                    "upgradeStrategy": {
                        "type": "string",
                        "enum": [
                            "minimizeUpgradeTime",
                            "minimizeClientDowntime"
                        ],
                        "description": "The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'"
                    },
                    "ledLightsOn": {
                        "type": "boolean",
                        "description": "Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)"
                    }
                },
                "example": {
                    "meshingEnabled": true,
                    "ipv6BridgeEnabled": false,
                    "locationAnalyticsEnabled": false,
                    "upgradeStrategy": "minimizeUpgradeTime"
                }
            },
            "key": "updateNetworkWirelessSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "signalQualityHistory"
        ],
        "method": "get",
        "description": "Return signal quality (SNR/RSSI) over time for a device or network client",
        "url": "/networks/{networkId}/wireless/signalQualityHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "autoResolution",
                "in": "query",
                "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
                "key": "autoResolution",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientId",
                "in": "query",
                "description": "Filter results by network client.",
                "key": "clientId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter results by device.",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5').",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID number.",
                "key": "ssid",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids"
        ],
        "method": "get",
        "description": "List the MR SSIDs in a network",
        "url": "/networks/{networkId}/wireless/ssids",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids"
        ],
        "method": "get",
        "description": "Return a single MR SSID",
        "url": "/networks/{networkId}/wireless/ssids/{number}",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids"
        ],
        "method": "put",
        "description": "Update the attributes of an MR SSID",
        "url": "/networks/{networkId}/wireless/ssids/{number}",
        "params": [{
            "name": "updateNetworkWirelessSsid",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the SSID"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether or not the SSID is enabled"
                    },
                    "authMode": {
                        "type": "string",
                        "enum": [
                            "open",
                            "psk",
                            "open-with-radius",
                            "8021x-meraki",
                            "8021x-radius",
                            "ipsk-with-radius",
                            "ipsk-without-radius"
                        ],
                        "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius', 'ipsk-with-radius' or 'ipsk-without-radius')"
                    },
                    "enterpriseAdminAccess": {
                        "type": "string",
                        "enum": [
                            "access disabled",
                            "access enabled"
                        ],
                        "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                    },
                    "encryptionMode": {
                        "type": "string",
                        "enum": [
                            "wep",
                            "wpa"
                        ],
                        "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                    },
                    "psk": {
                        "type": "string",
                        "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                    },
                    "wpaEncryptionMode": {
                        "type": "string",
                        "enum": [
                            "WPA1 only",
                            "WPA1 and WPA2",
                            "WPA2 only",
                            "WPA3 Transition Mode",
                            "WPA3 only"
                        ],
                        "description": "The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')"
                    },
                    "dot11w": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Whether 802.11w is enabled or not."
                            },
                            "required": {
                                "type": "boolean",
                                "description": "(Optional) Whether 802.11w is required or not."
                            }
                        },
                        "description": "The current setting for Protected Management Frames (802.11w)."
                    },
                    "dot11r": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Whether 802.11r is enabled or not."
                            },
                            "adaptive": {
                                "type": "boolean",
                                "description": "(Optional) Whether 802.11r is adaptive or not."
                            }
                        },
                        "description": "The current setting for 802.11r"
                    },
                    "splashPage": {
                        "type": "string",
                        "enum": [
                            "None",
                            "Click-through splash page",
                            "Billing",
                            "Password-protected with Meraki RADIUS",
                            "Password-protected with custom RADIUS",
                            "Password-protected with Active Directory",
                            "Password-protected with LDAP",
                            "SMS authentication",
                            "Systems Manager Sentry",
                            "Facebook Wi-Fi",
                            "Google OAuth",
                            "Sponsored guest",
                            "Cisco ISE"
                        ],
                        "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest' or 'Cisco ISE'). This attribute is not supported for template children."
                    },
                    "guestSponsorship": {
                        "type": "object",
                        "properties": {
                            "domains": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Array of valid sponsor email domains for sponsored guest splash type."
                            },
                            "duration": {
                                "type": "integer",
                                "description": "Duration in minutes of sponsored guest authorization. Must be between 1 and 60480 (6 weeks)"
                            }
                        },
                        "description": "Details associated with guest sponsored splash. This param is only valid if the splashPage is 'Sponsored guest'"
                    },
                    "radiusServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "IP address of your RADIUS server"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "UDP port the RADIUS server listens on for Access-requests"
                                },
                                "secret": {
                                    "type": "string",
                                    "description": "RADIUS client shared secret"
                                }
                            },
                            "required": [
                                "host"
                            ]
                        },
                        "description": "The RADIUS 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                    },
                    "radiusProxyEnabled": {
                        "type": "boolean",
                        "description": "If true, Meraki devices will proxy RADIUS messages through the Meraki cloud to the configured RADIUS auth and accounting servers."
                    },
                    "radiusCoaEnabled": {
                        "type": "boolean",
                        "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                    },
                    "radiusFailoverPolicy": {
                        "type": "string",
                        "enum": [
                            "Deny access",
                            "Allow access"
                        ],
                        "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                    },
                    "radiusLoadBalancingPolicy": {
                        "type": "string",
                        "enum": [
                            "Strict priority order",
                            "Round robin"
                        ],
                        "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                    },
                    "radiusAccountingEnabled": {
                        "type": "boolean",
                        "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                    },
                    "radiusAccountingServers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "IP address to which the APs will send RADIUS accounting messages"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port on the RADIUS server that is listening for accounting messages"
                                },
                                "secret": {
                                    "type": "string",
                                    "description": "Shared key used to authenticate messages between the APs and RADIUS server"
                                }
                            },
                            "required": [
                                "host"
                            ]
                        },
                        "description": "The RADIUS accounting 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'"
                    },
                    "radiusAttributeForGroupPolicies": {
                        "type": "string",
                        "enum": [
                            "Filter-Id",
                            "Reply-Message",
                            "Airespace-ACL-Name",
                            "Aruba-User-Role"
                        ],
                        "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                    },
                    "ipAssignmentMode": {
                        "type": "string",
                        "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                    },
                    "useVlanTagging": {
                        "type": "boolean",
                        "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                    },
                    "concentratorNetworkId": {
                        "type": "string",
                        "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                    },
                    "defaultVlanId": {
                        "type": "integer",
                        "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                    },
                    "apTagsAndVlanIds": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Array of AP tags"
                                },
                                "vlanId": {
                                    "type": "integer",
                                    "description": "Numerical identifier that is assigned to the VLAN"
                                }
                            }
                        },
                        "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                    },
                    "walledGardenEnabled": {
                        "type": "boolean",
                        "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                    },
                    "walledGardenRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden."
                    },
                    "radiusOverride": {
                        "type": "boolean",
                        "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                    },
                    "radiusGuestVlanEnabled": {
                        "type": "boolean",
                        "description": "Whether or not RADIUS Guest VLAN is enabled. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                    },
                    "radiusGuestVlanId": {
                        "type": "integer",
                        "description": "VLAN ID of the RADIUS Guest VLAN. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                    },
                    "minBitrate": {
                        "type": "number",
                        "format": "float",
                        "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                    },
                    "bandSelection": {
                        "type": "string",
                        "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                    },
                    "perClientBandwidthLimitUp": {
                        "type": "integer",
                        "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "perClientBandwidthLimitDown": {
                        "type": "integer",
                        "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "perSsidBandwidthLimitUp": {
                        "type": "integer",
                        "description": "The total upload bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "perSsidBandwidthLimitDown": {
                        "type": "integer",
                        "description": "The total download bandwidth limit in Kbps. (0 represents no limit.)"
                    },
                    "lanIsolationEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Boolean indicating whether APs should advertise or hide this SSID. APs will only broadcast this SSID if set to true"
                    },
                    "availableOnAllAps": {
                        "type": "boolean",
                        "description": "Boolean indicating whether all APs should broadcast the SSID or if it should be restricted to APs matching any availability tags. Can only be false if the SSID has availability tags."
                    },
                    "availabilityTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Accepts a list of tags for this SSID. If availableOnAllAps is false, then the SSID will only be broadcast by APs with tags matching any of the tags in this list."
                    },
                    "mandatoryDhcpEnabled": {
                        "type": "boolean",
                        "description": "If true, Mandatory DHCP will enforce that clients connecting to this SSID must use the IP address assigned by the DHCP server. Clients who use a static IP address won’t be able to associate."
                    }
                },
                "example": {
                    "name": "My SSID",
                    "enabled": true
                }
            },
            "key": "updateNetworkWirelessSsid",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "firewall",
            "l3FirewallRules"
        ],
        "method": "get",
        "description": "Return the L3 firewall rules for an SSID on an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "firewall",
            "l3FirewallRules"
        ],
        "method": "put",
        "description": "Update the L3 firewall rules of an SSID on an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules",
        "params": [{
            "name": "updateNetworkWirelessSsidFirewallL3FirewallRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)"
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule"
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "icmp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                },
                                "destPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "destCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                }
                            },
                            "required": [
                                "policy",
                                "protocol",
                                "destCidr"
                            ]
                        },
                        "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)"
                    },
                    "allowLanAccess": {
                        "type": "boolean",
                        "description": "Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)"
                    }
                },
                "example": {
                    "rules": [{
                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                        "policy": "allow",
                        "protocol": "tcp",
                        "destPort": 443,
                        "destCidr": "192.168.1.0/24"
                    }]
                }
            },
            "key": "updateNetworkWirelessSsidFirewallL3FirewallRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "firewall",
            "l7FirewallRules"
        ],
        "method": "get",
        "description": "Return the L7 firewall rules for an SSID on an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "firewall",
            "l7FirewallRules"
        ],
        "method": "put",
        "description": "Update the L7 firewall rules of an SSID on an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules",
        "params": [{
            "name": "updateNetworkWirelessSsidFirewallL7FirewallRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "deny"
                                    ],
                                    "description": "'Deny' traffic specified by this rule"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "application",
                                        "applicationCategory",
                                        "host",
                                        "port",
                                        "ipRange"
                                    ],
                                    "description": "Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected."
                                }
                            }
                        },
                        "description": "An array of L7 firewall rules for this SSID. Rules will get applied in the same order user has specified in request. Empty array will clear the L7 firewall rule configuration."
                    }
                },
                "example": {
                    "rules": [{
                            "policy": "deny",
                            "type": "application",
                            "value": {
                                "id": "meraki:layer7/application/67",
                                "name": "Xbox LIVE"
                            }
                        },
                        {
                            "policy": "deny",
                            "type": "applicationCategory",
                            "value": {
                                "id": "meraki:layer7/category/2",
                                "name": "Blogging"
                            }
                        },
                        {
                            "policy": "deny",
                            "type": "host",
                            "value": "google.com"
                        },
                        {
                            "policy": "deny",
                            "type": "port",
                            "value": "23"
                        },
                        {
                            "policy": "deny",
                            "type": "ipRange",
                            "value": "10.11.12.00/24"
                        },
                        {
                            "policy": "deny",
                            "type": "ipRange",
                            "value": "10.11.12.00/24:5555"
                        }
                    ]
                }
            },
            "key": "updateNetworkWirelessSsidFirewallL7FirewallRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "identityPsks"
        ],
        "method": "get",
        "description": "List all Identity PSKs in a wireless network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/identityPsks",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "identityPsks"
        ],
        "method": "post",
        "description": "Create an Identity PSK",
        "url": "/networks/{networkId}/wireless/ssids/{number}/identityPsks",
        "params": [{
            "name": "createNetworkWirelessSsidIdentityPsk",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Identity PSK"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "The passphrase for client authentication"
                    },
                    "groupPolicyId": {
                        "type": "string",
                        "description": "The group policy to be applied to clients"
                    }
                },
                "example": {
                    "name": "Sample Identity PSK",
                    "passphrase": "NIalareK",
                    "groupPolicyId": "101"
                },
                "required": [
                    "name",
                    "passphrase",
                    "groupPolicyId"
                ]
            },
            "required": true,
            "key": "createNetworkWirelessSsidIdentityPsk",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "identityPsks"
        ],
        "method": "get",
        "description": "Return an Identity PSK",
        "url": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "identityPsks"
        ],
        "method": "put",
        "description": "Update an Identity PSK",
        "url": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
        "params": [{
            "name": "updateNetworkWirelessSsidIdentityPsk",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Identity PSK"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "The passphrase for client authentication"
                    },
                    "groupPolicyId": {
                        "type": "string",
                        "description": "The group policy to be applied to clients"
                    }
                },
                "example": {
                    "name": "Sample Identity PSK",
                    "passphrase": "NIalareK",
                    "groupPolicyId": "101"
                }
            },
            "key": "updateNetworkWirelessSsidIdentityPsk",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "identityPsks"
        ],
        "method": "delete",
        "description": "Delete an Identity PSK",
        "url": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids"
        ],
        "method": "post",
        "description": "Reset configuration and stats for an MR SSID",
        "url": "/networks/{networkId}/wireless/ssids/{number}/reset",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "splash",
            "settings"
        ],
        "method": "get",
        "description": "Display the splash page settings for the given SSID",
        "url": "/networks/{networkId}/wireless/ssids/{number}/splash/settings",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "splash",
            "settings"
        ],
        "method": "put",
        "description": "Modify the splash page settings for the given SSID",
        "url": "/networks/{networkId}/wireless/ssids/{number}/splash/settings",
        "params": [{
            "name": "updateNetworkWirelessSsidSplashSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "splashUrl": {
                        "type": "string",
                        "description": "[optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'"
                    },
                    "useSplashUrl": {
                        "type": "boolean",
                        "description": "[optional] Boolean indicating whether the users will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL."
                    },
                    "splashTimeout": {
                        "type": "integer",
                        "description": "Splash timeout in minutes. This will determine how often users will see the splash page."
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "The custom redirect URL where the users will go after the splash page."
                    },
                    "useRedirectUrl": {
                        "type": "boolean",
                        "description": "The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page. A custom redirect URL must be set if this is true."
                    },
                    "welcomeMessage": {
                        "type": "string",
                        "description": "The welcome message for the users on the splash page."
                    },
                    "splashLogo": {
                        "type": "object",
                        "properties": {
                            "md5": {
                                "type": "string",
                                "description": "The MD5 value of the logo file. Setting this to null will remove the logo from the splash page."
                            },
                            "extension": {
                                "type": "string",
                                "description": "The extension of the logo file."
                            }
                        },
                        "description": "The logo used in the splash page."
                    },
                    "splashImage": {
                        "type": "object",
                        "properties": {
                            "md5": {
                                "type": "string",
                                "description": "The MD5 value of the image file. Setting this to null will remove the image from the splash page."
                            },
                            "extension": {
                                "type": "string",
                                "description": "The extension of the image file."
                            }
                        },
                        "description": "The image used in the splash page."
                    },
                    "splashPrepaidFront": {
                        "type": "object",
                        "properties": {
                            "md5": {
                                "type": "string",
                                "description": "The MD5 value of the prepaid front image file. Setting this to null will remove the prepaid front from the splash page."
                            },
                            "extension": {
                                "type": "string",
                                "description": "The extension of the prepaid front image file."
                            }
                        },
                        "description": "The prepaid front image used in the splash page."
                    }
                },
                "example": {
                    "splashPage": "Click-through splash page",
                    "splashUrl": "https://www.custom_splash_url.com",
                    "useSplashUrl": true,
                    "redirectUrl": "https://example.com",
                    "useRedirectUrl": true,
                    "welcomeMessage": "Welcome!",
                    "splashLogo": {
                        "md5": "abcd1234",
                        "extension": "jpg"
                    },
                    "splashImage": {
                        "md5": null
                    },
                    "splashPrepaidFront": {
                        "md5": null
                    }
                }
            },
            "key": "updateNetworkWirelessSsidSplashSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "trafficShaping",
            "rules"
        ],
        "method": "put",
        "description": "Update the traffic shaping settings for an SSID on an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules",
        "params": [{
            "name": "updateNetworkWirelessSsidTrafficShapingRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "trafficShapingEnabled": {
                        "type": "boolean",
                        "description": "Whether traffic shaping rules are applied to clients on your SSID."
                    },
                    "defaultRulesEnabled": {
                        "type": "boolean",
                        "description": "Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8."
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "definitions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "application",
                                                    "applicationCategory",
                                                    "host",
                                                    "port",
                                                    "ipRange",
                                                    "localNet"
                                                ],
                                                "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "value"
                                        ]
                                    },
                                    "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                },
                                "perClientBandwidthLimits": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                        },
                                        "bandwidthLimits": {
                                            "type": "object",
                                            "properties": {
                                                "limitUp": {
                                                    "type": "integer",
                                                    "description": "The maximum upload limit (integer, in Kbps)."
                                                },
                                                "limitDown": {
                                                    "type": "integer",
                                                    "description": "The maximum download limit (integer, in Kbps)."
                                                }
                                            },
                                            "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                        }
                                    },
                                    "description": "    An object describing the bandwidth settings for your rule.\n"
                                },
                                "dscpTagValue": {
                                    "type": "integer",
                                    "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                                },
                                "pcpTagValue": {
                                    "type": "integer",
                                    "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                                }
                            },
                            "required": [
                                "definitions"
                            ]
                        },
                        "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                    }
                },
                "example": {
                    "trafficShapingEnabled": true,
                    "defaultRulesEnabled": true,
                    "rules": [{
                        "definitions": [{
                                "type": "host",
                                "value": "google.com"
                            },
                            {
                                "type": "port",
                                "value": "9090"
                            },
                            {
                                "type": "ipRange",
                                "value": "192.1.0.0"
                            },
                            {
                                "type": "ipRange",
                                "value": "192.1.0.0/16"
                            },
                            {
                                "type": "ipRange",
                                "value": "10.1.0.0/16:80"
                            },
                            {
                                "type": "localNet",
                                "value": "192.168.0.0/16"
                            },
                            {
                                "type": "applicationCategory",
                                "value": {
                                    "id": "meraki:layer7/category/2",
                                    "name": "Blogging"
                                }
                            },
                            {
                                "type": "application",
                                "value": {
                                    "id": "meraki:layer7/application/133",
                                    "name": "Battle.net"
                                }
                            }
                        ],
                        "perClientBandwidthLimits": {
                            "settings": "custom",
                            "bandwidthLimits": {
                                "limitUp": 1000000,
                                "limitDown": 1000000
                            }
                        },
                        "dscpTagValue": null,
                        "pcpTagValue": null
                    }]
                }
            },
            "key": "updateNetworkWirelessSsidTrafficShapingRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "trafficShaping",
            "rules"
        ],
        "method": "get",
        "description": "Display the traffic shaping settings for a SSID on an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "umbrella",
            "protection"
        ],
        "method": "get",
        "description": "Show Umbrella protection on an SSID",
        "url": "/networks/{networkId}/wireless/ssids/{number}/umbrella/protection",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "umbrella",
            "protection",
            "applyProtectionAttempts"
        ],
        "method": "post",
        "description": "Apply Umbrella protection on an SSID of an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/umbrella/protection/applyProtectionAttempts",
        "params": [{
            "name": "createNetworkWirelessSsidUmbrellaProtectionApplyProtectionAttempt",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "umbrellaProtectionEnabled": {
                        "type": "boolean",
                        "description": "Enable/Disable Umbrella protection"
                    },
                    "umbrellaPolicyId": {
                        "type": "integer",
                        "description": "ID of the Umbrella policy to be applied"
                    },
                    "excludedDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domain names excluded from the applied protection"
                    }
                },
                "example": {
                    "umbrellaProtectionEnabled": true,
                    "umbrellaPolicyId": "1234",
                    "excludedDomains": [
                        "internal-domain.io"
                    ]
                },
                "required": [
                    "umbrellaProtectionEnabled"
                ]
            },
            "required": true,
            "key": "createNetworkWirelessSsidUmbrellaProtectionApplyProtectionAttempt",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "configure",
            "ssids",
            "umbrella",
            "protection",
            "applyProtectionAttempts"
        ],
        "method": "get",
        "description": "Status of applying Umbrella protection on an SSID of an MR network",
        "url": "/networks/{networkId}/wireless/ssids/{number}/umbrella/protection/applyProtectionAttempts/{attemptId}",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "uplinkAuthentication"
        ],
        "method": "get",
        "description": "Return the wireless uplink authentication settings for a network",
        "url": "/networks/{networkId}/wireless/uplinkAuthentication",
        "params": []
    },
    {
        "tags": [
            "wireless",
            "configure",
            "uplinkAuthentication"
        ],
        "method": "put",
        "description": "Update the wireless uplink authentication settings for a network",
        "url": "/networks/{networkId}/wireless/uplinkAuthentication",
        "params": [{
            "name": "updateNetworkWirelessUplinkAuthentication",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "authenticationEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether uplink authentication is enabled or disabled"
                    },
                    "signingTarget": {
                        "type": "string",
                        "description": "The SCEP signing target URL. SCEP operates over HTTP"
                    },
                    "challengePassword": {
                        "type": "string",
                        "description": "The SCEP challenge password. It should be consistent with the one on the NDES server that signs certificates for your network"
                    },
                    "renewWindowInDays": {
                        "type": "integer",
                        "description": "The number of days ahead of expiry that the device should start renewing the certificates"
                    }
                },
                "example": {}
            },
            "key": "updateNetworkWirelessUplinkAuthentication",
            "source": "body"
        }]
    },
    {
        "tags": [
            "wireless",
            "monitor",
            "usageHistory"
        ],
        "method": "get",
        "description": "Return AP usage over time for a device or network client",
        "url": "/networks/{networkId}/wireless/usageHistory",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "resolution",
                "in": "query",
                "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
                "key": "resolution",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "autoResolution",
                "in": "query",
                "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
                "key": "autoResolution",
                "source": "query"
            },
            {
                "type": "string",
                "name": "clientId",
                "in": "query",
                "description": "Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history.",
                "key": "clientId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter results by device. Requires :band.",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "apTag",
                "in": "query",
                "description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.",
                "key": "apTag",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "2.4",
                    "5"
                ],
                "name": "band",
                "in": "query",
                "description": "Filter results by band (either '2.4' or '5').",
                "key": "band",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "ssid",
                "in": "query",
                "description": "Filter results by SSID number.",
                "key": "ssid",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "configure"
        ],
        "method": "get",
        "description": "List the organizations that the user has privileges on",
        "url": "/organizations",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure"
        ],
        "method": "post",
        "description": "Create a new organization",
        "url": "/organizations",
        "params": [{
            "name": "createOrganization",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the organization"
                    }
                },
                "example": {
                    "name": "My organization"
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createOrganization",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure"
        ],
        "method": "get",
        "description": "Return an organization",
        "url": "/organizations/{organizationId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure"
        ],
        "method": "put",
        "description": "Update an organization",
        "url": "/organizations/{organizationId}",
        "params": [{
            "name": "updateOrganization",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the organization"
                    }
                },
                "example": {
                    "name": "My organization"
                }
            },
            "key": "updateOrganization",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure"
        ],
        "method": "delete",
        "description": "Delete an organization",
        "url": "/organizations/{organizationId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "actionBatches"
        ],
        "method": "post",
        "description": "Create an action batch",
        "url": "/organizations/{organizationId}/actionBatches",
        "params": [{
            "name": "createOrganizationActionBatch",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "confirmed": {
                        "type": "boolean",
                        "description": "Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false."
                    },
                    "synchronous": {
                        "type": "boolean",
                        "description": "Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false."
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "resource": {
                                    "type": "string",
                                    "description": "Unique identifier for the resource to be acted on"
                                },
                                "operation": {
                                    "type": "string",
                                    "description": "The operation to be used"
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "The body of the action",
                                    "default": {}
                                }
                            },
                            "required": [
                                "resource",
                                "operation"
                            ]
                        },
                        "description": "A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                    }
                },
                "example": {
                    "confirmed": true,
                    "synchronous": false,
                    "actions": [{
                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                        "operation": "update",
                        "body": {
                            "enabled": false
                        }
                    }]
                },
                "required": [
                    "actions"
                ]
            },
            "required": true,
            "key": "createOrganizationActionBatch",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "actionBatches"
        ],
        "method": "get",
        "description": "Return the list of action batches in the organization",
        "url": "/organizations/{organizationId}/actionBatches",
        "params": [{
            "type": "string",
            "enum": [
                "pending",
                "completed",
                "failed"
            ],
            "name": "status",
            "in": "query",
            "description": "Filter batches by status. Valid types are pending, completed, and failed.",
            "key": "status",
            "source": "query"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "actionBatches"
        ],
        "method": "get",
        "description": "Return an action batch",
        "url": "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "actionBatches"
        ],
        "method": "delete",
        "description": "Delete an action batch",
        "url": "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "actionBatches"
        ],
        "method": "put",
        "description": "Update an action batch",
        "url": "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "params": [{
            "name": "updateOrganizationActionBatch",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "confirmed": {
                        "type": "boolean",
                        "description": "A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true."
                    },
                    "synchronous": {
                        "type": "boolean",
                        "description": "Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch."
                    }
                },
                "example": {
                    "confirmed": true,
                    "synchronous": false
                }
            },
            "key": "updateOrganizationActionBatch",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "acls"
        ],
        "method": "get",
        "description": "List adaptive policy ACLs in a organization",
        "url": "/organizations/{organizationId}/adaptivePolicy/acls",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "acls"
        ],
        "method": "post",
        "description": "Creates new adaptive policy ACL",
        "url": "/organizations/{organizationId}/adaptivePolicy/acls",
        "params": [{
            "name": "createOrganizationAdaptivePolicyAcl",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the adaptive policy ACL"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the adaptive policy ACL",
                        "default": ""
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)."
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule."
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "icmp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')."
                                },
                                "srcPort": {
                                    "type": "string",
                                    "description": "Source port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                                },
                                "dstPort": {
                                    "type": "string",
                                    "description": "Destination port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                                }
                            },
                            "required": [
                                "policy",
                                "protocol"
                            ]
                        },
                        "description": "An ordered array of the adaptive policy ACL rules."
                    },
                    "ipVersion": {
                        "type": "string",
                        "enum": [
                            "agnostic",
                            "ipv4",
                            "ipv6"
                        ],
                        "description": "IP version of adpative policy ACL. One of: 'agnostic', 'ipv4' or 'ipv6'"
                    }
                },
                "example": {
                    "name": "Block sensitive web traffic",
                    "description": "Blocks sensitive web traffic",
                    "ipVersion": "ipv6",
                    "rules": [{
                            "policy": "deny",
                            "protocol": "tcp",
                            "srcPort": "1,33",
                            "dstPort": "22-30"
                        },
                        {
                            "policy": "allow",
                            "protocol": "any",
                            "srcPort": "any",
                            "dstPort": "any"
                        }
                    ]
                },
                "required": [
                    "name",
                    "rules",
                    "ipVersion"
                ]
            },
            "required": true,
            "key": "createOrganizationAdaptivePolicyAcl",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "acls"
        ],
        "method": "get",
        "description": "Returns the adaptive policy ACL information",
        "url": "/organizations/{organizationId}/adaptivePolicy/acls/{aclId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "acls"
        ],
        "method": "put",
        "description": "Updates an adaptive policy ACL",
        "url": "/organizations/{organizationId}/adaptivePolicy/acls/{aclId}",
        "params": [{
            "name": "updateOrganizationAdaptivePolicyAcl",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the adaptive policy ACL"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the adaptive policy ACL"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)."
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule."
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "icmp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')."
                                },
                                "srcPort": {
                                    "type": "string",
                                    "description": "Source port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                                },
                                "dstPort": {
                                    "type": "string",
                                    "description": "Destination port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                                }
                            },
                            "required": [
                                "policy",
                                "protocol"
                            ]
                        },
                        "description": "An ordered array of the adaptive policy ACL rules. An empty array will clear the rules."
                    },
                    "ipVersion": {
                        "type": "string",
                        "enum": [
                            "agnostic",
                            "ipv4",
                            "ipv6"
                        ],
                        "description": "IP version of adpative policy ACL. One of: 'agnostic', 'ipv4' or 'ipv6'"
                    }
                },
                "example": {
                    "name": "Block sensitive web traffic",
                    "description": "Blocks sensitive web traffic",
                    "ipVersion": "ipv6",
                    "rules": [{
                            "policy": "deny",
                            "protocol": "tcp",
                            "srcPort": "1,33",
                            "dstPort": "22-30"
                        },
                        {
                            "policy": "allow",
                            "protocol": "any",
                            "srcPort": "any",
                            "dstPort": "any"
                        }
                    ]
                }
            },
            "key": "updateOrganizationAdaptivePolicyAcl",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "acls"
        ],
        "method": "delete",
        "description": "Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it.",
        "url": "/organizations/{organizationId}/adaptivePolicy/acls/{aclId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "bindings"
        ],
        "method": "get",
        "description": "List adaptive policy bindings with matching source/destination group ID in an organization.\n    If both group IDs are not specified, all bindings persisted will be returned",
        "url": "/organizations/{organizationId}/adaptivePolicy/bindings",
        "params": [{
                "type": "integer",
                "name": "srcGroupId",
                "in": "query",
                "description": "Source group ID of the binding.",
                "key": "srcGroupId",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "dstGroupId",
                "in": "query",
                "description": "Destination group ID of the binding",
                "key": "dstGroupId",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "bindings"
        ],
        "method": "put",
        "description": "Updates an adaptive policy binding, and persists it",
        "url": "/organizations/{organizationId}/adaptivePolicy/bindings",
        "params": [{
            "name": "updateOrganizationAdaptivePolicyBindings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "srcGroupId": {
                        "type": "integer",
                        "description": "Source group ID of the binding"
                    },
                    "dstGroupId": {
                        "type": "integer",
                        "description": "Destination group ID of the binding"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the binding. Name cannot be 'GlobalDefault'\n      because it is reserved for the global default policy"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the binding"
                    },
                    "aclIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Ordered list of ACL Ids applied to the binding"
                    },
                    "catchAllRule": {
                        "type": "string",
                        "enum": [
                            "global",
                            "deny all",
                            "allow all"
                        ],
                        "description": "Final rule to apply if there is no matching ACL. One of: 'global', 'deny all' or 'allow all'"
                    },
                    "bindingEnabled": {
                        "type": "boolean",
                        "description": "Enables the binding when set to true. Default setting is true"
                    },
                    "monitorModeEnabled": {
                        "type": "boolean",
                        "description": "Enables monitoring mode when set to true. Default setting is false"
                    }
                },
                "example": {
                    "aclIds": [
                        "11111111"
                    ],
                    "catchAllRule": "allow all",
                    "bindingEnabled": true,
                    "monitorModeEnabled": false,
                    "srcGroupId": "12345678",
                    "dstGroupId": "87654321",
                    "name": "employees_to_guests",
                    "description": "Binding for traffic from Employees to Guests group"
                },
                "required": [
                    "srcGroupId",
                    "dstGroupId"
                ]
            },
            "required": true,
            "key": "updateOrganizationAdaptivePolicyBindings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "bindings",
            "default"
        ],
        "method": "get",
        "description": "Returns the global default adaptive policy binding information",
        "url": "/organizations/{organizationId}/adaptivePolicy/bindings/default",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "bindings",
            "default"
        ],
        "method": "put",
        "description": "Updates the global default adaptive policy binding information.",
        "url": "/organizations/{organizationId}/adaptivePolicy/bindings/default",
        "params": [{
            "name": "updateOrganizationAdaptivePolicyBindingsDefault",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the binding"
                    },
                    "aclIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Ordered list of ACL IDs applied to the binding"
                    },
                    "catchAllRule": {
                        "type": "string",
                        "enum": [
                            "global",
                            "deny all",
                            "allow all"
                        ],
                        "description": "Final rule to apply if there is no matching ACL. One of: 'global', 'deny all' or 'allow all'"
                    },
                    "bindingEnabled": {
                        "type": "boolean",
                        "description": "Enables the binding when set to true. Default setting is true"
                    },
                    "monitorModeEnabled": {
                        "type": "boolean",
                        "description": "Enables monitoring mode when set to true. Default setting is false"
                    }
                },
                "example": {
                    "aclIds": [
                        "11111111"
                    ],
                    "catchAllRule": "allow all",
                    "bindingEnabled": true,
                    "monitorModeEnabled": false
                }
            },
            "key": "updateOrganizationAdaptivePolicyBindingsDefault",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "groups"
        ],
        "method": "get",
        "description": "List adaptive policy groups in a organization",
        "url": "/organizations/{organizationId}/adaptivePolicy/groups",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "groups"
        ],
        "method": "post",
        "description": "Creates a new adaptive policy group. If a value is provided in the request, Dashboard will try to reserve the provided value. Otherwise Dashboard will allocate next available value for this group",
        "url": "/organizations/{organizationId}/adaptivePolicy/groups",
        "params": [{
            "name": "createOrganizationAdaptivePolicyGroup",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "integer",
                        "description": "User provided value of the group. Omit this field to force Dashboard to allocate a value"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the group"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the group"
                    },
                    "networkObjectId": {
                        "type": "string",
                        "description": "ID of the network object used by the group. Traffic from the address specified by the network object will be tagged with the group's SGT value if no other tagging scheme is being used"
                    }
                },
                "example": {
                    "value": 1000,
                    "name": "Employee Group",
                    "description": "Group of XYZ Corp Employees",
                    "networkObjectId": 2345
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createOrganizationAdaptivePolicyGroup",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "groups"
        ],
        "method": "get",
        "description": "Returns an adaptive policy group",
        "url": "/organizations/{organizationId}/adaptivePolicy/groups/{groupId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "groups"
        ],
        "method": "delete",
        "description": "Deletes the specified adaptive policy group and removes bindings for which this group is either a source or a destination. The deleted group value may be re-allocated later when a new group is created",
        "url": "/organizations/{organizationId}/adaptivePolicy/groups/{groupId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "groups"
        ],
        "method": "put",
        "description": "Updates an adaptive policy group. Updating the group value is not allowed",
        "url": "/organizations/{organizationId}/adaptivePolicy/groups/{groupId}",
        "params": [{
            "name": "updateOrganizationAdaptivePolicyGroup",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the group"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the group"
                    },
                    "networkObjectId": {
                        "type": "string",
                        "description": "ID of the network object used by the group. A null value will disassociate the network object from the group.Traffic from the address specified by the network object will be tagged with the group's SGT value if no other tagging scheme is being used"
                    }
                },
                "example": {
                    "name": "Updated Employee Group",
                    "description": "Updated Group of XYZ Corp Employees"
                }
            },
            "key": "updateOrganizationAdaptivePolicyGroup",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "adaptivePolicy",
            "overview"
        ],
        "method": "get",
        "description": "Returns adaptive policy aggregate statistics for an organization",
        "url": "/organizations/{organizationId}/adaptivePolicy/overview",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "settings"
        ],
        "method": "get",
        "description": "Returns global adaptive policy settings in an organization",
        "url": "/organizations/{organizationId}/adaptivePolicy/settings",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "adaptivePolicy",
            "settings"
        ],
        "method": "put",
        "description": "Update global adaptive policy settings",
        "url": "/organizations/{organizationId}/adaptivePolicy/settings",
        "params": [{
            "name": "updateOrganizationAdaptivePolicySettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "merakiInternalGroup": {
                        "type": "integer",
                        "description": "Internal group ID for Meraki devices"
                    },
                    "userGroupMax": {
                        "type": "integer",
                        "description": "Maximum group ID allowed"
                    },
                    "userGroupMin": {
                        "type": "integer",
                        "description": "Minimum group ID allowed"
                    },
                    "enabledNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of network IDs with adaptive policy enabled"
                    }
                },
                "example": {
                    "merakiInternalGroup": 2,
                    "userGroupMin": 100,
                    "userGroupMax": 1000,
                    "enabledNetworks": [
                        "L_11111111",
                        "L_22222222",
                        "N_33333333",
                        "L_44444444"
                    ],
                    "versionNum": 5,
                    "monitorModeEnabled": false
                }
            },
            "key": "updateOrganizationAdaptivePolicySettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "admins"
        ],
        "method": "get",
        "description": "List the dashboard administrators in this organization",
        "url": "/organizations/{organizationId}/admins",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "admins"
        ],
        "method": "post",
        "description": "Create a new dashboard administrator",
        "url": "/organizations/{organizationId}/admins",
        "params": [{
            "name": "createOrganizationAdmin",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email of the dashboard administrator. This attribute can not be updated."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the dashboard administrator"
                    },
                    "orgAccess": {
                        "type": "string",
                        "enum": [
                            "full",
                            "read-only",
                            "enterprise",
                            "none"
                        ],
                        "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "The name of the tag"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "tag",
                                "access"
                            ]
                        },
                        "description": "The list of tags that the dashboard administrator has privileges on"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The network ID"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "id",
                                "access"
                            ]
                        },
                        "description": "The list of networks that the dashboard administrator has privileges on"
                    },
                    "authenticationMethod": {
                        "type": "string",
                        "enum": [
                            "Email",
                            "Cisco SecureX Sign-On"
                        ],
                        "description": "The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication"
                    }
                },
                "example": {
                    "name": "Miles Meraki",
                    "email": "miles@meraki.com",
                    "orgAccess": "none",
                    "tags": [{
                        "tag": "west",
                        "access": "read-only"
                    }]
                },
                "required": [
                    "email",
                    "name",
                    "orgAccess"
                ]
            },
            "required": true,
            "key": "createOrganizationAdmin",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "admins"
        ],
        "method": "put",
        "description": "Update an administrator",
        "url": "/organizations/{organizationId}/admins/{adminId}",
        "params": [{
            "name": "updateOrganizationAdmin",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the dashboard administrator"
                    },
                    "orgAccess": {
                        "type": "string",
                        "enum": [
                            "full",
                            "read-only",
                            "enterprise",
                            "none"
                        ],
                        "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "The name of the tag"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "tag",
                                "access"
                            ]
                        },
                        "description": "The list of tags that the dashboard administrator has privileges on"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The network ID"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "id",
                                "access"
                            ]
                        },
                        "description": "The list of networks that the dashboard administrator has privileges on"
                    }
                },
                "example": {
                    "name": "Miles Meraki",
                    "orgAccess": "none",
                    "tags": [{
                        "tag": "west",
                        "access": "read-only"
                    }]
                }
            },
            "key": "updateOrganizationAdmin",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "admins"
        ],
        "method": "delete",
        "description": "Revoke all access for a dashboard administrator within this organization",
        "url": "/organizations/{organizationId}/admins/{adminId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "alerts",
            "settings"
        ],
        "method": "get",
        "description": "Return the MI alert configuration for this organization",
        "url": "/organizations/{organizationId}/alerts/settings",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "alerts",
            "settings"
        ],
        "method": "put",
        "description": "Update the MI alert configuration for this organization",
        "url": "/organizations/{organizationId}/alerts/settings",
        "params": [{
            "name": "updateOrganizationAlertsSettings",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "defaultDestinations": {
                        "type": "object",
                        "properties": {
                            "emails": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A list of emails that will recieve the alert(s)."
                            },
                            "allAdmins": {
                                "type": "boolean",
                                "description": "If true, then all organization admins will receive emails."
                            }
                        },
                        "description": "The org-wide destinations for all alerts on the organization."
                    },
                    "alerts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "The type of alert"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "A boolean depicting if the alert is turned on or off"
                                },
                                "alertDestinations": {
                                    "type": "object",
                                    "properties": {
                                        "emails": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of emails that will receive information about the alert"
                                        },
                                        "allAdmins": {
                                            "type": "boolean",
                                            "description": "If true, then all organization admins will receive emails for this alert"
                                        }
                                    },
                                    "description": "A hash of destinations for this specific alert."
                                },
                                "filters": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated."
                                }
                            },
                            "required": [
                                "type"
                            ]
                        },
                        "description": "Alert-specific configuration for each type. Only alerts that pertain to the whole organization can be updated."
                    }
                },
                "example": {
                    "defaultDestinations": {
                        "emails": [
                            "miles@meraki.com"
                        ],
                        "allAdmins": true
                    },
                    "alerts": [{
                        "type": "insightAppOutage",
                        "enabled": true,
                        "alertDestinations": {
                            "emails": [
                                "miles@meraki.com"
                            ],
                            "allAdmins": false
                        },
                        "filters": {
                            "alertOnAllApps": true
                        }
                    }]
                }
            },
            "key": "updateOrganizationAlertsSettings",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "apiRequests"
        ],
        "method": "get",
        "description": "List the API requests made by an organization",
        "url": "/organizations/{organizationId}/apiRequests",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "adminId",
                "in": "query",
                "description": "Filter the results by the ID of the admin who made the API requests",
                "key": "adminId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "path",
                "in": "query",
                "description": "Filter the results by the path of the API requests",
                "key": "path",
                "source": "query"
            },
            {
                "type": "string",
                "name": "method",
                "in": "query",
                "description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')",
                "key": "method",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "responseCode",
                "in": "query",
                "description": "Filter the results by the response code of the API requests",
                "key": "responseCode",
                "source": "query"
            },
            {
                "type": "string",
                "name": "sourceIp",
                "in": "query",
                "description": "Filter the results by the IP address of the originating API request",
                "key": "sourceIp",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "apiRequests",
            "overview"
        ],
        "method": "get",
        "description": "Return an aggregated overview of API requests data",
        "url": "/organizations/{organizationId}/apiRequests/overview",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "security",
            "events"
        ],
        "method": "get",
        "description": "List the security events for an organization",
        "url": "/organizations/{organizationId}/appliance/security/events",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "ascending",
                    "descending"
                ],
                "name": "sortOrder",
                "in": "query",
                "description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.",
                "key": "sortOrder",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "security",
            "intrusion"
        ],
        "method": "get",
        "description": "Returns all supported intrusion settings for an organization",
        "url": "/organizations/{organizationId}/appliance/security/intrusion",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "security",
            "intrusion"
        ],
        "method": "put",
        "description": "Sets supported intrusion settings for an organization",
        "url": "/organizations/{organizationId}/appliance/security/intrusion",
        "params": [{
            "name": "updateOrganizationApplianceSecurityIntrusion",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "allowedRules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ruleId": {
                                    "type": "string",
                                    "description": "A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET"
                                }
                            },
                            "required": [
                                "ruleId"
                            ]
                        },
                        "description": "Sets a list of specific SNORT® signatures to allow"
                    }
                },
                "example": {
                    "allowedRules": [{
                            "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                            "message": "SQL sa login failed"
                        },
                        {
                            "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                            "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                        }
                    ]
                },
                "required": [
                    "allowedRules"
                ]
            },
            "required": true,
            "key": "updateOrganizationApplianceSecurityIntrusion",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "uplink",
            "statuses"
        ],
        "method": "get",
        "description": "List the uplink status of every Meraki MX and Z series appliances in the organization",
        "url": "/organizations/{organizationId}/appliance/uplink/statuses",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "vpn",
            "stats"
        ],
        "method": "get",
        "description": "Show VPN history stat for networks in an organization",
        "url": "/organizations/{organizationId}/appliance/vpn/stats",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "networkIds",
                "in": "query",
                "description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
                "key": "networkIds",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "monitor",
            "vpn",
            "statuses"
        ],
        "method": "get",
        "description": "Show VPN status for networks in an organization",
        "url": "/organizations/{organizationId}/appliance/vpn/statuses",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "networkIds",
                "in": "query",
                "description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
                "key": "networkIds",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "thirdPartyVPNPeers"
        ],
        "method": "get",
        "description": "Return the third party VPN peers for an organization",
        "url": "/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "thirdPartyVPNPeers"
        ],
        "method": "put",
        "description": "Update the third party VPN peers for an organization",
        "url": "/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers",
        "params": [{
            "name": "updateOrganizationApplianceVpnThirdPartyVPNPeers",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "peers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the VPN peer"
                                },
                                "publicIp": {
                                    "type": "string",
                                    "description": "The public IP of the VPN peer"
                                },
                                "remoteId": {
                                    "type": "string",
                                    "description": "[optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN."
                                },
                                "myUserFqdn": {
                                    "type": "string",
                                    "description": "[optional] The user FQDN to use to identify the MX to the peer. This will apply to all MXs this peer applies to."
                                },
                                "privateSubnets": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The list of the private subnets of the VPN peer"
                                },
                                "ipsecPolicies": {
                                    "type": "object",
                                    "properties": {
                                        "ikeCipherAlgo": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
                                        },
                                        "ikeAuthAlgo": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                                        },
                                        "ikePrfAlgo": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "prfsha256",
                                                    "prfsha1",
                                                    "prfmd5",
                                                    "default"
                                                ]
                                            },
                                            "description": "[optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm."
                                        },
                                        "ikeDiffieHellmanGroup": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'"
                                        },
                                        "ikeLifetime": {
                                            "type": "integer",
                                            "description": "The lifetime of the Phase 1 SA in seconds."
                                        },
                                        "childCipherAlgo": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
                                        },
                                        "childAuthAlgo": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                                        },
                                        "childPfsGroup": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'"
                                        },
                                        "childLifetime": {
                                            "type": "integer",
                                            "description": "The lifetime of the Phase 2 SA in seconds."
                                        }
                                    },
                                    "description": "Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used."
                                },
                                "ipsecPoliciesPreset": {
                                    "type": "string",
                                    "description": "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
                                },
                                "secret": {
                                    "type": "string",
                                    "description": "The shared secret with the VPN peer"
                                },
                                "ikeVersion": {
                                    "type": "string",
                                    "enum": [
                                        "1",
                                        "2"
                                    ],
                                    "description": "[optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.",
                                    "default": "1"
                                },
                                "networkTags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all']."
                                }
                            },
                            "required": [
                                "name",
                                "publicIp",
                                "privateSubnets",
                                "secret"
                            ]
                        },
                        "description": "The list of VPN peers"
                    }
                },
                "example": {
                    "peers": [{
                            "name": "My peer 1",
                            "publicIp": "123.123.123.1",
                            "privateSubnets": [
                                "192.168.1.0/24",
                                "192.168.128.0/24"
                            ],
                            "secret": "asdf1234",
                            "ikeVersion": "2",
                            "ipsecPolicies": {
                                "ikeCipherAlgo": [
                                    "tripledes"
                                ],
                                "ikeAuthAlgo": [
                                    "sha1"
                                ],
                                "ikePrfAlgo": [
                                    "prfsha1"
                                ],
                                "ikeDiffieHellmanGroup": [
                                    "group2"
                                ],
                                "ikeLifetime": 28800,
                                "childCipherAlgo": [
                                    "aes128"
                                ],
                                "childAuthAlgo": [
                                    "sha1"
                                ],
                                "childPfsGroup": [
                                    "disabled"
                                ],
                                "childLifetime": 28800
                            },
                            "networkTags": [
                                "all"
                            ]
                        },
                        {
                            "name": "My peer 2",
                            "publicIp": "123.123.123.2",
                            "remoteId": "miles@meraki.com",
                            "privateSubnets": [
                                "192.168.2.0/24",
                                "192.168.129.0/24"
                            ],
                            "secret": "asdf56785678567856785678",
                            "networkTags": [
                                "none"
                            ],
                            "ikeVersion": "1",
                            "ipsecPoliciesPreset": "default"
                        }
                    ]
                },
                "required": [
                    "peers"
                ]
            },
            "required": true,
            "key": "updateOrganizationApplianceVpnThirdPartyVPNPeers",
            "source": "body"
        }]
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "vpnFirewallRules"
        ],
        "method": "get",
        "description": "Return the firewall rules for an organization's site-to-site VPN",
        "url": "/organizations/{organizationId}/appliance/vpn/vpnFirewallRules",
        "params": []
    },
    {
        "tags": [
            "appliance",
            "configure",
            "vpn",
            "vpnFirewallRules"
        ],
        "method": "put",
        "description": "Update the firewall rules of an organization's site-to-site VPN",
        "url": "/organizations/{organizationId}/appliance/vpn/vpnFirewallRules",
        "params": [{
            "name": "updateOrganizationApplianceVpnVpnFirewallRules",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "string",
                                    "description": "Description of the rule (optional)"
                                },
                                "policy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ],
                                    "description": "'allow' or 'deny' traffic specified by this rule"
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "tcp",
                                        "udp",
                                        "icmp",
                                        "any"
                                    ],
                                    "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                },
                                "srcPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "srcCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)"
                                },
                                "destPort": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                },
                                "destCidr": {
                                    "type": "string",
                                    "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)"
                                },
                                "syslogEnabled": {
                                    "type": "boolean",
                                    "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                }
                            },
                            "required": [
                                "policy",
                                "protocol",
                                "srcCidr",
                                "destCidr"
                            ]
                        },
                        "description": "An ordered array of the firewall rules (not including the default rule)"
                    },
                    "syslogDefaultRule": {
                        "type": "boolean",
                        "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                    }
                },
                "example": {
                    "rules": [{
                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                        "policy": "allow",
                        "protocol": "tcp",
                        "destPort": 443,
                        "destCidr": "192.168.1.0/24",
                        "srcPort": "Any",
                        "srcCidr": "Any",
                        "syslogEnabled": false
                    }]
                }
            },
            "key": "updateOrganizationApplianceVpnVpnFirewallRules",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "brandingPolicies"
        ],
        "method": "get",
        "description": "List the branding policies of an organization",
        "url": "/organizations/{organizationId}/brandingPolicies",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "brandingPolicies"
        ],
        "method": "post",
        "description": "Add a new branding policy to an organization",
        "url": "/organizations/{organizationId}/brandingPolicies",
        "params": [{
            "name": "createOrganizationBrandingPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Dashboard branding policy."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether this policy is enabled."
                    },
                    "adminSettings": {
                        "type": "object",
                        "properties": {
                            "appliesTo": {
                                "type": "string",
                                "enum": [
                                    "All organization admins",
                                    "All enterprise admins",
                                    "All network admins",
                                    "All admins of networks...",
                                    "All admins of networks tagged...",
                                    "Specific admins...",
                                    "All admins",
                                    "All SAML admins"
                                ],
                                "description": "Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'."
                            },
                            "values": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "    If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of\n    entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of\n    networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',\n    specify an array of tag names.\n"
                            }
                        },
                        "description": "Settings for describing which kinds of admins this policy applies to."
                    },
                    "helpSettings": {
                        "type": "object",
                        "properties": {
                            "helpTab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding\n    customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "getHelpSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note\n    that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,\n    and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "communitySubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "casesSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one\n    of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "dataProtectionRequestsSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can\n    be audited. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "getHelpSubtabKnowledgeBaseSearch": {
                                "type": "string",
                                "description": "    The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                            },
                            "universalSearchKnowledgeBaseSearch": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures\n    whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "ciscoMerakiProductDocumentation": {
                                "type": "string",
                                "description": "    The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                            },
                            "supportContactInfo": {
                                "type": "string",
                                "description": "    The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                            },
                            "newFeaturesSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "firewallInfoSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are\n    listed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "apiDocsSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                            },
                            "hardwareReplacementsSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                            },
                            "smForums": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for\n    organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            }
                        },
                        "description": "    Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n Each property defaults to 'default or inherit' when not provided."
                    }
                },
                "example": {
                    "brandingPolicyId": "456",
                    "name": "My Branding Policy",
                    "enabled": true,
                    "adminSettings": {
                        "appliesTo": "All admins of networks...",
                        "values": [
                            "N_1234",
                            "L_5678"
                        ]
                    },
                    "helpSettings": {
                        "helpTab": "show",
                        "getHelpSubtab": "default or inherit",
                        "communitySubtab": "show",
                        "casesSubtab": "hide",
                        "dataProtectionRequestsSubtab": "default or inherit",
                        "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                        "universalSearchKnowledgeBaseSearch": "hide",
                        "ciscoMerakiProductDocumentation": "show",
                        "supportContactInfo": "show",
                        "newFeaturesSubtab": "show",
                        "firewallInfoSubtab": "hide",
                        "apiDocsSubtab": "default or inherit",
                        "hardwareReplacementsSubtab": "hide",
                        "smForums": "hide"
                    }
                },
                "required": [
                    "name",
                    "enabled",
                    "adminSettings"
                ]
            },
            "required": true,
            "key": "createOrganizationBrandingPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "brandingPolicies",
            "priorities"
        ],
        "method": "get",
        "description": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).",
        "url": "/organizations/{organizationId}/brandingPolicies/priorities",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "brandingPolicies",
            "priorities"
        ],
        "method": "put",
        "description": "Update the priority ordering of an organization's branding policies.",
        "url": "/organizations/{organizationId}/brandingPolicies/priorities",
        "params": [{
            "name": "updateOrganizationBrandingPoliciesPriorities",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "brandingPolicyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority)."
                    }
                },
                "example": {
                    "brandingPolicyIds": [
                        "123",
                        "456",
                        "789"
                    ]
                },
                "required": [
                    "brandingPolicyIds"
                ]
            },
            "required": true,
            "key": "updateOrganizationBrandingPoliciesPriorities",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "brandingPolicies"
        ],
        "method": "get",
        "description": "Return a branding policy",
        "url": "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "brandingPolicies"
        ],
        "method": "put",
        "description": "Update a branding policy",
        "url": "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "params": [{
            "name": "updateOrganizationBrandingPolicy",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Dashboard branding policy."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether this policy is enabled."
                    },
                    "adminSettings": {
                        "type": "object",
                        "properties": {
                            "appliesTo": {
                                "type": "string",
                                "enum": [
                                    "All organization admins",
                                    "All enterprise admins",
                                    "All network admins",
                                    "All admins of networks...",
                                    "All admins of networks tagged...",
                                    "Specific admins...",
                                    "All admins",
                                    "All SAML admins"
                                ],
                                "description": "Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'."
                            },
                            "values": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "    If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of\n    entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of\n    networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',\n    specify an array of tag names.\n"
                            }
                        },
                        "description": "Settings for describing which kinds of admins this policy applies to."
                    },
                    "helpSettings": {
                        "type": "object",
                        "properties": {
                            "helpTab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding\n    customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "getHelpSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note\n    that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,\n    and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "communitySubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "casesSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one\n    of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "dataProtectionRequestsSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can\n    be audited. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "getHelpSubtabKnowledgeBaseSearch": {
                                "type": "string",
                                "description": "    The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                            },
                            "universalSearchKnowledgeBaseSearch": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures\n    whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "ciscoMerakiProductDocumentation": {
                                "type": "string",
                                "description": "    The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                            },
                            "supportContactInfo": {
                                "type": "string",
                                "description": "    The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                            },
                            "newFeaturesSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "firewallInfoSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are\n    listed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            },
                            "apiDocsSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                            },
                            "hardwareReplacementsSubtab": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                            },
                            "smForums": {
                                "type": "string",
                                "enum": [
                                    "default or inherit",
                                    "hide",
                                    "show"
                                ],
                                "description": "    The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for\n    organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                            }
                        },
                        "description": "    Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n"
                    }
                },
                "example": {
                    "brandingPolicyId": "456",
                    "name": "My Branding Policy",
                    "enabled": true,
                    "adminSettings": {
                        "appliesTo": "All admins of networks...",
                        "values": [
                            "N_1234",
                            "L_5678"
                        ]
                    },
                    "helpSettings": {
                        "helpTab": "show",
                        "getHelpSubtab": "default or inherit",
                        "communitySubtab": "show",
                        "casesSubtab": "hide",
                        "dataProtectionRequestsSubtab": "default or inherit",
                        "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                        "universalSearchKnowledgeBaseSearch": "hide",
                        "ciscoMerakiProductDocumentation": "show",
                        "supportContactInfo": "show",
                        "newFeaturesSubtab": "show",
                        "firewallInfoSubtab": "hide",
                        "apiDocsSubtab": "default or inherit",
                        "hardwareReplacementsSubtab": "hide",
                        "smForums": "hide"
                    }
                }
            },
            "key": "updateOrganizationBrandingPolicy",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "brandingPolicies"
        ],
        "method": "delete",
        "description": "Delete a branding policy",
        "url": "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure"
        ],
        "method": "post",
        "description": "Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.",
        "url": "/organizations/{organizationId}/claim",
        "params": [{
            "name": "claimIntoOrganization",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The numbers of the orders that should be claimed"
                    },
                    "serials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The serials of the devices that should be claimed"
                    },
                    "licenses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "description": "The key of the license"
                                },
                                "mode": {
                                    "type": "string",
                                    "enum": [
                                        "addDevices",
                                        "renew"
                                    ],
                                    "description": "Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is legacy and only applies to coterm licensing; it should not be specified when claiming per-device licenses. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information."
                                }
                            },
                            "required": [
                                "key"
                            ]
                        },
                        "description": "The licenses that should be claimed"
                    }
                },
                "example": {
                    "orders": [
                        "4CXXXXXXX"
                    ],
                    "serials": [
                        "Q234-ABCD-5678"
                    ],
                    "licenses": [{
                        "key": "Z2XXXXXXXXXX",
                        "mode": "addDevices"
                    }]
                }
            },
            "key": "claimIntoOrganization",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure"
        ],
        "method": "post",
        "description": "Create a new organization by cloning the addressed organization",
        "url": "/organizations/{organizationId}/clone",
        "params": [{
            "name": "cloneOrganization",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new organization"
                    }
                },
                "example": {
                    "name": "My organization"
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "cloneOrganization",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "configTemplates"
        ],
        "method": "get",
        "description": "List the configuration templates for this organization",
        "url": "/organizations/{organizationId}/configTemplates",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "configTemplates"
        ],
        "method": "post",
        "description": "Create a new configuration template",
        "url": "/organizations/{organizationId}/configTemplates",
        "params": [{
            "name": "createOrganizationConfigTemplate",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the configuration template"
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article</a>. Not applicable if copying from existing network or template"
                    },
                    "copyFromNetworkId": {
                        "type": "string",
                        "description": "The ID of the network or config template to copy configuration from"
                    }
                },
                "example": {
                    "name": "My config template",
                    "timeZone": "America/Los_Angeles"
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createOrganizationConfigTemplate",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "configTemplates"
        ],
        "method": "put",
        "description": "Update a configuration template",
        "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
        "params": [{
            "name": "updateOrganizationConfigTemplate",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the configuration template"
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                    }
                },
                "example": {
                    "name": "My config template",
                    "timeZone": "America/Los_Angeles"
                }
            },
            "key": "updateOrganizationConfigTemplate",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "configTemplates"
        ],
        "method": "delete",
        "description": "Remove a configuration template",
        "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "configTemplates"
        ],
        "method": "get",
        "description": "Return a single configuration template",
        "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "configTemplates",
            "profiles"
        ],
        "method": "get",
        "description": "List the switch profiles for your switch template configuration",
        "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "configTemplates",
            "profiles",
            "ports"
        ],
        "method": "get",
        "description": "Return all the ports of a switch profile",
        "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "configTemplates",
            "profiles",
            "ports"
        ],
        "method": "get",
        "description": "Return a switch profile port",
        "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}",
        "params": []
    },
    {
        "tags": [
            "switch",
            "configure",
            "configTemplates",
            "profiles",
            "ports"
        ],
        "method": "put",
        "description": "Update a switch profile port",
        "url": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}",
        "params": [{
            "name": "updateOrganizationConfigTemplateSwitchProfilePort",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the switch profile port"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags of the switch profile port"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The status of the switch profile port"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "trunk",
                            "access"
                        ],
                        "description": "The type of the switch profile port ('trunk' or 'access')"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "The VLAN of the switch profile port. A null value will clear the value set for trunk ports."
                    },
                    "voiceVlan": {
                        "type": "integer",
                        "description": "The voice VLAN of the switch profile port. Only applicable to access ports"
                    },
                    "allowedVlans": {
                        "type": "string",
                        "description": "The VLANs allowed on the switch profile port. Only applicable to trunk ports"
                    },
                    "poeEnabled": {
                        "type": "boolean",
                        "description": "The PoE status of the switch profile port"
                    },
                    "isolationEnabled": {
                        "type": "boolean",
                        "description": "The isolation status of the switch profile port"
                    },
                    "rstpEnabled": {
                        "type": "boolean",
                        "description": "The rapid spanning tree protocol status"
                    },
                    "stpGuard": {
                        "type": "string",
                        "enum": [
                            "disabled",
                            "root guard",
                            "bpdu guard",
                            "loop guard"
                        ],
                        "description": "The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard')"
                    },
                    "linkNegotiation": {
                        "type": "string",
                        "description": "The link speed for the switch profile port"
                    },
                    "portScheduleId": {
                        "type": "string",
                        "description": "The ID of the port schedule. A value of null will clear the port schedule."
                    },
                    "udld": {
                        "type": "string",
                        "enum": [
                            "Alert only",
                            "Enforce"
                        ],
                        "description": "The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only."
                    },
                    "accessPolicyType": {
                        "type": "string",
                        "enum": [
                            "Open",
                            "Custom access policy",
                            "MAC allow list",
                            "Sticky MAC allow list"
                        ],
                        "description": "The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'"
                    },
                    "accessPolicyNumber": {
                        "type": "integer",
                        "description": "The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'"
                    },
                    "macAllowList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'"
                    },
                    "stickyMacAllowList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                    },
                    "stickyMacAllowListLimit": {
                        "type": "integer",
                        "description": "The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                    },
                    "stormControlEnabled": {
                        "type": "boolean",
                        "description": "The storm control status of the switch profile port"
                    },
                    "flexibleStackingEnabled": {
                        "type": "boolean",
                        "description": "For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled."
                    }
                },
                "example": {
                    "name": "My switch port",
                    "tags": [
                        "tag1",
                        "tag2"
                    ],
                    "enabled": true,
                    "poeEnabled": true,
                    "type": "access",
                    "vlan": 10,
                    "voiceVlan": 20,
                    "isolationEnabled": false,
                    "rstpEnabled": true,
                    "stpGuard": "disabled",
                    "linkNegotiation": "Auto negotiate",
                    "portScheduleId": "1234",
                    "udld": "Alert only",
                    "accessPolicyType": "Sticky MAC allow list",
                    "stickyMacAllowList": [
                        "34:56:fe:ce:8e:b0",
                        "34:56:fe:ce:8e:b1"
                    ],
                    "stickyMacAllowListLimit": 5,
                    "stormControlEnabled": true
                }
            },
            "key": "updateOrganizationConfigTemplateSwitchProfilePort",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "configurationChanges"
        ],
        "method": "get",
        "description": "View the Change Log for your organization",
        "url": "/organizations/{organizationId}/configurationChanges",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "networkId",
                "in": "query",
                "description": "Filters on the given network",
                "key": "networkId",
                "source": "query"
            },
            {
                "type": "string",
                "name": "adminId",
                "in": "query",
                "description": "Filters on the given Admin",
                "key": "adminId",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "devices"
        ],
        "method": "get",
        "description": "List the devices in an organization",
        "url": "/organizations/{organizationId}/devices",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "configurationUpdatedAfter",
                "in": "query",
                "description": "Filter results by whether or not the device's configuration has been updated after the given timestamp",
                "key": "configurationUpdatedAfter",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "devices",
            "statuses"
        ],
        "method": "get",
        "description": "List the status of every Meraki device in the organization",
        "url": "/organizations/{organizationId}/devices/statuses",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "devices",
            "uplinksLossAndLatency"
        ],
        "method": "get",
        "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
        "url": "/organizations/{organizationId}/devices/uplinksLossAndLatency",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "wan1",
                    "wan2",
                    "cellular"
                ],
                "name": "uplink",
                "in": "query",
                "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.",
                "key": "uplink",
                "source": "query"
            },
            {
                "type": "string",
                "name": "ip",
                "in": "query",
                "description": "Optional filter for a specific destination IP. Default will return all destination IPs.",
                "key": "ip",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "httpServers"
        ],
        "method": "get",
        "description": "List the HTTP servers for this organization",
        "url": "/organizations/{organizationId}/httpServers",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "httpServers"
        ],
        "method": "post",
        "description": "Add an HTTP server to an organization",
        "url": "/organizations/{organizationId}/httpServers",
        "params": [{
            "name": "createOrganizationHttpServer",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name for easy reference to the HTTP server"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the HTTP server"
                    },
                    "sharedSecret": {
                        "type": "string",
                        "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki."
                    },
                    "payloadTemplate": {
                        "type": "string",
                        "enum": [
                            "Meraki"
                        ],
                        "description": "The name of the payload template to use when posting data to the HTTP server. Defaults to the 'Meraki' template.",
                        "default": "Meraki"
                    }
                },
                "example": {
                    "name": "My HTTP server",
                    "url": "https://www.example.com/webhooks",
                    "sharedSecret": "foobar"
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "required": true,
            "key": "createOrganizationHttpServer",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "httpServers",
            "webhookTests"
        ],
        "method": "post",
        "description": "Send a test webhook for an organization",
        "url": "/organizations/{organizationId}/httpServers/webhookTests",
        "params": [{
            "name": "createOrganizationHttpServersWebhookTest",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL where the test webhook will be sent"
                    },
                    "sharedSecret": {
                        "type": "string",
                        "description": "The shared secret the test webhook will send. Optional. Defaults to an empty string.",
                        "default": ""
                    }
                },
                "example": {
                    "url": "https://www.example.com/path"
                },
                "required": [
                    "url"
                ]
            },
            "required": true,
            "key": "createOrganizationHttpServersWebhookTest",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "httpServers",
            "webhookTests"
        ],
        "method": "get",
        "description": "Return the status of a webhook test for an organization",
        "url": "/organizations/{organizationId}/httpServers/webhookTests/{id}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "httpServers"
        ],
        "method": "get",
        "description": "Return an HTTP server for an organization",
        "url": "/organizations/{organizationId}/httpServers/{id}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "httpServers"
        ],
        "method": "put",
        "description": "Update an HTTP server for an organization",
        "url": "/organizations/{organizationId}/httpServers/{id}",
        "params": [{
            "name": "updateOrganizationHttpServer",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name for easy reference to the HTTP server"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the HTTP server"
                    },
                    "sharedSecret": {
                        "type": "string",
                        "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki."
                    },
                    "payloadTemplate": {
                        "type": "string",
                        "enum": [
                            "Meraki"
                        ],
                        "description": "The name of the payload template to use when posting data to the HTTP server. Defaults to the 'Meraki' template."
                    }
                },
                "example": {
                    "name": "My HTTP server",
                    "url": "https://www.example.com/webhooks",
                    "sharedSecret": "foobar"
                }
            },
            "key": "updateOrganizationHttpServer",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "httpServers"
        ],
        "method": "delete",
        "description": "Delete an HTTP server from an organization",
        "url": "/organizations/{organizationId}/httpServers/{id}",
        "params": []
    },
    {
        "tags": [
            "insight",
            "configure",
            "monitoredMediaServers"
        ],
        "method": "get",
        "description": "List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.",
        "url": "/organizations/{organizationId}/insight/monitoredMediaServers",
        "params": []
    },
    {
        "tags": [
            "insight",
            "configure",
            "monitoredMediaServers"
        ],
        "method": "post",
        "description": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.",
        "url": "/organizations/{organizationId}/insight/monitoredMediaServers",
        "params": [{
            "name": "createOrganizationInsightMonitoredMediaServer",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the VoIP provider"
                    },
                    "address": {
                        "type": "string",
                        "description": "The IP address (IPv4 only) or hostname of the media server to monitor"
                    },
                    "bestEffortMonitoringEnabled": {
                        "type": "boolean",
                        "description": "Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead."
                    }
                },
                "example": {
                    "name": "Sample VoIP Provider",
                    "address": "123.123.123.1",
                    "bestEffortMonitoringEnabled": true
                },
                "required": [
                    "name",
                    "address"
                ]
            },
            "required": true,
            "key": "createOrganizationInsightMonitoredMediaServer",
            "source": "body"
        }]
    },
    {
        "tags": [
            "insight",
            "configure",
            "monitoredMediaServers"
        ],
        "method": "get",
        "description": "Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
        "url": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
        "params": []
    },
    {
        "tags": [
            "insight",
            "configure",
            "monitoredMediaServers"
        ],
        "method": "put",
        "description": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
        "url": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
        "params": [{
            "name": "updateOrganizationInsightMonitoredMediaServer",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the VoIP provider"
                    },
                    "address": {
                        "type": "string",
                        "description": "The IP address (IPv4 only) or hostname of the media server to monitor"
                    },
                    "bestEffortMonitoringEnabled": {
                        "type": "boolean",
                        "description": "Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead."
                    }
                },
                "example": {
                    "name": "Sample VoIP Provider",
                    "address": "123.123.123.1",
                    "bestEffortMonitoringEnabled": true
                }
            },
            "key": "updateOrganizationInsightMonitoredMediaServer",
            "source": "body"
        }]
    },
    {
        "tags": [
            "insight",
            "conf,igure",
            "monitoredMediaServers"
        ],
        "method": "delete",
        "description": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.",
        "url": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "inventoryDevices"
        ],
        "method": "get",
        "description": "Return the device inventory for an organization",
        "url": "/organizations/{organizationId}/inventoryDevices",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "used",
                    "unused"
                ],
                "name": "usedState",
                "in": "query",
                "description": "Filter results by used or unused inventory. Accepted values are \"used\" or \"unused\".",
                "key": "usedState",
                "source": "query"
            },
            {
                "type": "string",
                "name": "search",
                "in": "query",
                "description": "Search for devices in inventory based on serial number, mac address, or model.",
                "key": "search",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "inventoryDevices",
            "overview"
        ],
        "method": "get",
        "description": "Return the aggregated overview of an organization's device inventory",
        "url": "/organizations/{organizationId}/inventoryDevices/overview",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "inventoryDevices"
        ],
        "method": "get",
        "description": "Return a single device from the inventory of an organization",
        "url": "/organizations/{organizationId}/inventoryDevices/{serial}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "licenses"
        ],
        "method": "get",
        "description": "List the licenses for an organization",
        "url": "/organizations/{organizationId}/licenses",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "deviceSerial",
                "in": "query",
                "description": "Filter the licenses to those assigned to a particular device",
                "key": "deviceSerial",
                "source": "query"
            },
            {
                "type": "string",
                "name": "networkId",
                "in": "query",
                "description": "Filter the licenses to those assigned in a particular network",
                "key": "networkId",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "active",
                    "expired",
                    "expiring",
                    "unused",
                    "unusedActive",
                    "recentlyQueued"
                ],
                "name": "state",
                "in": "query",
                "description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'unused', 'unusedActive' or 'recentlyQueued'",
                "key": "state",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "licenses"
        ],
        "method": "post",
        "description": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
        "url": "/organizations/{organizationId}/licenses/assignSeats",
        "params": [{
            "name": "assignOrganizationLicensesSeats",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "licenseId": {
                        "type": "string",
                        "description": "The ID of the SM license to assign seats from"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The ID of the SM network to assign the seats to"
                    },
                    "seatCount": {
                        "type": "integer",
                        "description": "The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license"
                    }
                },
                "example": {
                    "licenseId": "1234",
                    "networkId": "N_24329156",
                    "seatCount": 20
                },
                "required": [
                    "licenseId",
                    "networkId",
                    "seatCount"
                ]
            },
            "required": true,
            "key": "assignOrganizationLicensesSeats",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "licenses",
            "expiration"
        ],
        "method": "get",
        "description": "Return the aggregated expiration information of an organization's licenses",
        "url": "/organizations/{organizationId}/licenses/expiration",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "licenses"
        ],
        "method": "post",
        "description": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
        "url": "/organizations/{organizationId}/licenses/move",
        "params": [{
            "name": "moveOrganizationLicenses",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "destOrganizationId": {
                        "type": "string",
                        "description": "The ID of the organization to move the licenses to"
                    },
                    "licenseIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs of licenses to move to the new organization"
                    }
                },
                "example": {
                    "destOrganizationId": "2930418",
                    "licenseIds": [
                        "123",
                        "456"
                    ]
                },
                "required": [
                    "destOrganizationId",
                    "licenseIds"
                ]
            },
            "required": true,
            "key": "moveOrganizationLicenses",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "licenses"
        ],
        "method": "post",
        "description": "Move SM seats to another organization",
        "url": "/organizations/{organizationId}/licenses/moveSeats",
        "params": [{
            "name": "moveOrganizationLicensesSeats",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "destOrganizationId": {
                        "type": "string",
                        "description": "The ID of the organization to move the SM seats to"
                    },
                    "licenseId": {
                        "type": "string",
                        "description": "The ID of the SM license to move the seats from"
                    },
                    "seatCount": {
                        "type": "integer",
                        "description": "The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license"
                    }
                },
                "example": {
                    "destOrganizationId": "2930418",
                    "licenseId": "1234",
                    "seatCount": 20
                },
                "required": [
                    "destOrganizationId",
                    "licenseId",
                    "seatCount"
                ]
            },
            "required": true,
            "key": "moveOrganizationLicensesSeats",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "licenses",
            "overview"
        ],
        "method": "get",
        "description": "Return an overview of the license state for an organization",
        "url": "/organizations/{organizationId}/licenses/overview",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "licenses"
        ],
        "method": "post",
        "description": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
        "url": "/organizations/{organizationId}/licenses/renewSeats",
        "params": [{
            "name": "renewOrganizationLicensesSeats",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "licenseIdToRenew": {
                        "type": "string",
                        "description": "The ID of the SM license to renew. This license must already be assigned to an SM network"
                    },
                    "unusedLicenseId": {
                        "type": "string",
                        "description": "The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'"
                    }
                },
                "example": {
                    "licenseIdToRenew": "123",
                    "unusedLicenseId": "1234"
                },
                "required": [
                    "licenseIdToRenew",
                    "unusedLicenseId"
                ]
            },
            "required": true,
            "key": "renewOrganizationLicensesSeats",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "licenses"
        ],
        "method": "get",
        "description": "Display a license",
        "url": "/organizations/{organizationId}/licenses/{licenseId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "licenses"
        ],
        "method": "put",
        "description": "Update a license",
        "url": "/organizations/{organizationId}/licenses/{licenseId}",
        "params": [{
            "name": "updateOrganizationLicense",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "deviceSerial": {
                        "type": "string",
                        "description": "The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license."
                    }
                },
                "example": {}
            },
            "key": "updateOrganizationLicense",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "loginSecurity"
        ],
        "method": "get",
        "description": "Returns the login security settings for an organization.",
        "url": "/organizations/{organizationId}/loginSecurity",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "loginSecurity"
        ],
        "method": "put",
        "description": "Update the login security settings for an organization",
        "url": "/organizations/{organizationId}/loginSecurity",
        "params": [{
            "name": "updateOrganizationLoginSecurity",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enforcePasswordExpiration": {
                        "type": "boolean",
                        "description": "Boolean indicating whether users are forced to change their password every X number of days."
                    },
                    "passwordExpirationDays": {
                        "type": "integer",
                        "description": "Number of days after which users will be forced to change their password."
                    },
                    "enforceDifferentPasswords": {
                        "type": "boolean",
                        "description": "Boolean indicating whether users, when setting a new password, are forced to choose a new password that is different from any past passwords."
                    },
                    "numDifferentPasswords": {
                        "type": "integer",
                        "description": "Number of recent passwords that new password must be distinct from."
                    },
                    "enforceStrongPasswords": {
                        "type": "boolean",
                        "description": "Boolean indicating whether users will be forced to choose strong passwords for their accounts. Strong passwords are at least 8 characters that contain 3 of the following: number, uppercase letter, lowercase letter, and symbol"
                    },
                    "enforceAccountLockout": {
                        "type": "boolean",
                        "description": "Boolean indicating whether users' Dashboard accounts will be locked out after a specified number of consecutive failed login attempts."
                    },
                    "accountLockoutAttempts": {
                        "type": "integer",
                        "description": "Number of consecutive failed login attempts after which users' accounts will be locked."
                    },
                    "enforceIdleTimeout": {
                        "type": "boolean",
                        "description": "Boolean indicating whether users will be logged out after being idle for the specified number of minutes."
                    },
                    "idleTimeoutMinutes": {
                        "type": "integer",
                        "description": "Number of minutes users can remain idle before being logged out of their accounts."
                    },
                    "enforceTwoFactorAuth": {
                        "type": "boolean",
                        "description": "Boolean indicating whether users in this organization will be required to use an extra verification code when logging in to Dashboard. This code will be sent to their mobile phone via SMS, or can be generated by the Google Authenticator application."
                    },
                    "enforceLoginIpRanges": {
                        "type": "boolean",
                        "description": "Boolean indicating whether organization will restrict access to Dashboard (including the API) from certain IP addresses."
                    },
                    "loginIpRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets."
                    }
                },
                "example": {}
            },
            "key": "updateOrganizationLoginSecurity",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjectGroups"
        ],
        "method": "get",
        "description": "Lists Network Object Groups belonging to the organization.",
        "url": "/organizations/{organizationId}/networkObjectGroups",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjectGroups"
        ],
        "method": "post",
        "description": "Creates a new Network Object Group.",
        "url": "/organizations/{organizationId}/networkObjectGroups",
        "params": [{
            "name": "createOrganizationNetworkObjectGroup",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)"
                    },
                    "networkObjectIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of Network Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Network Objects)"
                    }
                },
                "example": {
                    "name": "Web Servers - Datacenter 10",
                    "networkObjectIds": []
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createOrganizationNetworkObjectGroup",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjectGroups"
        ],
        "method": "get",
        "description": "Shows details of a Network Object Group.",
        "url": "/organizations/{organizationId}/networkObjectGroups/{networkObjectGroupId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjectGroups"
        ],
        "method": "put",
        "description": "Updates a Network Object Group.",
        "url": "/organizations/{organizationId}/networkObjectGroups/{networkObjectGroupId}",
        "params": [{
            "name": "updateOrganizationNetworkObjectGroup",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)"
                    },
                    "networkObjectIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of Network Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Network Objects)"
                    }
                },
                "example": {
                    "name": "Web Servers - Datacenter 10",
                    "networkObjectIds": []
                }
            },
            "key": "updateOrganizationNetworkObjectGroup",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjectGroups"
        ],
        "method": "delete",
        "description": "Deletes a Network Object Group.",
        "url": "/organizations/{organizationId}/networkObjectGroups/{networkObjectGroupId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjects"
        ],
        "method": "get",
        "description": "Lists Network Objects belonging to the organization.",
        "url": "/organizations/{organizationId}/networkObjects",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjects"
        ],
        "method": "post",
        "description": "Creates a new Network Object.",
        "url": "/organizations/{organizationId}/networkObjects",
        "params": [{
            "name": "createOrganizationNetworkObject",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of a network object, unique within the organization (alphanumeric, space, dash, or underscore characters only)"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a network object (one of: \"ipv4Cidr\", \"ipv4Ip\", \"fqdn\")"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of a network object (e.g. \"1.2.3.4\", \"10.11.12.1/24\")"
                    },
                    "networkObjectGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The IDs of network object groups the network object belongs to"
                    }
                },
                "example": {
                    "name": "Web Servers - Datacenter 10",
                    "type": "ipv4Cidr",
                    "value": "10.0.0.0/24",
                    "networkObjectGroupIds": []
                },
                "required": [
                    "name",
                    "type",
                    "value"
                ]
            },
            "required": true,
            "key": "createOrganizationNetworkObject",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjects"
        ],
        "method": "get",
        "description": "Shows details of a Network Object.",
        "url": "/organizations/{organizationId}/networkObjects/{networkObjectId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjects"
        ],
        "method": "put",
        "description": "Updates a Network Object.",
        "url": "/organizations/{organizationId}/networkObjects/{networkObjectId}",
        "params": [{
            "name": "updateOrganizationNetworkObject",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of a network object, unique within the organization (alphanumeric, space, dash, or underscore characters only)"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a network object (one of: \"ipv4Cidr\", \"ipv4Ip\", \"fqdn\")"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of a network object (e.g. \"1.2.3.4\", \"10.11.12.1/24\")"
                    },
                    "networkObjectGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The IDs of network object groups the network object belongs to"
                    }
                },
                "example": {
                    "name": "Web Servers - Datacenter 10",
                    "type": "ipv4Cidr",
                    "value": "10.0.0.0/24",
                    "networkObjectGroupIds": []
                }
            },
            "key": "updateOrganizationNetworkObject",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networkObjects"
        ],
        "method": "delete",
        "description": "Deletes a Network Object.",
        "url": "/organizations/{organizationId}/networkObjects/{networkObjectId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networks"
        ],
        "method": "get",
        "description": "List the networks that the user has privileges on in an organization",
        "url": "/organizations/{organizationId}/networks",
        "params": [{
                "type": "string",
                "name": "configTemplateId",
                "in": "query",
                "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template.",
                "key": "configTemplateId",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "tags",
                "in": "query",
                "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
                "key": "tags",
                "source": "query"
            },
            {
                "type": "string",
                "enum": [
                    "withAnyTags",
                    "withAllTags"
                ],
                "name": "tagsFilterType",
                "in": "query",
                "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
                "key": "tagsFilterType",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "productTypes",
                "in": "query",
                "description": "An optional parameter to filter networks by product type. Results will have at least one of the included product types.",
                "key": "productTypes",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networks"
        ],
        "method": "post",
        "description": "Create a network",
        "url": "/organizations/{organizationId}/networks",
        "params": [{
            "name": "createOrganizationNetwork",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new network"
                    },
                    "productTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "wireless",
                                "appliance",
                                "switch",
                                "systemsManager",
                                "camera",
                                "cellularGateway",
                                "environmental"
                            ]
                        },
                        "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, environmental. If more than one type is included, the network will be a combined network."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to be applied to the network"
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                    },
                    "copyFromNetworkId": {
                        "type": "string",
                        "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                    },
                    "notes": {
                        "type": "string",
                        "description": "Add any notes or additional information about this network here."
                    }
                },
                "example": {
                    "name": "Long Island Office",
                    "timeZone": "America/Los_Angeles",
                    "tags": [
                        "tag1",
                        "tag2"
                    ],
                    "productTypes": [
                        "appliance",
                        "switch",
                        "camera"
                    ]
                },
                "required": [
                    "name",
                    "productTypes"
                ]
            },
            "required": true,
            "key": "createOrganizationNetwork",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "networks"
        ],
        "method": "post",
        "description": "Combine multiple networks into a single network",
        "url": "/organizations/{organizationId}/networks/combine",
        "params": [{
            "name": "combineOrganizationNetworks",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the combined network"
                    },
                    "networkIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network"
                    },
                    "enrollmentString": {
                        "type": "string",
                        "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted."
                    }
                },
                "example": {
                    "name": "Long Island Office",
                    "networkIds": [
                        "N_1234",
                        "N_5678"
                    ]
                },
                "required": [
                    "name",
                    "networkIds"
                ]
            },
            "required": true,
            "key": "combineOrganizationNetworks",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "openapiSpec"
        ],
        "method": "get",
        "description": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
        "url": "/organizations/{organizationId}/openapiSpec",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "permissionScopes"
        ],
        "method": "get",
        "description": "List the permissions scopes for this organization",
        "url": "/organizations/{organizationId}/permissionScopes",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "permissionScopes"
        ],
        "method": "get",
        "description": "Retrieve a single permission scope",
        "url": "/organizations/{organizationId}/permissionScopes/{permissionScopeId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "roles"
        ],
        "method": "get",
        "description": "List all the roles in this organization",
        "url": "/organizations/{organizationId}/roles",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "roles"
        ],
        "method": "post",
        "description": "Creates new role for this organization.",
        "url": "/organizations/{organizationId}/roles",
        "params": [{
            "name": "createOrganizationRole",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new role. Must be unique. This parameter is required."
                    },
                    "appliedOnDevices": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Device tag."
                                },
                                "inNetworksWithTag": {
                                    "type": "string",
                                    "description": "Network tag scope"
                                },
                                "permissionScopeId": {
                                    "type": "string",
                                    "description": "Permission scope id"
                                }
                            },
                            "required": [
                                "tag",
                                "permissionScopeId"
                            ]
                        },
                        "description": "Device tag on which this specified permission is applied."
                    },
                    "appliedOnNetworks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Network tag"
                                },
                                "permissionScopeId": {
                                    "type": "string",
                                    "description": "Permission scope id"
                                }
                            },
                            "required": [
                                "tag",
                                "permissionScopeId"
                            ]
                        },
                        "description": "Network tag on which this specified permission is applied."
                    },
                    "appliedOrgWide": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "permissionScopeId": {
                                    "type": "string",
                                    "description": "Permission scope id"
                                }
                            },
                            "required": [
                                "permissionScopeId"
                            ]
                        },
                        "description": "Permissions to be applied org wide."
                    }
                },
                "example": {
                    "name": "Security_Guard",
                    "appliedOnDevices": [{
                        "tag": "reception-desk",
                        "permissionScopeId": "1"
                    }],
                    "appliedOnNetworks": [{
                        "tag": "building-a",
                        "permissionScopeId": "2"
                    }],
                    "appliedOrgWide": [{
                        "tag": "building-a",
                        "permissionScopeId": "2"
                    }]
                },
                "required": [
                    "name"
                ]
            },
            "required": true,
            "key": "createOrganizationRole",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "roles"
        ],
        "method": "get",
        "description": "Retrieve a single role",
        "url": "/organizations/{organizationId}/roles/{roleId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "roles"
        ],
        "method": "delete",
        "description": "Delete an existing role for this organization.",
        "url": "/organizations/{organizationId}/roles/{roleId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "roles"
        ],
        "method": "put",
        "description": "Update an existing role in this organization.",
        "url": "/organizations/{organizationId}/roles/{roleId}",
        "params": [{
            "name": "updateOrganizationRole",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new role. Must be unique."
                    },
                    "appliedOnDevices": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Device tag."
                                },
                                "inNetworksWithTag": {
                                    "type": "string",
                                    "description": "Network tag scope"
                                },
                                "permissionScopeId": {
                                    "type": "string",
                                    "description": "Permission scope id"
                                }
                            },
                            "required": [
                                "tag",
                                "permissionScopeId"
                            ]
                        },
                        "description": "Device tag on which this specified permission is applied."
                    },
                    "appliedOnNetworks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Network tag"
                                },
                                "permissionScopeId": {
                                    "type": "string",
                                    "description": "Permission scope id"
                                }
                            },
                            "required": [
                                "tag",
                                "permissionScopeId"
                            ]
                        },
                        "description": "Network tag on which this specified permission is applied."
                    },
                    "appliedOrgWide": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "permissionScopeId": {
                                    "type": "string",
                                    "description": "Permission scope id"
                                }
                            },
                            "required": [
                                "permissionScopeId"
                            ]
                        },
                        "description": "Permissions to be applied org wide."
                    }
                },
                "example": {
                    "name": "Security_Guard",
                    "appliedOnDevices": [{
                        "tag": "reception-desk",
                        "permissionScopeId": "1"
                    }],
                    "appliedOnNetworks": [{
                        "tag": "building-a",
                        "permissionScopeId": "2"
                    }],
                    "appliedOrgWide": [{
                        "tag": "building-a",
                        "permissionScopeId": "2"
                    }]
                }
            },
            "key": "updateOrganizationRole",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "saml"
        ],
        "method": "get",
        "description": "Returns the SAML SSO enabled settings for an organization.",
        "url": "/organizations/{organizationId}/saml",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "saml"
        ],
        "method": "put",
        "description": "Updates the SAML SSO enabled settings for an organization.",
        "url": "/organizations/{organizationId}/saml",
        "params": [{
            "name": "updateOrganizationSaml",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean for updating SAML SSO enabled settings."
                    }
                },
                "example": {
                    "enabled": true
                }
            },
            "key": "updateOrganizationSaml",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "saml",
            "idps"
        ],
        "method": "get",
        "description": "List the SAML IdPs in your organization.",
        "url": "/organizations/{organizationId}/saml/idps",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "saml",
            "idps"
        ],
        "method": "post",
        "description": "Create a SAML IdP for your organization.",
        "url": "/organizations/{organizationId}/saml/idps",
        "params": [{
            "name": "createOrganizationSamlIdp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "x509certSha1Fingerprint": {
                        "type": "string",
                        "description": "Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation."
                    },
                    "sloLogoutUrl": {
                        "type": "string",
                        "description": "Dashboard will redirect users to this URL when they sign out."
                    }
                },
                "example": {
                    "idpId": "ab0c1de23Fg",
                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                    "sloLogoutUrl": "https://somewhere.com"
                },
                "required": [
                    "x509certSha1Fingerprint"
                ]
            },
            "required": true,
            "key": "createOrganizationSamlIdp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "saml",
            "idps"
        ],
        "method": "put",
        "description": "Update a SAML IdP in your organization",
        "url": "/organizations/{organizationId}/saml/idps/{idpId}",
        "params": [{
            "name": "updateOrganizationSamlIdp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "x509certSha1Fingerprint": {
                        "type": "string",
                        "description": "Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation."
                    },
                    "sloLogoutUrl": {
                        "type": "string",
                        "description": "Dashboard will redirect users to this URL when they sign out."
                    }
                },
                "example": {
                    "idpId": "ab0c1de23Fg",
                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                    "sloLogoutUrl": "https://somewhere.com"
                }
            },
            "key": "updateOrganizationSamlIdp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "saml",
            "idps"
        ],
        "method": "get",
        "description": "Get a SAML IdP from your organization.",
        "url": "/organizations/{organizationId}/saml/idps/{idpId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "saml",
            "idps"
        ],
        "method": "delete",
        "description": "Remove a SAML IdP in your organization.",
        "url": "/organizations/{organizationId}/saml/idps/{idpId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "samlRoles"
        ],
        "method": "get",
        "description": "List the SAML roles for this organization",
        "url": "/organizations/{organizationId}/samlRoles",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "samlRoles"
        ],
        "method": "post",
        "description": "Create a SAML role",
        "url": "/organizations/{organizationId}/samlRoles",
        "params": [{
            "name": "createOrganizationSamlRole",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "The role of the SAML administrator"
                    },
                    "orgAccess": {
                        "type": "string",
                        "enum": [
                            "none",
                            "read-only",
                            "full"
                        ],
                        "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "The name of the tag"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "tag",
                                "access"
                            ]
                        },
                        "description": "The list of tags that the SAML administrator has privleges on"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The network ID"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "id",
                                "access"
                            ]
                        },
                        "description": "The list of networks that the SAML administrator has privileges on"
                    }
                },
                "example": {
                    "role": "myrole",
                    "orgAccess": "none",
                    "networks": [{
                        "id": "N_1234",
                        "access": "full"
                    }],
                    "tags": [{
                        "tag": "west",
                        "access": "read-only"
                    }]
                },
                "required": [
                    "role",
                    "orgAccess"
                ]
            },
            "required": true,
            "key": "createOrganizationSamlRole",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "samlRoles"
        ],
        "method": "get",
        "description": "Return a SAML role",
        "url": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "samlRoles"
        ],
        "method": "put",
        "description": "Update a SAML role",
        "url": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "params": [{
            "name": "updateOrganizationSamlRole",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "The role of the SAML administrator"
                    },
                    "orgAccess": {
                        "type": "string",
                        "enum": [
                            "none",
                            "read-only",
                            "full"
                        ],
                        "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "The name of the tag"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "tag",
                                "access"
                            ]
                        },
                        "description": "The list of tags that the SAML administrator has privleges on"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The network ID"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "guest-ambassador",
                                        "monitor-only"
                                    ],
                                    "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"
                                }
                            },
                            "required": [
                                "id",
                                "access"
                            ]
                        },
                        "description": "The list of networks that the SAML administrator has privileges on"
                    }
                },
                "example": {
                    "orgAccess": "none",
                    "networks": [{
                        "id": "N_1234",
                        "access": "full"
                    }],
                    "tags": [{
                        "tag": "west",
                        "access": "read-only"
                    }]
                }
            },
            "key": "updateOrganizationSamlRole",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "samlRoles"
        ],
        "method": "delete",
        "description": "Remove a SAML role",
        "url": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "apnsCert"
        ],
        "method": "get",
        "description": "Get the organization's APNS certificate",
        "url": "/organizations/{organizationId}/sm/apnsCert",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "vppAccounts"
        ],
        "method": "get",
        "description": "List the VPP accounts in the organization",
        "url": "/organizations/{organizationId}/sm/vppAccounts",
        "params": []
    },
    {
        "tags": [
            "sm",
            "configure",
            "vppAccounts"
        ],
        "method": "get",
        "description": "Get a hash containing the unparsed token of the VPP account with the given ID",
        "url": "/organizations/{organizationId}/sm/vppAccounts/{vppAccountId}",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "snmp"
        ],
        "method": "get",
        "description": "Return the SNMP settings for an organization",
        "url": "/organizations/{organizationId}/snmp",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "snmp"
        ],
        "method": "put",
        "description": "Update the SNMP settings for an organization",
        "url": "/organizations/{organizationId}/snmp",
        "params": [{
            "name": "updateOrganizationSnmp",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "v2cEnabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether SNMP version 2c is enabled for the organization."
                    },
                    "v3Enabled": {
                        "type": "boolean",
                        "description": "Boolean indicating whether SNMP version 3 is enabled for the organization."
                    },
                    "v3AuthMode": {
                        "type": "string",
                        "enum": [
                            "MD5",
                            "SHA"
                        ],
                        "description": "The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'."
                    },
                    "v3AuthPass": {
                        "type": "string",
                        "description": "The SNMP version 3 authentication password. Must be at least 8 characters if specified."
                    },
                    "v3PrivMode": {
                        "type": "string",
                        "enum": [
                            "DES",
                            "AES128"
                        ],
                        "description": "The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'."
                    },
                    "v3PrivPass": {
                        "type": "string",
                        "description": "The SNMP version 3 privacy password. Must be at least 8 characters if specified."
                    },
                    "peerIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IPv4 addresses that are allowed to access the SNMP server."
                    }
                },
                "example": {
                    "v2cEnabled": false,
                    "v3Enabled": true,
                    "v3AuthMode": "SHA",
                    "v3PrivMode": "AES128",
                    "peerIps": [
                        "123.123.123.1"
                    ]
                }
            },
            "key": "updateOrganizationSnmp",
            "source": "body"
        }]
    },
    {
        "tags": [
            "switch",
            "configure",
            "devices"
        ],
        "method": "post",
        "description": "Clone port-level and some switch-level configuration settings from a source switch to one or more target switches. Cloned settings include: Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration, STP Bridge priority, Port Mirroring",
        "url": "/organizations/{organizationId}/switch/devices/clone",
        "params": [{
            "name": "cloneOrganizationSwitchDevices",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "sourceSerial": {
                        "type": "string",
                        "description": "Serial number of the source switch (must be on a network not bound to a template)"
                    },
                    "targetSerials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of serial numbers of one or more target switches (must be on a network not bound to a template)"
                    }
                },
                "example": {
                    "sourceSerial": "Q234-ABCD-5678",
                    "targetSerials": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                    ]
                },
                "required": [
                    "sourceSerial",
                    "targetSerials"
                ]
            },
            "required": true,
            "key": "cloneOrganizationSwitchDevices",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "umbrella",
            "policies"
        ],
        "method": "get",
        "description": "Return a list of Umbrella protection policies available for applying on an SSID or Group Policy",
        "url": "/organizations/{organizationId}/umbrella/policies",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "configure",
            "users"
        ],
        "method": "get",
        "description": "List the users in an organization",
        "url": "/organizations/{organizationId}/users",
        "params": [{
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "systemsManager",
                        "activeDirectory",
                        "appleManaged",
                        "googleOauth",
                        "azureOauth",
                        "oauth",
                        "androidForWork",
                        "merakiAuth"
                    ]
                },
                "name": "sources",
                "in": "query",
                "description": "Only return users data from these auth sources",
                "key": "sources",
                "source": "query"
            },
            {
                "type": "boolean",
                "name": "sspEnabled",
                "in": "query",
                "description": "Only return users with the specified access to the Self Service Portal",
                "key": "sspEnabled",
                "source": "query"
            },
            {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "name": "networkId",
                "in": "query",
                "description": "Networks where the user can authenticate",
                "key": "networkId",
                "source": "query"
            }
        ]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "users"
        ],
        "method": "post",
        "description": "Update a single network end user",
        "url": "/organizations/{organizationId}/users",
        "params": [{
            "name": "createOrganizationUsers",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address of the user (cannot be modified)"
                    },
                    "fullName": {
                        "type": "string",
                        "description": "Full name of the user"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of the user"
                    },
                    "tags": {
                        "type": "string",
                        "description": "A space-separated list of tags to be applied to the user"
                    },
                    "sspEnabled": {
                        "type": "boolean",
                        "description": "Enable access to the Self Service Portal. If specified, the request must also include a networkId."
                    },
                    "networkId": {
                        "type": "string",
                        "description": "Network where Self Service Portal access is enabled"
                    }
                },
                "example": {},
                "required": [
                    "email"
                ]
            },
            "required": true,
            "key": "createOrganizationUsers",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "users",
            "detail"
        ],
        "method": "get",
        "description": "Return a single network end user",
        "url": "/organizations/{organizationId}/users/detail",
        "params": [{
            "type": "string",
            "name": "email",
            "in": "query",
            "required": true,
            "description": "Email address of the user",
            "key": "email",
            "source": "query"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "users"
        ],
        "method": "delete",
        "description": "Delete a single Meraki managed end user",
        "url": "/organizations/{organizationId}/users/{userId}",
        "params": [{
            "name": "deleteOrganizationUser",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "networkId": {
                        "type": "string",
                        "description": "Network where user can authenticate"
                    }
                },
                "example": {}
            },
            "key": "deleteOrganizationUser",
            "source": "body"
        }]
    },
    {
        "tags": [
            "organizations",
            "configure",
            "webhooks",
            "alertTypes"
        ],
        "method": "get",
        "description": "Return a list of alert types to be used with managing webhook alerts",
        "url": "/organizations/{organizationId}/webhooks/alertTypes",
        "params": []
    },
    {
        "tags": [
            "organizations",
            "monitor",
            "webhooks",
            "logs"
        ],
        "method": "get",
        "description": "Return the log of webhook POSTs sent",
        "url": "/organizations/{organizationId}/webhooks/logs",
        "params": [{
                "type": "string",
                "name": "t0",
                "in": "query",
                "description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today.",
                "key": "t0",
                "source": "query"
            },
            {
                "type": "string",
                "name": "t1",
                "in": "query",
                "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
                "key": "t1",
                "source": "query"
            },
            {
                "type": "number",
                "format": "float",
                "name": "timespan",
                "in": "query",
                "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                "key": "timespan",
                "source": "query"
            },
            {
                "type": "integer",
                "name": "perPage",
                "in": "query",
                "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
                "key": "perPage",
                "source": "query"
            },
            {
                "type": "string",
                "name": "startingAfter",
                "in": "query",
                "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "startingAfter",
                "source": "query"
            },
            {
                "type": "string",
                "name": "endingBefore",
                "in": "query",
                "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
                "key": "endingBefore",
                "source": "query"
            },
            {
                "type": "string",
                "name": "url",
                "in": "query",
                "description": "The URL the webhook was sent to",
                "key": "url",
                "source": "query"
            }
        ]
    }
];


// User Input

const tags = [ 'appliance', 'monitor']

let results = filterRequestsByTags(tags, requests)
results.forEach(r => {
    console.log('results tags', r.tags)
})

// Filter Requests by Tags

function filterRequestsByTags(tags, requests) {
    return requests.filter(r => {
        for (let [index, val] of tags.entries()) {
            if(r.tags[index] != val){
                return
            }
        }
        return r
    })
}


// Example NAV selectors
const selectorA = new Set(filterRequestsByTags(tags, requests).map(r => r.tags[0]))
console.log('selectorA', selectorA)

const selectorB = new Set(filterRequestsByTags(tags, requests).map(r => r.tags[1]))
console.log('selectorB', selectorB)

const selectorC = new Set(filterRequestsByTags(tags, requests).map(r => r.tags[2]))
console.log('selectorC', selectorC)

// function filteredSpecByGroup() {
//     let tags = [
//       this.selectedGroupA,
//       this.selectedGroupB,
//       this.selectedGroupC,
//     ];
//     let requests = this.spec.request;
//     let items = new Set(this.filterRequestsByTags(tags, requests));
//     let filtered = { ...this.spec };
//     filtered.request = [...items];

//     return filtered;
//   }


